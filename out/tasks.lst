ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   3              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   4              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   5              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   6              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   7              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
   8              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
   9              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  10              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  11              		.file	"tasks.c"
  12              	@ GNU C89 (bleeding-edge-toolchain) version 6.3.0 (arm-none-eabi)
  13              	@	compiled by GNU C version 6.2.1 20160830, GMP version 6.1.2, MPFR version 3.1.5, MPC version 1.0.
  14              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  15              	@ options passed:  -I . -I Setup -I RtosV611 -I RtosV611/Source
  16              	@ -I RtosV611/Source/include -I RtosV611/Source/portable/GCC/ARM_CM3
  17              	@ -I RtosV611/Source/portable/MemMang -I RtosV611/Common/include
  18              	@ -imultilib armv7-m
  19              	@ -iprefix c:\stm32\arm-none-eabi-gcc-6.3.0-170107\bin\../lib/gcc/arm-none-eabi/6.3.0/
  20              	@ -isysroot c:\stm32\arm-none-eabi-gcc-6.3.0-170107\bin\../arm-none-eabi
  21              	@ -MD out/tasks.d -MF out/tasks.d -MP -MQ out/tasks.o -D__USES_INITFINI__
  22              	@ RtosV611/Source/tasks.c -mcpu=cortex-m3 -mthumb
  23              	@ -auxbase-strip out/tasks.o -g -ggdb3 -O0 -Wall -Wstrict-prototypes
  24              	@ -Wextra -std=gnu90 -ffunction-sections -fdata-sections -fverbose-asm
  25              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  26              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  27              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  28              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  29              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  30              	@ -fdata-sections -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  31              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse
  32              	@ -ffunction-sections -fgcse-lm -fgnu-runtime -fgnu-unique -fident
  33              	@ -finline-atomics -fira-hoist-pressure -fira-share-save-slots
  34              	@ -fira-share-spill-slots -fivopts -fkeep-static-consts
  35              	@ -fleading-underscore -flifetime-dse -flto-odr-type-merging -fmath-errno
  36              	@ -fmerge-debug-strings -fpeephole -fplt -fprefetch-loop-arrays
  37              	@ -freg-struct-return -fsched-critical-path-heuristic
  38              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  39              	@ -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
  40              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
  41              	@ -fsemantic-interposition -fshow-column -fsigned-zeros
  42              	@ -fsplit-ivs-in-unroller -fssa-backprop -fstdarg-opt
  43              	@ -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math -ftree-cselim
  44              	@ -ftree-forwprop -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  45              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop
  46              	@ -ftree-reassoc -ftree-scev-cprop -funit-at-a-time -fverbose-asm
  47              	@ -fzero-initialized-in-bss -masm-syntax-unified -mfix-cortex-m3-ldrd
  48              	@ -mlittle-endian -mpic-data-is-text-relative -msched-prolog -mthumb
  49              	@ -munaligned-access -mvectorize-with-neon-quad
  50              	
  51              		.text
  52              	.Ltext0:
  53              		.cfi_sections	.debug_frame
  54              		.global	pxCurrentTCB
  55              		.section	.bss.pxCurrentTCB,"aw",%nobits
  56              		.align	2
  57              		.type	pxCurrentTCB, %object
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 2


  58              		.size	pxCurrentTCB, 4
  59              	pxCurrentTCB:
  60 0000 00000000 		.space	4
  61              		.section	.bss.pxReadyTasksLists,"aw",%nobits
  62              		.align	2
  63              		.type	pxReadyTasksLists, %object
  64              		.size	pxReadyTasksLists, 120
  65              	pxReadyTasksLists:
  66 0000 00000000 		.space	120
  66      00000000 
  66      00000000 
  66      00000000 
  66      00000000 
  67              		.section	.bss.xDelayedTaskList1,"aw",%nobits
  68              		.align	2
  69              		.type	xDelayedTaskList1, %object
  70              		.size	xDelayedTaskList1, 20
  71              	xDelayedTaskList1:
  72 0000 00000000 		.space	20
  72      00000000 
  72      00000000 
  72      00000000 
  72      00000000 
  73              		.section	.bss.xDelayedTaskList2,"aw",%nobits
  74              		.align	2
  75              		.type	xDelayedTaskList2, %object
  76              		.size	xDelayedTaskList2, 20
  77              	xDelayedTaskList2:
  78 0000 00000000 		.space	20
  78      00000000 
  78      00000000 
  78      00000000 
  78      00000000 
  79              		.section	.bss.pxDelayedTaskList,"aw",%nobits
  80              		.align	2
  81              		.type	pxDelayedTaskList, %object
  82              		.size	pxDelayedTaskList, 4
  83              	pxDelayedTaskList:
  84 0000 00000000 		.space	4
  85              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
  86              		.align	2
  87              		.type	pxOverflowDelayedTaskList, %object
  88              		.size	pxOverflowDelayedTaskList, 4
  89              	pxOverflowDelayedTaskList:
  90 0000 00000000 		.space	4
  91              		.section	.bss.xPendingReadyList,"aw",%nobits
  92              		.align	2
  93              		.type	xPendingReadyList, %object
  94              		.size	xPendingReadyList, 20
  95              	xPendingReadyList:
  96 0000 00000000 		.space	20
  96      00000000 
  96      00000000 
  96      00000000 
  96      00000000 
  97              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
  98              		.align	2
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 3


  99              		.type	xTasksWaitingTermination, %object
 100              		.size	xTasksWaitingTermination, 20
 101              	xTasksWaitingTermination:
 102 0000 00000000 		.space	20
 102      00000000 
 102      00000000 
 102      00000000 
 102      00000000 
 103              		.section	.bss.uxTasksDeleted,"aw",%nobits
 104              		.align	2
 105              		.type	uxTasksDeleted, %object
 106              		.size	uxTasksDeleted, 4
 107              	uxTasksDeleted:
 108 0000 00000000 		.space	4
 109              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 110              		.align	2
 111              		.type	xSuspendedTaskList, %object
 112              		.size	xSuspendedTaskList, 20
 113              	xSuspendedTaskList:
 114 0000 00000000 		.space	20
 114      00000000 
 114      00000000 
 114      00000000 
 114      00000000 
 115              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 116              		.align	2
 117              		.type	uxCurrentNumberOfTasks, %object
 118              		.size	uxCurrentNumberOfTasks, 4
 119              	uxCurrentNumberOfTasks:
 120 0000 00000000 		.space	4
 121              		.section	.bss.xTickCount,"aw",%nobits
 122              		.align	2
 123              		.type	xTickCount, %object
 124              		.size	xTickCount, 4
 125              	xTickCount:
 126 0000 00000000 		.space	4
 127              		.section	.bss.uxTopUsedPriority,"aw",%nobits
 128              		.align	2
 129              		.type	uxTopUsedPriority, %object
 130              		.size	uxTopUsedPriority, 4
 131              	uxTopUsedPriority:
 132 0000 00000000 		.space	4
 133              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 134              		.align	2
 135              		.type	uxTopReadyPriority, %object
 136              		.size	uxTopReadyPriority, 4
 137              	uxTopReadyPriority:
 138 0000 00000000 		.space	4
 139              		.section	.bss.xSchedulerRunning,"aw",%nobits
 140              		.align	2
 141              		.type	xSchedulerRunning, %object
 142              		.size	xSchedulerRunning, 4
 143              	xSchedulerRunning:
 144 0000 00000000 		.space	4
 145              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 146              		.align	2
 147              		.type	uxSchedulerSuspended, %object
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 4


 148              		.size	uxSchedulerSuspended, 4
 149              	uxSchedulerSuspended:
 150 0000 00000000 		.space	4
 151              		.section	.bss.uxMissedTicks,"aw",%nobits
 152              		.align	2
 153              		.type	uxMissedTicks, %object
 154              		.size	uxMissedTicks, 4
 155              	uxMissedTicks:
 156 0000 00000000 		.space	4
 157              		.section	.bss.xMissedYield,"aw",%nobits
 158              		.align	2
 159              		.type	xMissedYield, %object
 160              		.size	xMissedYield, 4
 161              	xMissedYield:
 162 0000 00000000 		.space	4
 163              		.section	.bss.xNumOfOverflows,"aw",%nobits
 164              		.align	2
 165              		.type	xNumOfOverflows, %object
 166              		.size	xNumOfOverflows, 4
 167              	xNumOfOverflows:
 168 0000 00000000 		.space	4
 169              		.section	.bss.uxTaskNumber,"aw",%nobits
 170              		.align	2
 171              		.type	uxTaskNumber, %object
 172              		.size	uxTaskNumber, 4
 173              	uxTaskNumber:
 174 0000 00000000 		.space	4
 175              		.section	.bss.pcStatsString,"aw",%nobits
 176              		.align	2
 177              		.type	pcStatsString, %object
 178              		.size	pcStatsString, 50
 179              	pcStatsString:
 180 0000 00000000 		.space	50
 180      00000000 
 180      00000000 
 180      00000000 
 180      00000000 
 181              		.section	.bss.ulTaskSwitchedInTime,"aw",%nobits
 182              		.align	2
 183              		.type	ulTaskSwitchedInTime, %object
 184              		.size	ulTaskSwitchedInTime, 4
 185              	ulTaskSwitchedInTime:
 186 0000 00000000 		.space	4
 187              		.section	.bss.pcTraceBuffer,"aw",%nobits
 188              		.align	2
 189              		.type	pcTraceBuffer, %object
 190              		.size	pcTraceBuffer, 4
 191              	pcTraceBuffer:
 192 0000 00000000 		.space	4
 193              		.section	.bss.pcTraceBufferStart,"aw",%nobits
 194              		.align	2
 195              		.type	pcTraceBufferStart, %object
 196              		.size	pcTraceBufferStart, 4
 197              	pcTraceBufferStart:
 198 0000 00000000 		.space	4
 199              		.section	.bss.pcTraceBufferEnd,"aw",%nobits
 200              		.align	2
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 5


 201              		.type	pcTraceBufferEnd, %object
 202              		.size	pcTraceBufferEnd, 4
 203              	pcTraceBufferEnd:
 204 0000 00000000 		.space	4
 205              		.section	.bss.xTracing,"aw",%nobits
 206              		.align	2
 207              		.type	xTracing, %object
 208              		.size	xTracing, 4
 209              	xTracing:
 210 0000 00000000 		.space	4
 211              		.section	.data.uxPreviousTask,"aw",%progbits
 212              		.align	2
 213              		.type	uxPreviousTask, %object
 214              		.size	uxPreviousTask, 4
 215              	uxPreviousTask:
 216 0000 FF000000 		.word	255
 217              		.section	.bss.pcStatusString,"aw",%nobits
 218              		.align	2
 219              		.type	pcStatusString, %object
 220              		.size	pcStatusString, 50
 221              	pcStatusString:
 222 0000 00000000 		.space	50
 222      00000000 
 222      00000000 
 222      00000000 
 222      00000000 
 223              		.section	.text.xTaskGenericCreate,"ax",%progbits
 224              		.align	1
 225              		.global	xTaskGenericCreate
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu softvfp
 230              		.type	xTaskGenericCreate, %function
 231              	xTaskGenericCreate:
 232              	.LFB1:
 233              		.file 1 "RtosV611/Source/tasks.c"
   1:RtosV611/Source/tasks.c **** /*
   2:RtosV611/Source/tasks.c ****     FreeRTOS V6.1.1 - Copyright (C) 2011 Real Time Engineers Ltd.
   3:RtosV611/Source/tasks.c **** 
   4:RtosV611/Source/tasks.c ****     ***************************************************************************
   5:RtosV611/Source/tasks.c ****     *                                                                         *
   6:RtosV611/Source/tasks.c ****     * If you are:                                                             *
   7:RtosV611/Source/tasks.c ****     *                                                                         *
   8:RtosV611/Source/tasks.c ****     *    + New to FreeRTOS,                                                   *
   9:RtosV611/Source/tasks.c ****     *    + Wanting to learn FreeRTOS or multitasking in general quickly       *
  10:RtosV611/Source/tasks.c ****     *    + Looking for basic training,                                        *
  11:RtosV611/Source/tasks.c ****     *    + Wanting to improve your FreeRTOS skills and productivity           *
  12:RtosV611/Source/tasks.c ****     *                                                                         *
  13:RtosV611/Source/tasks.c ****     * then take a look at the FreeRTOS books - available as PDF or paperback  *
  14:RtosV611/Source/tasks.c ****     *                                                                         *
  15:RtosV611/Source/tasks.c ****     *        "Using the FreeRTOS Real Time Kernel - a Practical Guide"        *
  16:RtosV611/Source/tasks.c ****     *                  http://www.FreeRTOS.org/Documentation                  *
  17:RtosV611/Source/tasks.c ****     *                                                                         *
  18:RtosV611/Source/tasks.c ****     * A pdf reference manual is also available.  Both are usually delivered   *
  19:RtosV611/Source/tasks.c ****     * to your inbox within 20 minutes to two hours when purchased between 8am *
  20:RtosV611/Source/tasks.c ****     * and 8pm GMT (although please allow up to 24 hours in case of            *
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 6


  21:RtosV611/Source/tasks.c ****     * exceptional circumstances).  Thank you for your support!                *
  22:RtosV611/Source/tasks.c ****     *                                                                         *
  23:RtosV611/Source/tasks.c ****     ***************************************************************************
  24:RtosV611/Source/tasks.c **** 
  25:RtosV611/Source/tasks.c ****     This file is part of the FreeRTOS distribution.
  26:RtosV611/Source/tasks.c **** 
  27:RtosV611/Source/tasks.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  28:RtosV611/Source/tasks.c ****     the terms of the GNU General Public License (version 2) as published by the
  29:RtosV611/Source/tasks.c ****     Free Software Foundation AND MODIFIED BY the FreeRTOS exception.
  30:RtosV611/Source/tasks.c ****     ***NOTE*** The exception to the GPL is included to allow you to distribute
  31:RtosV611/Source/tasks.c ****     a combined work that includes FreeRTOS without being obliged to provide the
  32:RtosV611/Source/tasks.c ****     source code for proprietary components outside of the FreeRTOS kernel.
  33:RtosV611/Source/tasks.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT
  34:RtosV611/Source/tasks.c ****     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  35:RtosV611/Source/tasks.c ****     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
  36:RtosV611/Source/tasks.c ****     more details. You should have received a copy of the GNU General Public
  37:RtosV611/Source/tasks.c ****     License and the FreeRTOS license exception along with FreeRTOS; if not it
  38:RtosV611/Source/tasks.c ****     can be viewed here: http://www.freertos.org/a00114.html and also obtained
  39:RtosV611/Source/tasks.c ****     by writing to Richard Barry, contact details for whom are available on the
  40:RtosV611/Source/tasks.c ****     FreeRTOS WEB site.
  41:RtosV611/Source/tasks.c **** 
  42:RtosV611/Source/tasks.c ****     1 tab == 4 spaces!
  43:RtosV611/Source/tasks.c **** 
  44:RtosV611/Source/tasks.c ****     http://www.FreeRTOS.org - Documentation, latest information, license and
  45:RtosV611/Source/tasks.c ****     contact details.
  46:RtosV611/Source/tasks.c **** 
  47:RtosV611/Source/tasks.c ****     http://www.SafeRTOS.com - A version that is certified for use in safety
  48:RtosV611/Source/tasks.c ****     critical systems.
  49:RtosV611/Source/tasks.c **** 
  50:RtosV611/Source/tasks.c ****     http://www.OpenRTOS.com - Commercial support, development, porting,
  51:RtosV611/Source/tasks.c ****     licensing and training services.
  52:RtosV611/Source/tasks.c **** */
  53:RtosV611/Source/tasks.c **** 
  54:RtosV611/Source/tasks.c **** 
  55:RtosV611/Source/tasks.c **** #include <stdio.h>
  56:RtosV611/Source/tasks.c **** #include <stdlib.h>
  57:RtosV611/Source/tasks.c **** #include <string.h>
  58:RtosV611/Source/tasks.c **** 
  59:RtosV611/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  60:RtosV611/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  61:RtosV611/Source/tasks.c **** task.h is included from an application file. */
  62:RtosV611/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  63:RtosV611/Source/tasks.c **** 
  64:RtosV611/Source/tasks.c **** #include "FreeRTOS.h"
  65:RtosV611/Source/tasks.c **** #include "task.h"
  66:RtosV611/Source/tasks.c **** #include "StackMacros.h"
  67:RtosV611/Source/tasks.c **** 
  68:RtosV611/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  69:RtosV611/Source/tasks.c **** 
  70:RtosV611/Source/tasks.c **** /*
  71:RtosV611/Source/tasks.c ****  * Macro to define the amount of stack available to the idle task.
  72:RtosV611/Source/tasks.c ****  */
  73:RtosV611/Source/tasks.c **** #define tskIDLE_STACK_SIZE	configMINIMAL_STACK_SIZE
  74:RtosV611/Source/tasks.c **** 
  75:RtosV611/Source/tasks.c **** /*
  76:RtosV611/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated to each task,
  77:RtosV611/Source/tasks.c ****  * and stores the context of the task.
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 7


  78:RtosV611/Source/tasks.c ****  */
  79:RtosV611/Source/tasks.c **** typedef struct tskTaskControlBlock
  80:RtosV611/Source/tasks.c **** {
  81:RtosV611/Source/tasks.c **** 	volatile portSTACK_TYPE	*pxTopOfStack;		/*< Points to the location of the last item placed on the 
  82:RtosV611/Source/tasks.c **** 
  83:RtosV611/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
  84:RtosV611/Source/tasks.c **** 		xMPU_SETTINGS xMPUSettings;				/*< The MPU settings are defined as part of the port layer.  THIS 
  85:RtosV611/Source/tasks.c **** 	#endif	
  86:RtosV611/Source/tasks.c **** 	
  87:RtosV611/Source/tasks.c **** 	xListItem				xGenericListItem;	/*< List item used to place the TCB in ready and blocked queues. */
  88:RtosV611/Source/tasks.c **** 	xListItem				xEventListItem;		/*< List item used to place the TCB in event lists. */
  89:RtosV611/Source/tasks.c **** 	unsigned portBASE_TYPE	uxPriority;			/*< The priority of the task where 0 is the lowest priority. 
  90:RtosV611/Source/tasks.c **** 	portSTACK_TYPE			*pxStack;			/*< Points to the start of the stack. */
  91:RtosV611/Source/tasks.c **** 	signed char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when c
  92:RtosV611/Source/tasks.c **** 
  93:RtosV611/Source/tasks.c **** 	#if ( portSTACK_GROWTH > 0 )
  94:RtosV611/Source/tasks.c **** 		portSTACK_TYPE *pxEndOfStack;			/*< Used for stack overflow checking on architectures where the s
  95:RtosV611/Source/tasks.c **** 	#endif
  96:RtosV611/Source/tasks.c **** 
  97:RtosV611/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
  98:RtosV611/Source/tasks.c **** 		unsigned portBASE_TYPE uxCriticalNesting;
  99:RtosV611/Source/tasks.c **** 	#endif
 100:RtosV611/Source/tasks.c **** 
 101:RtosV611/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 102:RtosV611/Source/tasks.c **** 		unsigned portBASE_TYPE	uxTCBNumber;	/*< This is used for tracing the scheduler and making debuggi
 103:RtosV611/Source/tasks.c **** 	#endif
 104:RtosV611/Source/tasks.c **** 
 105:RtosV611/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 106:RtosV611/Source/tasks.c **** 		unsigned portBASE_TYPE uxBasePriority;	/*< The priority last assigned to the task - used by the p
 107:RtosV611/Source/tasks.c **** 	#endif
 108:RtosV611/Source/tasks.c **** 
 109:RtosV611/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 110:RtosV611/Source/tasks.c **** 		pdTASK_HOOK_CODE pxTaskTag;
 111:RtosV611/Source/tasks.c **** 	#endif
 112:RtosV611/Source/tasks.c **** 
 113:RtosV611/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 114:RtosV611/Source/tasks.c **** 		unsigned long ulRunTimeCounter;		/*< Used for calculating how much CPU time each task is utilisin
 115:RtosV611/Source/tasks.c **** 	#endif
 116:RtosV611/Source/tasks.c **** 
 117:RtosV611/Source/tasks.c **** } tskTCB;
 118:RtosV611/Source/tasks.c **** 
 119:RtosV611/Source/tasks.c **** 
 120:RtosV611/Source/tasks.c **** /*
 121:RtosV611/Source/tasks.c ****  * Some kernel aware debuggers require data to be viewed to be global, rather
 122:RtosV611/Source/tasks.c ****  * than file scope.
 123:RtosV611/Source/tasks.c ****  */
 124:RtosV611/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 125:RtosV611/Source/tasks.c **** 	#define static
 126:RtosV611/Source/tasks.c **** #endif
 127:RtosV611/Source/tasks.c **** 
 128:RtosV611/Source/tasks.c **** /*lint -e956 */
 129:RtosV611/Source/tasks.c **** PRIVILEGED_DATA tskTCB * volatile pxCurrentTCB = NULL;
 130:RtosV611/Source/tasks.c **** 
 131:RtosV611/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 132:RtosV611/Source/tasks.c **** 
 133:RtosV611/Source/tasks.c **** PRIVILEGED_DATA static xList pxReadyTasksLists[ configMAX_PRIORITIES ];	/*< Prioritised ready tasks
 134:RtosV611/Source/tasks.c **** PRIVILEGED_DATA static xList xDelayedTaskList1;							/*< Delayed tasks. */
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 8


 135:RtosV611/Source/tasks.c **** PRIVILEGED_DATA static xList xDelayedTaskList2;							/*< Delayed tasks (two lists are used - one f
 136:RtosV611/Source/tasks.c **** PRIVILEGED_DATA static xList * volatile pxDelayedTaskList ;				/*< Points to the delayed task list 
 137:RtosV611/Source/tasks.c **** PRIVILEGED_DATA static xList * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task 
 138:RtosV611/Source/tasks.c **** PRIVILEGED_DATA static xList xPendingReadyList;							/*< Tasks that have been readied while the sc
 139:RtosV611/Source/tasks.c **** 
 140:RtosV611/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 141:RtosV611/Source/tasks.c **** 
 142:RtosV611/Source/tasks.c **** 	PRIVILEGED_DATA static volatile xList xTasksWaitingTermination;		/*< Tasks that have been deleted 
 143:RtosV611/Source/tasks.c **** 	PRIVILEGED_DATA static volatile unsigned portBASE_TYPE uxTasksDeleted = ( unsigned portBASE_TYPE )
 144:RtosV611/Source/tasks.c **** 
 145:RtosV611/Source/tasks.c **** #endif
 146:RtosV611/Source/tasks.c **** 
 147:RtosV611/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 148:RtosV611/Source/tasks.c **** 
 149:RtosV611/Source/tasks.c **** 	PRIVILEGED_DATA static xList xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 150:RtosV611/Source/tasks.c **** 
 151:RtosV611/Source/tasks.c **** #endif
 152:RtosV611/Source/tasks.c **** 
 153:RtosV611/Source/tasks.c **** /* File private variables. --------------------------------*/
 154:RtosV611/Source/tasks.c **** PRIVILEGED_DATA static volatile unsigned portBASE_TYPE uxCurrentNumberOfTasks 	= ( unsigned portBAS
 155:RtosV611/Source/tasks.c **** PRIVILEGED_DATA static volatile portTickType xTickCount 						= ( portTickType ) 0;
 156:RtosV611/Source/tasks.c **** PRIVILEGED_DATA static unsigned portBASE_TYPE uxTopUsedPriority	 				= tskIDLE_PRIORITY;
 157:RtosV611/Source/tasks.c **** PRIVILEGED_DATA static volatile unsigned portBASE_TYPE uxTopReadyPriority 		= tskIDLE_PRIORITY;
 158:RtosV611/Source/tasks.c **** PRIVILEGED_DATA static volatile signed portBASE_TYPE xSchedulerRunning 			= pdFALSE;
 159:RtosV611/Source/tasks.c **** PRIVILEGED_DATA static volatile unsigned portBASE_TYPE uxSchedulerSuspended	 	= ( unsigned portBASE
 160:RtosV611/Source/tasks.c **** PRIVILEGED_DATA static volatile unsigned portBASE_TYPE uxMissedTicks 			= ( unsigned portBASE_TYPE 
 161:RtosV611/Source/tasks.c **** PRIVILEGED_DATA static volatile portBASE_TYPE xMissedYield 						= ( portBASE_TYPE ) pdFALSE;
 162:RtosV611/Source/tasks.c **** PRIVILEGED_DATA static volatile portBASE_TYPE xNumOfOverflows 					= ( portBASE_TYPE ) 0;
 163:RtosV611/Source/tasks.c **** PRIVILEGED_DATA static unsigned portBASE_TYPE uxTaskNumber 						= ( unsigned portBASE_TYPE ) 0;
 164:RtosV611/Source/tasks.c **** 
 165:RtosV611/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 166:RtosV611/Source/tasks.c **** 
 167:RtosV611/Source/tasks.c **** 	PRIVILEGED_DATA static char pcStatsString[ 50 ] ;
 168:RtosV611/Source/tasks.c **** 	PRIVILEGED_DATA static unsigned long ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/co
 169:RtosV611/Source/tasks.c **** 	static void prvGenerateRunTimeStatsForTasksInList( const signed char *pcWriteBuffer, xList *pxList
 170:RtosV611/Source/tasks.c **** 
 171:RtosV611/Source/tasks.c **** #endif
 172:RtosV611/Source/tasks.c **** 
 173:RtosV611/Source/tasks.c **** /* Debugging and trace facilities private variables and macros. ------------*/
 174:RtosV611/Source/tasks.c **** 
 175:RtosV611/Source/tasks.c **** /*
 176:RtosV611/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
 177:RtosV611/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
 178:RtosV611/Source/tasks.c ****  */
 179:RtosV611/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5 )
 180:RtosV611/Source/tasks.c **** 
 181:RtosV611/Source/tasks.c **** /*
 182:RtosV611/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 183:RtosV611/Source/tasks.c ****  */
 184:RtosV611/Source/tasks.c **** #define tskBLOCKED_CHAR		( ( signed char ) 'B' )
 185:RtosV611/Source/tasks.c **** #define tskREADY_CHAR		( ( signed char ) 'R' )
 186:RtosV611/Source/tasks.c **** #define tskDELETED_CHAR		( ( signed char ) 'D' )
 187:RtosV611/Source/tasks.c **** #define tskSUSPENDED_CHAR	( ( signed char ) 'S' )
 188:RtosV611/Source/tasks.c **** 
 189:RtosV611/Source/tasks.c **** /*
 190:RtosV611/Source/tasks.c ****  * Macros and private variables used by the trace facility.
 191:RtosV611/Source/tasks.c ****  */
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 9


 192:RtosV611/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 193:RtosV611/Source/tasks.c **** 
 194:RtosV611/Source/tasks.c **** 	#define tskSIZE_OF_EACH_TRACE_LINE			( ( unsigned long ) ( sizeof( unsigned long ) + sizeof( unsig
 195:RtosV611/Source/tasks.c **** 	PRIVILEGED_DATA static volatile signed char * volatile pcTraceBuffer;
 196:RtosV611/Source/tasks.c **** 	PRIVILEGED_DATA static signed char *pcTraceBufferStart;
 197:RtosV611/Source/tasks.c **** 	PRIVILEGED_DATA static signed char *pcTraceBufferEnd;
 198:RtosV611/Source/tasks.c **** 	PRIVILEGED_DATA static signed portBASE_TYPE xTracing = pdFALSE;
 199:RtosV611/Source/tasks.c **** 	static unsigned portBASE_TYPE uxPreviousTask = 255;
 200:RtosV611/Source/tasks.c **** 	PRIVILEGED_DATA static char pcStatusString[ 50 ];
 201:RtosV611/Source/tasks.c **** 
 202:RtosV611/Source/tasks.c **** #endif
 203:RtosV611/Source/tasks.c **** 
 204:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
 205:RtosV611/Source/tasks.c **** 
 206:RtosV611/Source/tasks.c **** /*
 207:RtosV611/Source/tasks.c ****  * Macro that writes a trace of scheduler activity to a buffer.  This trace
 208:RtosV611/Source/tasks.c ****  * shows which task is running when and is very useful as a debugging tool.
 209:RtosV611/Source/tasks.c ****  * As this macro is called each context switch it is a good idea to undefine
 210:RtosV611/Source/tasks.c ****  * it if not using the facility.
 211:RtosV611/Source/tasks.c ****  */
 212:RtosV611/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 213:RtosV611/Source/tasks.c **** 
 214:RtosV611/Source/tasks.c **** 	#define vWriteTraceToBuffer()																	\
 215:RtosV611/Source/tasks.c **** 	{																								\
 216:RtosV611/Source/tasks.c **** 		if( xTracing )																				\
 217:RtosV611/Source/tasks.c **** 		{																							\
 218:RtosV611/Source/tasks.c **** 			if( uxPreviousTask != pxCurrentTCB->uxTCBNumber )										\
 219:RtosV611/Source/tasks.c **** 			{																						\
 220:RtosV611/Source/tasks.c **** 				if( ( pcTraceBuffer + tskSIZE_OF_EACH_TRACE_LINE ) < pcTraceBufferEnd )				\
 221:RtosV611/Source/tasks.c **** 				{																					\
 222:RtosV611/Source/tasks.c **** 					uxPreviousTask = pxCurrentTCB->uxTCBNumber;										\
 223:RtosV611/Source/tasks.c **** 					*( unsigned long * ) pcTraceBuffer = ( unsigned long ) xTickCount;		\
 224:RtosV611/Source/tasks.c **** 					pcTraceBuffer += sizeof( unsigned long );									\
 225:RtosV611/Source/tasks.c **** 					*( unsigned long * ) pcTraceBuffer = ( unsigned long ) uxPreviousTask;	\
 226:RtosV611/Source/tasks.c **** 					pcTraceBuffer += sizeof( unsigned long );									\
 227:RtosV611/Source/tasks.c **** 				}																					\
 228:RtosV611/Source/tasks.c **** 				else																				\
 229:RtosV611/Source/tasks.c **** 				{																					\
 230:RtosV611/Source/tasks.c **** 					xTracing = pdFALSE;																\
 231:RtosV611/Source/tasks.c **** 				}																					\
 232:RtosV611/Source/tasks.c **** 			}																						\
 233:RtosV611/Source/tasks.c **** 		}																							\
 234:RtosV611/Source/tasks.c **** 	}
 235:RtosV611/Source/tasks.c **** 
 236:RtosV611/Source/tasks.c **** #else
 237:RtosV611/Source/tasks.c **** 
 238:RtosV611/Source/tasks.c **** 	#define vWriteTraceToBuffer()
 239:RtosV611/Source/tasks.c **** 
 240:RtosV611/Source/tasks.c **** #endif
 241:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
 242:RtosV611/Source/tasks.c **** 
 243:RtosV611/Source/tasks.c **** /*
 244:RtosV611/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready queue for
 245:RtosV611/Source/tasks.c ****  * the task.  It is inserted at the end of the list.  One quirk of this is
 246:RtosV611/Source/tasks.c ****  * that if the task being inserted is at the same priority as the currently
 247:RtosV611/Source/tasks.c ****  * executing task, then it will only be rescheduled after the currently
 248:RtosV611/Source/tasks.c ****  * executing task has been rescheduled.
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 10


 249:RtosV611/Source/tasks.c ****  */
 250:RtosV611/Source/tasks.c **** #define prvAddTaskToReadyQueue( pxTCB )																			\
 251:RtosV611/Source/tasks.c **** {																												\
 252:RtosV611/Source/tasks.c **** 	if( pxTCB->uxPriority > uxTopReadyPriority )																\
 253:RtosV611/Source/tasks.c **** 	{																											\
 254:RtosV611/Source/tasks.c **** 		uxTopReadyPriority = pxTCB->uxPriority;																	\
 255:RtosV611/Source/tasks.c **** 	}																											\
 256:RtosV611/Source/tasks.c **** 	vListInsertEnd( ( xList * ) &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xGenericListIte
 257:RtosV611/Source/tasks.c **** }
 258:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
 259:RtosV611/Source/tasks.c **** 
 260:RtosV611/Source/tasks.c **** /*
 261:RtosV611/Source/tasks.c ****  * Macro that looks at the list of tasks that are currently delayed to see if
 262:RtosV611/Source/tasks.c ****  * any require waking.
 263:RtosV611/Source/tasks.c ****  *
 264:RtosV611/Source/tasks.c ****  * Tasks are stored in the queue in the order of their wake time - meaning
 265:RtosV611/Source/tasks.c ****  * once one tasks has been found whose timer has not expired we need not look
 266:RtosV611/Source/tasks.c ****  * any further down the list.
 267:RtosV611/Source/tasks.c ****  */
 268:RtosV611/Source/tasks.c **** #define prvCheckDelayedTasks()																						\
 269:RtosV611/Source/tasks.c **** {																													\
 270:RtosV611/Source/tasks.c **** register tskTCB *pxTCB;																								\
 271:RtosV611/Source/tasks.c **** 																													\
 272:RtosV611/Source/tasks.c **** 	while( ( pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ) ) != NULL )						\
 273:RtosV611/Source/tasks.c **** 	{																												\
 274:RtosV611/Source/tasks.c **** 		if( xTickCount < listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) ) )									\
 275:RtosV611/Source/tasks.c **** 		{																											\
 276:RtosV611/Source/tasks.c **** 			break;																									\
 277:RtosV611/Source/tasks.c **** 		}																											\
 278:RtosV611/Source/tasks.c **** 		vListRemove( &( pxTCB->xGenericListItem ) );																\
 279:RtosV611/Source/tasks.c **** 		/* Is the task waiting on an event also? */																	\
 280:RtosV611/Source/tasks.c **** 		if( pxTCB->xEventListItem.pvContainer )																		\
 281:RtosV611/Source/tasks.c **** 		{																											\
 282:RtosV611/Source/tasks.c **** 			vListRemove( &( pxTCB->xEventListItem ) );																\
 283:RtosV611/Source/tasks.c **** 		}																											\
 284:RtosV611/Source/tasks.c **** 		prvAddTaskToReadyQueue( pxTCB );																			\
 285:RtosV611/Source/tasks.c **** 	}																												\
 286:RtosV611/Source/tasks.c **** }
 287:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
 288:RtosV611/Source/tasks.c **** 
 289:RtosV611/Source/tasks.c **** /*
 290:RtosV611/Source/tasks.c ****  * Several functions take an xTaskHandle parameter that can optionally be NULL,
 291:RtosV611/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 292:RtosV611/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 293:RtosV611/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 294:RtosV611/Source/tasks.c ****  */
 295:RtosV611/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( pxHandle == NULL ) ? ( tskTCB * ) pxCurrentTCB : ( tskT
 296:RtosV611/Source/tasks.c **** 
 297:RtosV611/Source/tasks.c **** 
 298:RtosV611/Source/tasks.c **** /* File private functions. --------------------------------*/
 299:RtosV611/Source/tasks.c **** 
 300:RtosV611/Source/tasks.c **** /*
 301:RtosV611/Source/tasks.c ****  * Utility to ready a TCB for a given task.  Mainly just copies the parameters
 302:RtosV611/Source/tasks.c ****  * into the TCB structure.
 303:RtosV611/Source/tasks.c ****  */
 304:RtosV611/Source/tasks.c **** static void prvInitialiseTCBVariables( tskTCB *pxTCB, const signed char * const pcName, unsigned po
 305:RtosV611/Source/tasks.c **** 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 11


 306:RtosV611/Source/tasks.c **** /*
 307:RtosV611/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 308:RtosV611/Source/tasks.c ****  * automatically upon the creation of the first task.
 309:RtosV611/Source/tasks.c ****  */
 310:RtosV611/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 311:RtosV611/Source/tasks.c **** 
 312:RtosV611/Source/tasks.c **** /*
 313:RtosV611/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 314:RtosV611/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 315:RtosV611/Source/tasks.c ****  * creation of the first user task.
 316:RtosV611/Source/tasks.c ****  *
 317:RtosV611/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 318:RtosV611/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 319:RtosV611/Source/tasks.c ****  *
 320:RtosV611/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 321:RtosV611/Source/tasks.c ****  *
 322:RtosV611/Source/tasks.c ****  */
 323:RtosV611/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 324:RtosV611/Source/tasks.c **** 
 325:RtosV611/Source/tasks.c **** /*
 326:RtosV611/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 327:RtosV611/Source/tasks.c ****  * including the stack pointed to by the TCB.
 328:RtosV611/Source/tasks.c ****  *
 329:RtosV611/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 330:RtosV611/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 331:RtosV611/Source/tasks.c ****  */
 332:RtosV611/Source/tasks.c **** #if ( ( INCLUDE_vTaskDelete == 1 ) || ( INCLUDE_vTaskCleanUpResources == 1 ) )
 333:RtosV611/Source/tasks.c **** 
 334:RtosV611/Source/tasks.c **** 	static void prvDeleteTCB( tskTCB *pxTCB ) PRIVILEGED_FUNCTION;
 335:RtosV611/Source/tasks.c **** 
 336:RtosV611/Source/tasks.c **** #endif
 337:RtosV611/Source/tasks.c **** 
 338:RtosV611/Source/tasks.c **** /*
 339:RtosV611/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 340:RtosV611/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 341:RtosV611/Source/tasks.c ****  * and its TCB deleted.
 342:RtosV611/Source/tasks.c ****  */
 343:RtosV611/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 344:RtosV611/Source/tasks.c **** 
 345:RtosV611/Source/tasks.c **** /*
 346:RtosV611/Source/tasks.c ****  * Allocates memory from the heap for a TCB and associated stack.  Checks the
 347:RtosV611/Source/tasks.c ****  * allocation was successful.
 348:RtosV611/Source/tasks.c ****  */
 349:RtosV611/Source/tasks.c **** static tskTCB *prvAllocateTCBAndStack( unsigned short usStackDepth, portSTACK_TYPE *puxStackBuffer 
 350:RtosV611/Source/tasks.c **** 
 351:RtosV611/Source/tasks.c **** /*
 352:RtosV611/Source/tasks.c ****  * Called from vTaskList.  vListTasks details all the tasks currently under
 353:RtosV611/Source/tasks.c ****  * control of the scheduler.  The tasks may be in one of a number of lists.
 354:RtosV611/Source/tasks.c ****  * prvListTaskWithinSingleList accepts a list and details the tasks from
 355:RtosV611/Source/tasks.c ****  * within just that list.
 356:RtosV611/Source/tasks.c ****  *
 357:RtosV611/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 358:RtosV611/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 359:RtosV611/Source/tasks.c ****  */
 360:RtosV611/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 361:RtosV611/Source/tasks.c **** 
 362:RtosV611/Source/tasks.c **** 	static void prvListTaskWithinSingleList( const signed char *pcWriteBuffer, xList *pxList, signed c
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 12


 363:RtosV611/Source/tasks.c **** 
 364:RtosV611/Source/tasks.c **** #endif
 365:RtosV611/Source/tasks.c **** 
 366:RtosV611/Source/tasks.c **** /*
 367:RtosV611/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 368:RtosV611/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 369:RtosV611/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 370:RtosV611/Source/tasks.c ****  */
 371:RtosV611/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 372:RtosV611/Source/tasks.c **** 
 373:RtosV611/Source/tasks.c **** 	static unsigned short usTaskCheckFreeStackSpace( const unsigned char * pucStackByte ) PRIVILEGED_F
 374:RtosV611/Source/tasks.c **** 
 375:RtosV611/Source/tasks.c **** #endif
 376:RtosV611/Source/tasks.c **** 
 377:RtosV611/Source/tasks.c **** 
 378:RtosV611/Source/tasks.c **** /*lint +e956 */
 379:RtosV611/Source/tasks.c **** 
 380:RtosV611/Source/tasks.c **** 
 381:RtosV611/Source/tasks.c **** 
 382:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------
 383:RtosV611/Source/tasks.c ****  * TASK CREATION API documented in task.h
 384:RtosV611/Source/tasks.c ****  *----------------------------------------------------------*/
 385:RtosV611/Source/tasks.c **** 
 386:RtosV611/Source/tasks.c **** signed portBASE_TYPE xTaskGenericCreate( pdTASK_CODE pxTaskCode, const signed char * const pcName, 
 387:RtosV611/Source/tasks.c **** {
 234              		.loc 1 387 0
 235              		.cfi_startproc
 236              		@ args = 16, pretend = 0, frame = 32
 237              		@ frame_needed = 1, uses_anonymous_args = 0
 238 0000 80B5     		push	{r7, lr}	@
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 7, -8
 241              		.cfi_offset 14, -4
 242 0002 8AB0     		sub	sp, sp, #40	@,,
 243              		.cfi_def_cfa_offset 48
 244 0004 02AF     		add	r7, sp, #8	@,,
 245              		.cfi_def_cfa 7, 40
 246 0006 F860     		str	r0, [r7, #12]	@ pxTaskCode, pxTaskCode
 247 0008 B960     		str	r1, [r7, #8]	@ pcName, pcName
 248 000a 3B60     		str	r3, [r7]	@ pvParameters, pvParameters
 249 000c 1346     		mov	r3, r2	@ movhi	@ tmp142, tmp141
 250 000e FB80     		strh	r3, [r7, #6]	@ movhi	@ tmp142, usStackDepth
 388:RtosV611/Source/tasks.c **** signed portBASE_TYPE xReturn;
 389:RtosV611/Source/tasks.c **** tskTCB * pxNewTCB;
 390:RtosV611/Source/tasks.c **** 
 391:RtosV611/Source/tasks.c **** 	/* Allocate the memory required by the TCB and stack for the new task,
 392:RtosV611/Source/tasks.c **** 	checking that the allocation was successful. */
 393:RtosV611/Source/tasks.c **** 	pxNewTCB = prvAllocateTCBAndStack( usStackDepth, puxStackBuffer );
 251              		.loc 1 393 0
 252 0010 FB88     		ldrh	r3, [r7, #6]	@ tmp143, usStackDepth
 253 0012 396B     		ldr	r1, [r7, #48]	@, puxStackBuffer
 254 0014 1846     		mov	r0, r3	@, tmp143
 255 0016 FFF7FEFF 		bl	prvAllocateTCBAndStack	@
 256 001a B861     		str	r0, [r7, #24]	@, pxNewTCB
 394:RtosV611/Source/tasks.c **** 
 395:RtosV611/Source/tasks.c **** 	if( pxNewTCB != NULL )
 257              		.loc 1 395 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 13


 258 001c BB69     		ldr	r3, [r7, #24]	@ tmp144, pxNewTCB
 259 001e 002B     		cmp	r3, #0	@ tmp144,
 260 0020 74D0     		beq	.L2	@,
 261              	.LBB2:
 396:RtosV611/Source/tasks.c **** 	{
 397:RtosV611/Source/tasks.c **** 		portSTACK_TYPE *pxTopOfStack;
 398:RtosV611/Source/tasks.c **** 
 399:RtosV611/Source/tasks.c **** 		#if( portUSING_MPU_WRAPPERS == 1 )
 400:RtosV611/Source/tasks.c **** 			/* Should the task be created in privileged mode? */
 401:RtosV611/Source/tasks.c **** 			portBASE_TYPE xRunPrivileged;
 402:RtosV611/Source/tasks.c **** 			if( ( uxPriority & portPRIVILEGE_BIT ) != 0x00 )
 403:RtosV611/Source/tasks.c **** 			{
 404:RtosV611/Source/tasks.c **** 				xRunPrivileged = pdTRUE;
 405:RtosV611/Source/tasks.c **** 			}
 406:RtosV611/Source/tasks.c **** 			else
 407:RtosV611/Source/tasks.c **** 			{
 408:RtosV611/Source/tasks.c **** 				xRunPrivileged = pdFALSE;
 409:RtosV611/Source/tasks.c **** 			}
 410:RtosV611/Source/tasks.c **** 			uxPriority &= ~portPRIVILEGE_BIT;
 411:RtosV611/Source/tasks.c **** 		#endif /* portUSING_MPU_WRAPPERS == 1 */
 412:RtosV611/Source/tasks.c **** 
 413:RtosV611/Source/tasks.c **** 		/* Calculate the top of stack address.  This depends on whether the
 414:RtosV611/Source/tasks.c **** 		stack grows from high memory to low (as per the 80x86) or visa versa.
 415:RtosV611/Source/tasks.c **** 		portSTACK_GROWTH is used to make the result positive or negative as
 416:RtosV611/Source/tasks.c **** 		required by the port. */
 417:RtosV611/Source/tasks.c **** 		#if( portSTACK_GROWTH < 0 )
 418:RtosV611/Source/tasks.c **** 		{
 419:RtosV611/Source/tasks.c **** 			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - 1 );
 262              		.loc 1 419 0
 263 0022 BB69     		ldr	r3, [r7, #24]	@ tmp145, pxNewTCB
 264 0024 1A6B     		ldr	r2, [r3, #48]	@ _14, pxNewTCB_13->pxStack
 265 0026 FB88     		ldrh	r3, [r7, #6]	@ _15, usStackDepth
 266 0028 03F18043 		add	r3, r3, #1073741824	@ _16, _15,
 267 002c 013B     		subs	r3, r3, #1	@ _16, _16,
 268 002e 9B00     		lsls	r3, r3, #2	@ _17, _16,
 269 0030 1344     		add	r3, r3, r2	@ tmp146, _14
 270 0032 7B61     		str	r3, [r7, #20]	@ tmp146, pxTopOfStack
 420:RtosV611/Source/tasks.c **** 			pxTopOfStack = ( portSTACK_TYPE * ) ( ( ( unsigned long ) pxTopOfStack ) & ( ( unsigned long ) ~
 271              		.loc 1 420 0
 272 0034 7B69     		ldr	r3, [r7, #20]	@ pxTopOfStack.0_19, pxTopOfStack
 273 0036 23F00703 		bic	r3, r3, #7	@ _20, pxTopOfStack.0_19,
 274 003a 7B61     		str	r3, [r7, #20]	@ _20, pxTopOfStack
 421:RtosV611/Source/tasks.c **** 		}
 422:RtosV611/Source/tasks.c **** 		#else
 423:RtosV611/Source/tasks.c **** 		{
 424:RtosV611/Source/tasks.c **** 			pxTopOfStack = pxNewTCB->pxStack;
 425:RtosV611/Source/tasks.c **** 
 426:RtosV611/Source/tasks.c **** 			/* If we want to use stack checking on architectures that use
 427:RtosV611/Source/tasks.c **** 			a positive stack growth direction then we also need to store the
 428:RtosV611/Source/tasks.c **** 			other extreme of the stack space. */
 429:RtosV611/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( usStackDepth - 1 );
 430:RtosV611/Source/tasks.c **** 		}
 431:RtosV611/Source/tasks.c **** 		#endif
 432:RtosV611/Source/tasks.c **** 
 433:RtosV611/Source/tasks.c **** 		/* Setup the newly allocated TCB with the initial state of the task. */
 434:RtosV611/Source/tasks.c **** 		prvInitialiseTCBVariables( pxNewTCB, pcName, uxPriority, xRegions, usStackDepth );
 275              		.loc 1 434 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 14


 276 003c FB88     		ldrh	r3, [r7, #6]	@ tmp147, usStackDepth
 277 003e 0093     		str	r3, [sp]	@ tmp147,
 278 0040 7B6B     		ldr	r3, [r7, #52]	@, xRegions
 279 0042 BA6A     		ldr	r2, [r7, #40]	@, uxPriority
 280 0044 B968     		ldr	r1, [r7, #8]	@, pcName
 281 0046 B869     		ldr	r0, [r7, #24]	@, pxNewTCB
 282 0048 FFF7FEFF 		bl	prvInitialiseTCBVariables	@
 435:RtosV611/Source/tasks.c **** 
 436:RtosV611/Source/tasks.c **** 		/* Initialize the TCB stack to look as if the task was already running,
 437:RtosV611/Source/tasks.c **** 		but had been interrupted by the scheduler.  The return address is set
 438:RtosV611/Source/tasks.c **** 		to the start of the task function. Once the stack has been initialised
 439:RtosV611/Source/tasks.c **** 		the	top of stack variable is updated. */
 440:RtosV611/Source/tasks.c **** 		#if( portUSING_MPU_WRAPPERS == 1 )
 441:RtosV611/Source/tasks.c **** 		{
 442:RtosV611/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPriv
 443:RtosV611/Source/tasks.c **** 		}
 444:RtosV611/Source/tasks.c **** 		#else
 445:RtosV611/Source/tasks.c **** 		{
 446:RtosV611/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 283              		.loc 1 446 0
 284 004c 3A68     		ldr	r2, [r7]	@, pvParameters
 285 004e F968     		ldr	r1, [r7, #12]	@, pxTaskCode
 286 0050 7869     		ldr	r0, [r7, #20]	@, pxTopOfStack
 287 0052 FFF7FEFF 		bl	pxPortInitialiseStack	@
 288 0056 0246     		mov	r2, r0	@ _29,
 289 0058 BB69     		ldr	r3, [r7, #24]	@ tmp148, pxNewTCB
 290 005a 1A60     		str	r2, [r3]	@ _29, pxNewTCB_13->pxTopOfStack
 447:RtosV611/Source/tasks.c **** 		}
 448:RtosV611/Source/tasks.c **** 		#endif
 449:RtosV611/Source/tasks.c **** 
 450:RtosV611/Source/tasks.c **** 		if( ( void * ) pxCreatedTask != NULL )
 291              		.loc 1 450 0
 292 005c FB6A     		ldr	r3, [r7, #44]	@ tmp149, pxCreatedTask
 293 005e 002B     		cmp	r3, #0	@ tmp149,
 294 0060 02D0     		beq	.L3	@,
 451:RtosV611/Source/tasks.c **** 		{
 452:RtosV611/Source/tasks.c **** 			/* Pass the TCB out - in an anonymous way.  The calling function/
 453:RtosV611/Source/tasks.c **** 			task can use this as a handle to delete the task later if
 454:RtosV611/Source/tasks.c **** 			required.*/
 455:RtosV611/Source/tasks.c **** 			*pxCreatedTask = ( xTaskHandle ) pxNewTCB;
 295              		.loc 1 455 0
 296 0062 FB6A     		ldr	r3, [r7, #44]	@ tmp150, pxCreatedTask
 297 0064 BA69     		ldr	r2, [r7, #24]	@ tmp151, pxNewTCB
 298 0066 1A60     		str	r2, [r3]	@ tmp151, *pxCreatedTask_31(D)
 299              	.L3:
 456:RtosV611/Source/tasks.c **** 		}
 457:RtosV611/Source/tasks.c **** 		
 458:RtosV611/Source/tasks.c **** 		/* We are going to manipulate the task queues to add this task to a
 459:RtosV611/Source/tasks.c **** 		ready list, so must make sure no interrupts occur. */
 460:RtosV611/Source/tasks.c **** 		portENTER_CRITICAL();
 300              		.loc 1 460 0
 301 0068 FFF7FEFF 		bl	vPortEnterCritical	@
 461:RtosV611/Source/tasks.c **** 		{
 462:RtosV611/Source/tasks.c **** 			uxCurrentNumberOfTasks++;
 302              		.loc 1 462 0
 303 006c 334B     		ldr	r3, .L12	@ tmp152,
 304 006e 1B68     		ldr	r3, [r3]	@ uxCurrentNumberOfTasks.1_34, uxCurrentNumberOfTasks
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 15


 305 0070 0133     		adds	r3, r3, #1	@ _35, uxCurrentNumberOfTasks.1_34,
 306 0072 324A     		ldr	r2, .L12	@ tmp153,
 307 0074 1360     		str	r3, [r2]	@ _35, uxCurrentNumberOfTasks
 463:RtosV611/Source/tasks.c **** 			if( pxCurrentTCB == NULL )
 308              		.loc 1 463 0
 309 0076 324B     		ldr	r3, .L12+4	@ tmp154,
 310 0078 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.2_37, pxCurrentTCB
 311 007a 002B     		cmp	r3, #0	@ pxCurrentTCB.2_37,
 312 007c 09D1     		bne	.L4	@,
 464:RtosV611/Source/tasks.c **** 			{
 465:RtosV611/Source/tasks.c **** 				/* There are no other tasks, or all the other tasks are in
 466:RtosV611/Source/tasks.c **** 				the suspended state - make this the current task. */
 467:RtosV611/Source/tasks.c **** 				pxCurrentTCB =  pxNewTCB;
 313              		.loc 1 467 0
 314 007e 304A     		ldr	r2, .L12+4	@ tmp155,
 315 0080 BB69     		ldr	r3, [r7, #24]	@ tmp156, pxNewTCB
 316 0082 1360     		str	r3, [r2]	@ tmp156, pxCurrentTCB
 468:RtosV611/Source/tasks.c **** 
 469:RtosV611/Source/tasks.c **** 				if( uxCurrentNumberOfTasks == ( unsigned portBASE_TYPE ) 1 )
 317              		.loc 1 469 0
 318 0084 2D4B     		ldr	r3, .L12	@ tmp157,
 319 0086 1B68     		ldr	r3, [r3]	@ uxCurrentNumberOfTasks.3_39, uxCurrentNumberOfTasks
 320 0088 012B     		cmp	r3, #1	@ uxCurrentNumberOfTasks.3_39,
 321 008a 0FD1     		bne	.L6	@,
 470:RtosV611/Source/tasks.c **** 				{
 471:RtosV611/Source/tasks.c **** 					/* This is the first task to be created so do the preliminary
 472:RtosV611/Source/tasks.c **** 					initialisation required.  We will not recover if this call
 473:RtosV611/Source/tasks.c **** 					fails, but we will report the failure. */
 474:RtosV611/Source/tasks.c **** 					prvInitialiseTaskLists();
 322              		.loc 1 474 0
 323 008c FFF7FEFF 		bl	prvInitialiseTaskLists	@
 324 0090 0CE0     		b	.L6	@
 325              	.L4:
 475:RtosV611/Source/tasks.c **** 				}
 476:RtosV611/Source/tasks.c **** 			}
 477:RtosV611/Source/tasks.c **** 			else
 478:RtosV611/Source/tasks.c **** 			{
 479:RtosV611/Source/tasks.c **** 				/* If the scheduler is not already running, make this task the
 480:RtosV611/Source/tasks.c **** 				current task if it is the highest priority task to be created
 481:RtosV611/Source/tasks.c **** 				so far. */
 482:RtosV611/Source/tasks.c **** 				if( xSchedulerRunning == pdFALSE )
 326              		.loc 1 482 0
 327 0092 2C4B     		ldr	r3, .L12+8	@ tmp158,
 328 0094 1B68     		ldr	r3, [r3]	@ xSchedulerRunning.4_41, xSchedulerRunning
 329 0096 002B     		cmp	r3, #0	@ xSchedulerRunning.4_41,
 330 0098 08D1     		bne	.L6	@,
 483:RtosV611/Source/tasks.c **** 				{
 484:RtosV611/Source/tasks.c **** 					if( pxCurrentTCB->uxPriority <= uxPriority )
 331              		.loc 1 484 0
 332 009a 294B     		ldr	r3, .L12+4	@ tmp159,
 333 009c 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.5_42, pxCurrentTCB
 334 009e DA6A     		ldr	r2, [r3, #44]	@ _43, pxCurrentTCB.5_42->uxPriority
 335 00a0 BB6A     		ldr	r3, [r7, #40]	@ tmp160, uxPriority
 336 00a2 9A42     		cmp	r2, r3	@ _43, tmp160
 337 00a4 02D8     		bhi	.L6	@,
 485:RtosV611/Source/tasks.c **** 					{
 486:RtosV611/Source/tasks.c **** 						pxCurrentTCB = pxNewTCB;
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 16


 338              		.loc 1 486 0
 339 00a6 264A     		ldr	r2, .L12+4	@ tmp161,
 340 00a8 BB69     		ldr	r3, [r7, #24]	@ tmp162, pxNewTCB
 341 00aa 1360     		str	r3, [r2]	@ tmp162, pxCurrentTCB
 342              	.L6:
 487:RtosV611/Source/tasks.c **** 					}
 488:RtosV611/Source/tasks.c **** 				}
 489:RtosV611/Source/tasks.c **** 			}
 490:RtosV611/Source/tasks.c **** 
 491:RtosV611/Source/tasks.c **** 			/* Remember the top priority to make context switching faster.  Use
 492:RtosV611/Source/tasks.c **** 			the priority in pxNewTCB as this has been capped to a valid value. */
 493:RtosV611/Source/tasks.c **** 			if( pxNewTCB->uxPriority > uxTopUsedPriority )
 343              		.loc 1 493 0
 344 00ac BB69     		ldr	r3, [r7, #24]	@ tmp163, pxNewTCB
 345 00ae DA6A     		ldr	r2, [r3, #44]	@ _45, pxNewTCB_13->uxPriority
 346 00b0 254B     		ldr	r3, .L12+12	@ tmp164,
 347 00b2 1B68     		ldr	r3, [r3]	@ uxTopUsedPriority.6_46, uxTopUsedPriority
 348 00b4 9A42     		cmp	r2, r3	@ _45, uxTopUsedPriority.6_46
 349 00b6 03D9     		bls	.L7	@,
 494:RtosV611/Source/tasks.c **** 			{
 495:RtosV611/Source/tasks.c **** 				uxTopUsedPriority = pxNewTCB->uxPriority;
 350              		.loc 1 495 0
 351 00b8 BB69     		ldr	r3, [r7, #24]	@ tmp165, pxNewTCB
 352 00ba DB6A     		ldr	r3, [r3, #44]	@ _47, pxNewTCB_13->uxPriority
 353 00bc 224A     		ldr	r2, .L12+12	@ tmp166,
 354 00be 1360     		str	r3, [r2]	@ _47, uxTopUsedPriority
 355              	.L7:
 496:RtosV611/Source/tasks.c **** 			}
 497:RtosV611/Source/tasks.c **** 
 498:RtosV611/Source/tasks.c **** 			#if ( configUSE_TRACE_FACILITY == 1 )
 499:RtosV611/Source/tasks.c **** 			{
 500:RtosV611/Source/tasks.c **** 				/* Add a counter into the TCB for tracing only. */
 501:RtosV611/Source/tasks.c **** 				pxNewTCB->uxTCBNumber = uxTaskNumber;
 356              		.loc 1 501 0
 357 00c0 224B     		ldr	r3, .L12+16	@ tmp167,
 358 00c2 1A68     		ldr	r2, [r3]	@ uxTaskNumber.7_49, uxTaskNumber
 359 00c4 BB69     		ldr	r3, [r7, #24]	@ tmp168, pxNewTCB
 360 00c6 5A64     		str	r2, [r3, #68]	@ uxTaskNumber.7_49, pxNewTCB_13->uxTCBNumber
 502:RtosV611/Source/tasks.c **** 			}
 503:RtosV611/Source/tasks.c **** 			#endif
 504:RtosV611/Source/tasks.c **** 			uxTaskNumber++;
 361              		.loc 1 504 0
 362 00c8 204B     		ldr	r3, .L12+16	@ tmp169,
 363 00ca 1B68     		ldr	r3, [r3]	@ uxTaskNumber.8_51, uxTaskNumber
 364 00cc 0133     		adds	r3, r3, #1	@ _52, uxTaskNumber.8_51,
 365 00ce 1F4A     		ldr	r2, .L12+16	@ tmp170,
 366 00d0 1360     		str	r3, [r2]	@ _52, uxTaskNumber
 505:RtosV611/Source/tasks.c **** 
 506:RtosV611/Source/tasks.c **** 			prvAddTaskToReadyQueue( pxNewTCB );
 367              		.loc 1 506 0
 368 00d2 BB69     		ldr	r3, [r7, #24]	@ tmp171, pxNewTCB
 369 00d4 DA6A     		ldr	r2, [r3, #44]	@ _54, pxNewTCB_13->uxPriority
 370 00d6 1E4B     		ldr	r3, .L12+20	@ tmp172,
 371 00d8 1B68     		ldr	r3, [r3]	@ uxTopReadyPriority.9_55, uxTopReadyPriority
 372 00da 9A42     		cmp	r2, r3	@ _54, uxTopReadyPriority.9_55
 373 00dc 03D9     		bls	.L8	@,
 374              		.loc 1 506 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 17


 375 00de BB69     		ldr	r3, [r7, #24]	@ tmp173, pxNewTCB
 376 00e0 DB6A     		ldr	r3, [r3, #44]	@ _56, pxNewTCB_13->uxPriority
 377 00e2 1B4A     		ldr	r2, .L12+20	@ tmp174,
 378 00e4 1360     		str	r3, [r2]	@ _56, uxTopReadyPriority
 379              	.L8:
 380              		.loc 1 506 0 discriminator 3
 381 00e6 BB69     		ldr	r3, [r7, #24]	@ tmp175, pxNewTCB
 382 00e8 DA6A     		ldr	r2, [r3, #44]	@ _58, pxNewTCB_13->uxPriority
 383 00ea 1346     		mov	r3, r2	@ tmp176, _58
 384 00ec 9B00     		lsls	r3, r3, #2	@ tmp176, tmp176,
 385 00ee 1344     		add	r3, r3, r2	@ tmp176, _58
 386 00f0 9B00     		lsls	r3, r3, #2	@ tmp177, tmp176,
 387 00f2 184A     		ldr	r2, .L12+24	@ tmp178,
 388 00f4 1A44     		add	r2, r2, r3	@ _59, tmp176
 389 00f6 BB69     		ldr	r3, [r7, #24]	@ tmp179, pxNewTCB
 390 00f8 0433     		adds	r3, r3, #4	@ _60, tmp179,
 391 00fa 1946     		mov	r1, r3	@, _60
 392 00fc 1046     		mov	r0, r2	@, _59
 393 00fe FFF7FEFF 		bl	vListInsertEnd	@
 507:RtosV611/Source/tasks.c **** 
 508:RtosV611/Source/tasks.c **** 			xReturn = pdPASS;
 394              		.loc 1 508 0 is_stmt 1 discriminator 3
 395 0102 0123     		movs	r3, #1	@ tmp180,
 396 0104 FB61     		str	r3, [r7, #28]	@ tmp180, xReturn
 509:RtosV611/Source/tasks.c **** 			traceTASK_CREATE( pxNewTCB );
 510:RtosV611/Source/tasks.c **** 		}
 511:RtosV611/Source/tasks.c **** 		portEXIT_CRITICAL();
 397              		.loc 1 511 0 discriminator 3
 398 0106 FFF7FEFF 		bl	vPortExitCritical	@
 399              	.LBE2:
 400 010a 02E0     		b	.L9	@
 401              	.L2:
 512:RtosV611/Source/tasks.c **** 	}
 513:RtosV611/Source/tasks.c **** 	else
 514:RtosV611/Source/tasks.c **** 	{
 515:RtosV611/Source/tasks.c **** 		xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 402              		.loc 1 515 0
 403 010c 4FF0FF33 		mov	r3, #-1	@ tmp181,
 404 0110 FB61     		str	r3, [r7, #28]	@ tmp181, xReturn
 405              	.L9:
 516:RtosV611/Source/tasks.c **** 		traceTASK_CREATE_FAILED();
 517:RtosV611/Source/tasks.c **** 	}
 518:RtosV611/Source/tasks.c **** 
 519:RtosV611/Source/tasks.c **** 	if( xReturn == pdPASS )
 406              		.loc 1 519 0
 407 0112 FB69     		ldr	r3, [r7, #28]	@ tmp182, xReturn
 408 0114 012B     		cmp	r3, #1	@ tmp182,
 409 0116 0BD1     		bne	.L10	@,
 520:RtosV611/Source/tasks.c **** 	{
 521:RtosV611/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
 410              		.loc 1 521 0
 411 0118 0A4B     		ldr	r3, .L12+8	@ tmp183,
 412 011a 1B68     		ldr	r3, [r3]	@ xSchedulerRunning.10_65, xSchedulerRunning
 413 011c 002B     		cmp	r3, #0	@ xSchedulerRunning.10_65,
 414 011e 07D0     		beq	.L10	@,
 522:RtosV611/Source/tasks.c **** 		{
 523:RtosV611/Source/tasks.c **** 			/* If the created task is of a higher priority than the current task
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 18


 524:RtosV611/Source/tasks.c **** 			then it should run now. */
 525:RtosV611/Source/tasks.c **** 			if( pxCurrentTCB->uxPriority < uxPriority )
 415              		.loc 1 525 0
 416 0120 074B     		ldr	r3, .L12+4	@ tmp184,
 417 0122 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.11_66, pxCurrentTCB
 418 0124 DA6A     		ldr	r2, [r3, #44]	@ _67, pxCurrentTCB.11_66->uxPriority
 419 0126 BB6A     		ldr	r3, [r7, #40]	@ tmp185, uxPriority
 420 0128 9A42     		cmp	r2, r3	@ _67, tmp185
 421 012a 01D2     		bcs	.L10	@,
 526:RtosV611/Source/tasks.c **** 			{
 527:RtosV611/Source/tasks.c **** 				portYIELD_WITHIN_API();
 422              		.loc 1 527 0
 423 012c FFF7FEFF 		bl	vPortYieldFromISR	@
 424              	.L10:
 528:RtosV611/Source/tasks.c **** 			}
 529:RtosV611/Source/tasks.c **** 		}
 530:RtosV611/Source/tasks.c **** 	}
 531:RtosV611/Source/tasks.c **** 
 532:RtosV611/Source/tasks.c **** 	return xReturn;
 425              		.loc 1 532 0
 426 0130 FB69     		ldr	r3, [r7, #28]	@ _69, xReturn
 533:RtosV611/Source/tasks.c **** }
 427              		.loc 1 533 0
 428 0132 1846     		mov	r0, r3	@, <retval>
 429 0134 2037     		adds	r7, r7, #32	@,,
 430              		.cfi_def_cfa_offset 8
 431 0136 BD46     		mov	sp, r7	@,
 432              		.cfi_def_cfa_register 13
 433              		@ sp needed	@
 434 0138 80BD     		pop	{r7, pc}	@
 435              	.L13:
 436 013a 00BF     		.align	2
 437              	.L12:
 438 013c 00000000 		.word	uxCurrentNumberOfTasks
 439 0140 00000000 		.word	pxCurrentTCB
 440 0144 00000000 		.word	xSchedulerRunning
 441 0148 00000000 		.word	uxTopUsedPriority
 442 014c 00000000 		.word	uxTaskNumber
 443 0150 00000000 		.word	uxTopReadyPriority
 444 0154 00000000 		.word	pxReadyTasksLists
 445              		.cfi_endproc
 446              	.LFE1:
 447              		.size	xTaskGenericCreate, .-xTaskGenericCreate
 448              		.section	.text.vTaskDelete,"ax",%progbits
 449              		.align	1
 450              		.global	vTaskDelete
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 454              		.fpu softvfp
 455              		.type	vTaskDelete, %function
 456              	vTaskDelete:
 457              	.LFB2:
 534:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
 535:RtosV611/Source/tasks.c **** 
 536:RtosV611/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 537:RtosV611/Source/tasks.c **** 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 19


 538:RtosV611/Source/tasks.c **** 	void vTaskDelete( xTaskHandle pxTaskToDelete )
 539:RtosV611/Source/tasks.c **** 	{
 458              		.loc 1 539 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 16
 461              		@ frame_needed = 1, uses_anonymous_args = 0
 462 0000 80B5     		push	{r7, lr}	@
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 7, -8
 465              		.cfi_offset 14, -4
 466 0002 84B0     		sub	sp, sp, #16	@,,
 467              		.cfi_def_cfa_offset 24
 468 0004 00AF     		add	r7, sp, #0	@,,
 469              		.cfi_def_cfa_register 7
 470 0006 7860     		str	r0, [r7, #4]	@ pxTaskToDelete, pxTaskToDelete
 540:RtosV611/Source/tasks.c **** 	tskTCB *pxTCB;
 541:RtosV611/Source/tasks.c **** 
 542:RtosV611/Source/tasks.c **** 		portENTER_CRITICAL();
 471              		.loc 1 542 0
 472 0008 FFF7FEFF 		bl	vPortEnterCritical	@
 543:RtosV611/Source/tasks.c **** 		{
 544:RtosV611/Source/tasks.c **** 			/* Ensure a yield is performed if the current task is being
 545:RtosV611/Source/tasks.c **** 			deleted. */
 546:RtosV611/Source/tasks.c **** 			if( pxTaskToDelete == pxCurrentTCB )
 473              		.loc 1 546 0
 474 000c 1D4B     		ldr	r3, .L21	@ tmp121,
 475 000e 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.12_7, pxCurrentTCB
 476 0010 7A68     		ldr	r2, [r7, #4]	@ tmp122, pxTaskToDelete
 477 0012 9A42     		cmp	r2, r3	@ tmp122, pxCurrentTCB.12_7
 478 0014 01D1     		bne	.L15	@,
 547:RtosV611/Source/tasks.c **** 			{
 548:RtosV611/Source/tasks.c **** 				pxTaskToDelete = NULL;
 479              		.loc 1 548 0
 480 0016 0023     		movs	r3, #0	@ tmp123,
 481 0018 7B60     		str	r3, [r7, #4]	@ tmp123, pxTaskToDelete
 482              	.L15:
 549:RtosV611/Source/tasks.c **** 			}
 550:RtosV611/Source/tasks.c **** 
 551:RtosV611/Source/tasks.c **** 			/* If null is passed in here then we are deleting ourselves. */
 552:RtosV611/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTaskToDelete );
 483              		.loc 1 552 0
 484 001a 7B68     		ldr	r3, [r7, #4]	@ tmp124, pxTaskToDelete
 485 001c 002B     		cmp	r3, #0	@ tmp124,
 486 001e 02D1     		bne	.L16	@,
 487              		.loc 1 552 0 is_stmt 0 discriminator 1
 488 0020 184B     		ldr	r3, .L21	@ tmp125,
 489 0022 1B68     		ldr	r3, [r3]	@ iftmp.13_2, pxCurrentTCB
 490 0024 00E0     		b	.L17	@
 491              	.L16:
 492              		.loc 1 552 0 discriminator 2
 493 0026 7B68     		ldr	r3, [r7, #4]	@ iftmp.13_2, pxTaskToDelete
 494              	.L17:
 495              		.loc 1 552 0 discriminator 4
 496 0028 FB60     		str	r3, [r7, #12]	@ iftmp.13_2, pxTCB
 553:RtosV611/Source/tasks.c **** 
 554:RtosV611/Source/tasks.c **** 			/* Remove task from the ready list and place in the	termination list.
 555:RtosV611/Source/tasks.c **** 			This will stop the task from be scheduled.  The idle task will check
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 20


 556:RtosV611/Source/tasks.c **** 			the termination list and free up any memory allocated by the
 557:RtosV611/Source/tasks.c **** 			scheduler for the TCB and stack. */
 558:RtosV611/Source/tasks.c **** 			vListRemove( &( pxTCB->xGenericListItem ) );
 497              		.loc 1 558 0 is_stmt 1 discriminator 4
 498 002a FB68     		ldr	r3, [r7, #12]	@ tmp126, pxTCB
 499 002c 0433     		adds	r3, r3, #4	@ _13, tmp126,
 500 002e 1846     		mov	r0, r3	@, _13
 501 0030 FFF7FEFF 		bl	vListRemove	@
 559:RtosV611/Source/tasks.c **** 
 560:RtosV611/Source/tasks.c **** 			/* Is the task waiting on an event also? */
 561:RtosV611/Source/tasks.c **** 			if( pxTCB->xEventListItem.pvContainer )
 502              		.loc 1 561 0 discriminator 4
 503 0034 FB68     		ldr	r3, [r7, #12]	@ tmp127, pxTCB
 504 0036 9B6A     		ldr	r3, [r3, #40]	@ _15, pxTCB_12->xEventListItem.pvContainer
 505 0038 002B     		cmp	r3, #0	@ _15,
 506 003a 04D0     		beq	.L18	@,
 562:RtosV611/Source/tasks.c **** 			{
 563:RtosV611/Source/tasks.c **** 				vListRemove( &( pxTCB->xEventListItem ) );
 507              		.loc 1 563 0
 508 003c FB68     		ldr	r3, [r7, #12]	@ tmp128, pxTCB
 509 003e 1833     		adds	r3, r3, #24	@ _16, tmp128,
 510 0040 1846     		mov	r0, r3	@, _16
 511 0042 FFF7FEFF 		bl	vListRemove	@
 512              	.L18:
 564:RtosV611/Source/tasks.c **** 			}
 565:RtosV611/Source/tasks.c **** 
 566:RtosV611/Source/tasks.c **** 			vListInsertEnd( ( xList * ) &xTasksWaitingTermination, &( pxTCB->xGenericListItem ) );
 513              		.loc 1 566 0
 514 0046 FB68     		ldr	r3, [r7, #12]	@ tmp129, pxTCB
 515 0048 0433     		adds	r3, r3, #4	@ _18, tmp129,
 516 004a 1946     		mov	r1, r3	@, _18
 517 004c 0E48     		ldr	r0, .L21+4	@,
 518 004e FFF7FEFF 		bl	vListInsertEnd	@
 567:RtosV611/Source/tasks.c **** 
 568:RtosV611/Source/tasks.c **** 			/* Increment the ucTasksDeleted variable so the idle task knows
 569:RtosV611/Source/tasks.c **** 			there is a task that has been deleted and that it should therefore
 570:RtosV611/Source/tasks.c **** 			check the xTasksWaitingTermination list. */
 571:RtosV611/Source/tasks.c **** 			++uxTasksDeleted;
 519              		.loc 1 571 0
 520 0052 0E4B     		ldr	r3, .L21+8	@ tmp130,
 521 0054 1B68     		ldr	r3, [r3]	@ uxTasksDeleted.14_20, uxTasksDeleted
 522 0056 0133     		adds	r3, r3, #1	@ _21, uxTasksDeleted.14_20,
 523 0058 0C4A     		ldr	r2, .L21+8	@ tmp131,
 524 005a 1360     		str	r3, [r2]	@ _21, uxTasksDeleted
 572:RtosV611/Source/tasks.c **** 
 573:RtosV611/Source/tasks.c **** 			/* Increment the uxTaskNumberVariable also so kernel aware debuggers
 574:RtosV611/Source/tasks.c **** 			can detect that the task lists need re-generating. */
 575:RtosV611/Source/tasks.c **** 			uxTaskNumber++;
 525              		.loc 1 575 0
 526 005c 0C4B     		ldr	r3, .L21+12	@ tmp132,
 527 005e 1B68     		ldr	r3, [r3]	@ uxTaskNumber.15_23, uxTaskNumber
 528 0060 0133     		adds	r3, r3, #1	@ _24, uxTaskNumber.15_23,
 529 0062 0B4A     		ldr	r2, .L21+12	@ tmp133,
 530 0064 1360     		str	r3, [r2]	@ _24, uxTaskNumber
 576:RtosV611/Source/tasks.c **** 
 577:RtosV611/Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
 578:RtosV611/Source/tasks.c **** 		}
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 21


 579:RtosV611/Source/tasks.c **** 		portEXIT_CRITICAL();
 531              		.loc 1 579 0
 532 0066 FFF7FEFF 		bl	vPortExitCritical	@
 580:RtosV611/Source/tasks.c **** 
 581:RtosV611/Source/tasks.c **** 		/* Force a reschedule if we have just deleted the current task. */
 582:RtosV611/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
 533              		.loc 1 582 0
 534 006a 0A4B     		ldr	r3, .L21+16	@ tmp134,
 535 006c 1B68     		ldr	r3, [r3]	@ xSchedulerRunning.16_27, xSchedulerRunning
 536 006e 002B     		cmp	r3, #0	@ xSchedulerRunning.16_27,
 537 0070 04D0     		beq	.L20	@,
 583:RtosV611/Source/tasks.c **** 		{
 584:RtosV611/Source/tasks.c **** 			if( ( void * ) pxTaskToDelete == NULL )
 538              		.loc 1 584 0
 539 0072 7B68     		ldr	r3, [r7, #4]	@ tmp135, pxTaskToDelete
 540 0074 002B     		cmp	r3, #0	@ tmp135,
 541 0076 01D1     		bne	.L20	@,
 585:RtosV611/Source/tasks.c **** 			{
 586:RtosV611/Source/tasks.c **** 				portYIELD_WITHIN_API();
 542              		.loc 1 586 0
 543 0078 FFF7FEFF 		bl	vPortYieldFromISR	@
 544              	.L20:
 587:RtosV611/Source/tasks.c **** 			}
 588:RtosV611/Source/tasks.c **** 		}
 589:RtosV611/Source/tasks.c **** 	}
 545              		.loc 1 589 0
 546 007c 00BF     		nop
 547 007e 1037     		adds	r7, r7, #16	@,,
 548              		.cfi_def_cfa_offset 8
 549 0080 BD46     		mov	sp, r7	@,
 550              		.cfi_def_cfa_register 13
 551              		@ sp needed	@
 552 0082 80BD     		pop	{r7, pc}	@
 553              	.L22:
 554              		.align	2
 555              	.L21:
 556 0084 00000000 		.word	pxCurrentTCB
 557 0088 00000000 		.word	xTasksWaitingTermination
 558 008c 00000000 		.word	uxTasksDeleted
 559 0090 00000000 		.word	uxTaskNumber
 560 0094 00000000 		.word	xSchedulerRunning
 561              		.cfi_endproc
 562              	.LFE2:
 563              		.size	vTaskDelete, .-vTaskDelete
 564              		.section	.text.vTaskDelayUntil,"ax",%progbits
 565              		.align	1
 566              		.global	vTaskDelayUntil
 567              		.syntax unified
 568              		.thumb
 569              		.thumb_func
 570              		.fpu softvfp
 571              		.type	vTaskDelayUntil, %function
 572              	vTaskDelayUntil:
 573              	.LFB3:
 590:RtosV611/Source/tasks.c **** 
 591:RtosV611/Source/tasks.c **** #endif
 592:RtosV611/Source/tasks.c **** 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 22


 593:RtosV611/Source/tasks.c **** 
 594:RtosV611/Source/tasks.c **** 
 595:RtosV611/Source/tasks.c **** 
 596:RtosV611/Source/tasks.c **** 
 597:RtosV611/Source/tasks.c **** 
 598:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------
 599:RtosV611/Source/tasks.c ****  * TASK CONTROL API documented in task.h
 600:RtosV611/Source/tasks.c ****  *----------------------------------------------------------*/
 601:RtosV611/Source/tasks.c **** 
 602:RtosV611/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
 603:RtosV611/Source/tasks.c **** 
 604:RtosV611/Source/tasks.c **** 	void vTaskDelayUntil( portTickType * const pxPreviousWakeTime, portTickType xTimeIncrement )
 605:RtosV611/Source/tasks.c **** 	{
 574              		.loc 1 605 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 24
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578 0000 80B5     		push	{r7, lr}	@
 579              		.cfi_def_cfa_offset 8
 580              		.cfi_offset 7, -8
 581              		.cfi_offset 14, -4
 582 0002 86B0     		sub	sp, sp, #24	@,,
 583              		.cfi_def_cfa_offset 32
 584 0004 00AF     		add	r7, sp, #0	@,,
 585              		.cfi_def_cfa_register 7
 586 0006 7860     		str	r0, [r7, #4]	@ pxPreviousWakeTime, pxPreviousWakeTime
 587 0008 3960     		str	r1, [r7]	@ xTimeIncrement, xTimeIncrement
 606:RtosV611/Source/tasks.c **** 	portTickType xTimeToWake;
 607:RtosV611/Source/tasks.c **** 	portBASE_TYPE xAlreadyYielded, xShouldDelay = pdFALSE;
 588              		.loc 1 607 0
 589 000a 0023     		movs	r3, #0	@ tmp127,
 590 000c 7B61     		str	r3, [r7, #20]	@ tmp127, xShouldDelay
 608:RtosV611/Source/tasks.c **** 
 609:RtosV611/Source/tasks.c **** 		vTaskSuspendAll();
 591              		.loc 1 609 0
 592 000e FFF7FEFF 		bl	vTaskSuspendAll	@
 610:RtosV611/Source/tasks.c **** 		{
 611:RtosV611/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
 612:RtosV611/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
 593              		.loc 1 612 0
 594 0012 7B68     		ldr	r3, [r7, #4]	@ tmp128, pxPreviousWakeTime
 595 0014 1A68     		ldr	r2, [r3]	@ _9, *pxPreviousWakeTime_8(D)
 596 0016 3B68     		ldr	r3, [r7]	@ tmp130, xTimeIncrement
 597 0018 1344     		add	r3, r3, r2	@ tmp129, _9
 598 001a 3B61     		str	r3, [r7, #16]	@ tmp129, xTimeToWake
 613:RtosV611/Source/tasks.c **** 
 614:RtosV611/Source/tasks.c **** 			if( xTickCount < *pxPreviousWakeTime )
 599              		.loc 1 614 0
 600 001c 7B68     		ldr	r3, [r7, #4]	@ tmp131, pxPreviousWakeTime
 601 001e 1A68     		ldr	r2, [r3]	@ _12, *pxPreviousWakeTime_8(D)
 602 0020 284B     		ldr	r3, .L32	@ tmp132,
 603 0022 1B68     		ldr	r3, [r3]	@ xTickCount.17_13, xTickCount
 604 0024 9A42     		cmp	r2, r3	@ _12, xTickCount.17_13
 605 0026 0CD9     		bls	.L24	@,
 615:RtosV611/Source/tasks.c **** 			{
 616:RtosV611/Source/tasks.c **** 				/* The tick count has overflowed since this function was
 617:RtosV611/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 23


 618:RtosV611/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
 619:RtosV611/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
 620:RtosV611/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
 621:RtosV611/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xTickCount ) )
 606              		.loc 1 621 0
 607 0028 7B68     		ldr	r3, [r7, #4]	@ tmp133, pxPreviousWakeTime
 608 002a 1A68     		ldr	r2, [r3]	@ _14, *pxPreviousWakeTime_8(D)
 609 002c 3B69     		ldr	r3, [r7, #16]	@ tmp134, xTimeToWake
 610 002e 9A42     		cmp	r2, r3	@ _14, tmp134
 611 0030 13D9     		bls	.L26	@,
 612              		.loc 1 621 0 is_stmt 0 discriminator 1
 613 0032 244B     		ldr	r3, .L32	@ tmp135,
 614 0034 1B68     		ldr	r3, [r3]	@ xTickCount.18_15, xTickCount
 615 0036 3A69     		ldr	r2, [r7, #16]	@ tmp136, xTimeToWake
 616 0038 9A42     		cmp	r2, r3	@ tmp136, xTickCount.18_15
 617 003a 0ED9     		bls	.L26	@,
 622:RtosV611/Source/tasks.c **** 				{
 623:RtosV611/Source/tasks.c **** 					xShouldDelay = pdTRUE;
 618              		.loc 1 623 0 is_stmt 1
 619 003c 0123     		movs	r3, #1	@ tmp137,
 620 003e 7B61     		str	r3, [r7, #20]	@ tmp137, xShouldDelay
 621 0040 0BE0     		b	.L26	@
 622              	.L24:
 624:RtosV611/Source/tasks.c **** 				}
 625:RtosV611/Source/tasks.c **** 			}
 626:RtosV611/Source/tasks.c **** 			else
 627:RtosV611/Source/tasks.c **** 			{
 628:RtosV611/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
 629:RtosV611/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
 630:RtosV611/Source/tasks.c **** 				tick time is less than the wake time. */
 631:RtosV611/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xTickCount ) )
 623              		.loc 1 631 0
 624 0042 7B68     		ldr	r3, [r7, #4]	@ tmp138, pxPreviousWakeTime
 625 0044 1A68     		ldr	r2, [r3]	@ _17, *pxPreviousWakeTime_8(D)
 626 0046 3B69     		ldr	r3, [r7, #16]	@ tmp139, xTimeToWake
 627 0048 9A42     		cmp	r2, r3	@ _17, tmp139
 628 004a 04D8     		bhi	.L27	@,
 629              		.loc 1 631 0 is_stmt 0 discriminator 1
 630 004c 1D4B     		ldr	r3, .L32	@ tmp140,
 631 004e 1B68     		ldr	r3, [r3]	@ xTickCount.19_18, xTickCount
 632 0050 3A69     		ldr	r2, [r7, #16]	@ tmp141, xTimeToWake
 633 0052 9A42     		cmp	r2, r3	@ tmp141, xTickCount.19_18
 634 0054 01D9     		bls	.L26	@,
 635              	.L27:
 632:RtosV611/Source/tasks.c **** 				{
 633:RtosV611/Source/tasks.c **** 					xShouldDelay = pdTRUE;
 636              		.loc 1 633 0 is_stmt 1
 637 0056 0123     		movs	r3, #1	@ tmp142,
 638 0058 7B61     		str	r3, [r7, #20]	@ tmp142, xShouldDelay
 639              	.L26:
 634:RtosV611/Source/tasks.c **** 				}
 635:RtosV611/Source/tasks.c **** 			}
 636:RtosV611/Source/tasks.c **** 
 637:RtosV611/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
 638:RtosV611/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
 640              		.loc 1 638 0
 641 005a 7B68     		ldr	r3, [r7, #4]	@ tmp143, pxPreviousWakeTime
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 24


 642 005c 3A69     		ldr	r2, [r7, #16]	@ tmp144, xTimeToWake
 643 005e 1A60     		str	r2, [r3]	@ tmp144, *pxPreviousWakeTime_8(D)
 639:RtosV611/Source/tasks.c **** 
 640:RtosV611/Source/tasks.c **** 			if( xShouldDelay )
 644              		.loc 1 640 0
 645 0060 7B69     		ldr	r3, [r7, #20]	@ tmp145, xShouldDelay
 646 0062 002B     		cmp	r3, #0	@ tmp145,
 647 0064 21D0     		beq	.L28	@,
 641:RtosV611/Source/tasks.c **** 			{
 642:RtosV611/Source/tasks.c **** 				traceTASK_DELAY_UNTIL();
 643:RtosV611/Source/tasks.c **** 
 644:RtosV611/Source/tasks.c **** 				/* We must remove ourselves from the ready list before adding
 645:RtosV611/Source/tasks.c **** 				ourselves to the blocked list as the same list item is used for
 646:RtosV611/Source/tasks.c **** 				both lists. */
 647:RtosV611/Source/tasks.c **** 				vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
 648              		.loc 1 647 0
 649 0066 184B     		ldr	r3, .L32+4	@ tmp146,
 650 0068 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.20_21, pxCurrentTCB
 651 006a 0433     		adds	r3, r3, #4	@ _22, pxCurrentTCB.20_21,
 652 006c 1846     		mov	r0, r3	@, _22
 653 006e FFF7FEFF 		bl	vListRemove	@
 648:RtosV611/Source/tasks.c **** 
 649:RtosV611/Source/tasks.c **** 				/* The list item will be inserted in wake time order. */
 650:RtosV611/Source/tasks.c **** 				listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
 654              		.loc 1 650 0
 655 0072 154B     		ldr	r3, .L32+4	@ tmp147,
 656 0074 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.21_24, pxCurrentTCB
 657 0076 3A69     		ldr	r2, [r7, #16]	@ tmp148, xTimeToWake
 658 0078 5A60     		str	r2, [r3, #4]	@ tmp148, pxCurrentTCB.21_24->xGenericListItem.xItemValue
 651:RtosV611/Source/tasks.c **** 
 652:RtosV611/Source/tasks.c **** 				if( xTimeToWake < xTickCount )
 659              		.loc 1 652 0
 660 007a 124B     		ldr	r3, .L32	@ tmp149,
 661 007c 1B68     		ldr	r3, [r3]	@ xTickCount.22_26, xTickCount
 662 007e 3A69     		ldr	r2, [r7, #16]	@ tmp150, xTimeToWake
 663 0080 9A42     		cmp	r2, r3	@ tmp150, xTickCount.22_26
 664 0082 09D2     		bcs	.L29	@,
 653:RtosV611/Source/tasks.c **** 				{
 654:RtosV611/Source/tasks.c **** 					/* Wake time has overflowed.  Place this item in the
 655:RtosV611/Source/tasks.c **** 					overflow list. */
 656:RtosV611/Source/tasks.c **** 					vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericL
 665              		.loc 1 656 0
 666 0084 114B     		ldr	r3, .L32+8	@ tmp151,
 667 0086 1A68     		ldr	r2, [r3]	@ pxOverflowDelayedTaskList.23_27, pxOverflowDelayedTaskList
 668 0088 0F4B     		ldr	r3, .L32+4	@ tmp152,
 669 008a 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.24_28, pxCurrentTCB
 670 008c 0433     		adds	r3, r3, #4	@ _29, pxCurrentTCB.24_28,
 671 008e 1946     		mov	r1, r3	@, _29
 672 0090 1046     		mov	r0, r2	@, pxOverflowDelayedTaskList.23_27
 673 0092 FFF7FEFF 		bl	vListInsert	@
 674 0096 08E0     		b	.L28	@
 675              	.L29:
 657:RtosV611/Source/tasks.c **** 				}
 658:RtosV611/Source/tasks.c **** 				else
 659:RtosV611/Source/tasks.c **** 				{
 660:RtosV611/Source/tasks.c **** 					/* The wake time has not overflowed, so we can use the
 661:RtosV611/Source/tasks.c **** 					current block list. */
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 25


 662:RtosV611/Source/tasks.c **** 					vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem 
 676              		.loc 1 662 0
 677 0098 0D4B     		ldr	r3, .L32+12	@ tmp153,
 678 009a 1A68     		ldr	r2, [r3]	@ pxDelayedTaskList.25_31, pxDelayedTaskList
 679 009c 0A4B     		ldr	r3, .L32+4	@ tmp154,
 680 009e 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.26_32, pxCurrentTCB
 681 00a0 0433     		adds	r3, r3, #4	@ _33, pxCurrentTCB.26_32,
 682 00a2 1946     		mov	r1, r3	@, _33
 683 00a4 1046     		mov	r0, r2	@, pxDelayedTaskList.25_31
 684 00a6 FFF7FEFF 		bl	vListInsert	@
 685              	.L28:
 663:RtosV611/Source/tasks.c **** 				}
 664:RtosV611/Source/tasks.c **** 			}
 665:RtosV611/Source/tasks.c **** 		}
 666:RtosV611/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
 686              		.loc 1 666 0
 687 00aa FFF7FEFF 		bl	xTaskResumeAll	@
 688 00ae F860     		str	r0, [r7, #12]	@, xAlreadyYielded
 667:RtosV611/Source/tasks.c **** 
 668:RtosV611/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
 669:RtosV611/Source/tasks.c **** 		have put ourselves to sleep. */
 670:RtosV611/Source/tasks.c **** 		if( !xAlreadyYielded )
 689              		.loc 1 670 0
 690 00b0 FB68     		ldr	r3, [r7, #12]	@ tmp155, xAlreadyYielded
 691 00b2 002B     		cmp	r3, #0	@ tmp155,
 692 00b4 01D1     		bne	.L31	@,
 671:RtosV611/Source/tasks.c **** 		{
 672:RtosV611/Source/tasks.c **** 			portYIELD_WITHIN_API();
 693              		.loc 1 672 0
 694 00b6 FFF7FEFF 		bl	vPortYieldFromISR	@
 695              	.L31:
 673:RtosV611/Source/tasks.c **** 		}
 674:RtosV611/Source/tasks.c **** 	}
 696              		.loc 1 674 0
 697 00ba 00BF     		nop
 698 00bc 1837     		adds	r7, r7, #24	@,,
 699              		.cfi_def_cfa_offset 8
 700 00be BD46     		mov	sp, r7	@,
 701              		.cfi_def_cfa_register 13
 702              		@ sp needed	@
 703 00c0 80BD     		pop	{r7, pc}	@
 704              	.L33:
 705 00c2 00BF     		.align	2
 706              	.L32:
 707 00c4 00000000 		.word	xTickCount
 708 00c8 00000000 		.word	pxCurrentTCB
 709 00cc 00000000 		.word	pxOverflowDelayedTaskList
 710 00d0 00000000 		.word	pxDelayedTaskList
 711              		.cfi_endproc
 712              	.LFE3:
 713              		.size	vTaskDelayUntil, .-vTaskDelayUntil
 714              		.section	.text.vTaskDelay,"ax",%progbits
 715              		.align	1
 716              		.global	vTaskDelay
 717              		.syntax unified
 718              		.thumb
 719              		.thumb_func
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 26


 720              		.fpu softvfp
 721              		.type	vTaskDelay, %function
 722              	vTaskDelay:
 723              	.LFB4:
 675:RtosV611/Source/tasks.c **** 
 676:RtosV611/Source/tasks.c **** #endif
 677:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
 678:RtosV611/Source/tasks.c **** 
 679:RtosV611/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
 680:RtosV611/Source/tasks.c **** 
 681:RtosV611/Source/tasks.c **** 	void vTaskDelay( portTickType xTicksToDelay )
 682:RtosV611/Source/tasks.c **** 	{
 724              		.loc 1 682 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 16
 727              		@ frame_needed = 1, uses_anonymous_args = 0
 728 0000 80B5     		push	{r7, lr}	@
 729              		.cfi_def_cfa_offset 8
 730              		.cfi_offset 7, -8
 731              		.cfi_offset 14, -4
 732 0002 84B0     		sub	sp, sp, #16	@,,
 733              		.cfi_def_cfa_offset 24
 734 0004 00AF     		add	r7, sp, #0	@,,
 735              		.cfi_def_cfa_register 7
 736 0006 7860     		str	r0, [r7, #4]	@ xTicksToDelay, xTicksToDelay
 683:RtosV611/Source/tasks.c **** 	portTickType xTimeToWake;
 684:RtosV611/Source/tasks.c **** 	signed portBASE_TYPE xAlreadyYielded = pdFALSE;
 737              		.loc 1 684 0
 738 0008 0023     		movs	r3, #0	@ tmp121,
 739 000a FB60     		str	r3, [r7, #12]	@ tmp121, xAlreadyYielded
 685:RtosV611/Source/tasks.c **** 
 686:RtosV611/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
 687:RtosV611/Source/tasks.c **** 		if( xTicksToDelay > ( portTickType ) 0 )
 740              		.loc 1 687 0
 741 000c 7B68     		ldr	r3, [r7, #4]	@ tmp122, xTicksToDelay
 742 000e 002B     		cmp	r3, #0	@ tmp122,
 743 0010 2BD0     		beq	.L35	@,
 688:RtosV611/Source/tasks.c **** 		{
 689:RtosV611/Source/tasks.c **** 			vTaskSuspendAll();
 744              		.loc 1 689 0
 745 0012 FFF7FEFF 		bl	vTaskSuspendAll	@
 690:RtosV611/Source/tasks.c **** 			{
 691:RtosV611/Source/tasks.c **** 				traceTASK_DELAY();
 692:RtosV611/Source/tasks.c **** 
 693:RtosV611/Source/tasks.c **** 				/* A task that is removed from the event list while the
 694:RtosV611/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
 695:RtosV611/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
 696:RtosV611/Source/tasks.c **** 				is resumed.
 697:RtosV611/Source/tasks.c **** 
 698:RtosV611/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
 699:RtosV611/Source/tasks.c **** 				executing task. */
 700:RtosV611/Source/tasks.c **** 
 701:RtosV611/Source/tasks.c **** 				/* Calculate the time to wake - this may overflow but this is
 702:RtosV611/Source/tasks.c **** 				not a problem. */
 703:RtosV611/Source/tasks.c **** 				xTimeToWake = xTickCount + xTicksToDelay;
 746              		.loc 1 703 0
 747 0016 194B     		ldr	r3, .L40	@ tmp123,
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 27


 748 0018 1A68     		ldr	r2, [r3]	@ xTickCount.27_9, xTickCount
 749 001a 7B68     		ldr	r3, [r7, #4]	@ tmp125, xTicksToDelay
 750 001c 1344     		add	r3, r3, r2	@ tmp124, xTickCount.27_9
 751 001e BB60     		str	r3, [r7, #8]	@ tmp124, xTimeToWake
 704:RtosV611/Source/tasks.c **** 
 705:RtosV611/Source/tasks.c **** 				/* We must remove ourselves from the ready list before adding
 706:RtosV611/Source/tasks.c **** 				ourselves to the blocked list as the same list item is used for
 707:RtosV611/Source/tasks.c **** 				both lists. */
 708:RtosV611/Source/tasks.c **** 				vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
 752              		.loc 1 708 0
 753 0020 174B     		ldr	r3, .L40+4	@ tmp126,
 754 0022 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.28_11, pxCurrentTCB
 755 0024 0433     		adds	r3, r3, #4	@ _12, pxCurrentTCB.28_11,
 756 0026 1846     		mov	r0, r3	@, _12
 757 0028 FFF7FEFF 		bl	vListRemove	@
 709:RtosV611/Source/tasks.c **** 
 710:RtosV611/Source/tasks.c **** 				/* The list item will be inserted in wake time order. */
 711:RtosV611/Source/tasks.c **** 				listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
 758              		.loc 1 711 0
 759 002c 144B     		ldr	r3, .L40+4	@ tmp127,
 760 002e 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.29_14, pxCurrentTCB
 761 0030 BA68     		ldr	r2, [r7, #8]	@ tmp128, xTimeToWake
 762 0032 5A60     		str	r2, [r3, #4]	@ tmp128, pxCurrentTCB.29_14->xGenericListItem.xItemValue
 712:RtosV611/Source/tasks.c **** 
 713:RtosV611/Source/tasks.c **** 				if( xTimeToWake < xTickCount )
 763              		.loc 1 713 0
 764 0034 114B     		ldr	r3, .L40	@ tmp129,
 765 0036 1B68     		ldr	r3, [r3]	@ xTickCount.30_16, xTickCount
 766 0038 BA68     		ldr	r2, [r7, #8]	@ tmp130, xTimeToWake
 767 003a 9A42     		cmp	r2, r3	@ tmp130, xTickCount.30_16
 768 003c 09D2     		bcs	.L36	@,
 714:RtosV611/Source/tasks.c **** 				{
 715:RtosV611/Source/tasks.c **** 					/* Wake time has overflowed.  Place this item in the
 716:RtosV611/Source/tasks.c **** 					overflow list. */
 717:RtosV611/Source/tasks.c **** 					vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericL
 769              		.loc 1 717 0
 770 003e 114B     		ldr	r3, .L40+8	@ tmp131,
 771 0040 1A68     		ldr	r2, [r3]	@ pxOverflowDelayedTaskList.31_17, pxOverflowDelayedTaskList
 772 0042 0F4B     		ldr	r3, .L40+4	@ tmp132,
 773 0044 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.32_18, pxCurrentTCB
 774 0046 0433     		adds	r3, r3, #4	@ _19, pxCurrentTCB.32_18,
 775 0048 1946     		mov	r1, r3	@, _19
 776 004a 1046     		mov	r0, r2	@, pxOverflowDelayedTaskList.31_17
 777 004c FFF7FEFF 		bl	vListInsert	@
 778 0050 08E0     		b	.L37	@
 779              	.L36:
 718:RtosV611/Source/tasks.c **** 				}
 719:RtosV611/Source/tasks.c **** 				else
 720:RtosV611/Source/tasks.c **** 				{
 721:RtosV611/Source/tasks.c **** 					/* The wake time has not overflowed, so we can use the
 722:RtosV611/Source/tasks.c **** 					current block list. */
 723:RtosV611/Source/tasks.c **** 					vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem 
 780              		.loc 1 723 0
 781 0052 0D4B     		ldr	r3, .L40+12	@ tmp133,
 782 0054 1A68     		ldr	r2, [r3]	@ pxDelayedTaskList.33_21, pxDelayedTaskList
 783 0056 0A4B     		ldr	r3, .L40+4	@ tmp134,
 784 0058 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.34_22, pxCurrentTCB
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 28


 785 005a 0433     		adds	r3, r3, #4	@ _23, pxCurrentTCB.34_22,
 786 005c 1946     		mov	r1, r3	@, _23
 787 005e 1046     		mov	r0, r2	@, pxDelayedTaskList.33_21
 788 0060 FFF7FEFF 		bl	vListInsert	@
 789              	.L37:
 724:RtosV611/Source/tasks.c **** 				}
 725:RtosV611/Source/tasks.c **** 			}
 726:RtosV611/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
 790              		.loc 1 726 0
 791 0064 FFF7FEFF 		bl	xTaskResumeAll	@
 792 0068 F860     		str	r0, [r7, #12]	@, xAlreadyYielded
 793              	.L35:
 727:RtosV611/Source/tasks.c **** 		}
 728:RtosV611/Source/tasks.c **** 
 729:RtosV611/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
 730:RtosV611/Source/tasks.c **** 		have put ourselves to sleep. */
 731:RtosV611/Source/tasks.c **** 		if( !xAlreadyYielded )
 794              		.loc 1 731 0
 795 006a FB68     		ldr	r3, [r7, #12]	@ tmp135, xAlreadyYielded
 796 006c 002B     		cmp	r3, #0	@ tmp135,
 797 006e 01D1     		bne	.L39	@,
 732:RtosV611/Source/tasks.c **** 		{
 733:RtosV611/Source/tasks.c **** 			portYIELD_WITHIN_API();
 798              		.loc 1 733 0
 799 0070 FFF7FEFF 		bl	vPortYieldFromISR	@
 800              	.L39:
 734:RtosV611/Source/tasks.c **** 		}
 735:RtosV611/Source/tasks.c **** 	}
 801              		.loc 1 735 0
 802 0074 00BF     		nop
 803 0076 1037     		adds	r7, r7, #16	@,,
 804              		.cfi_def_cfa_offset 8
 805 0078 BD46     		mov	sp, r7	@,
 806              		.cfi_def_cfa_register 13
 807              		@ sp needed	@
 808 007a 80BD     		pop	{r7, pc}	@
 809              	.L41:
 810              		.align	2
 811              	.L40:
 812 007c 00000000 		.word	xTickCount
 813 0080 00000000 		.word	pxCurrentTCB
 814 0084 00000000 		.word	pxOverflowDelayedTaskList
 815 0088 00000000 		.word	pxDelayedTaskList
 816              		.cfi_endproc
 817              	.LFE4:
 818              		.size	vTaskDelay, .-vTaskDelay
 819              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 820              		.align	1
 821              		.global	uxTaskPriorityGet
 822              		.syntax unified
 823              		.thumb
 824              		.thumb_func
 825              		.fpu softvfp
 826              		.type	uxTaskPriorityGet, %function
 827              	uxTaskPriorityGet:
 828              	.LFB5:
 736:RtosV611/Source/tasks.c **** 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 29


 737:RtosV611/Source/tasks.c **** #endif
 738:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
 739:RtosV611/Source/tasks.c **** 
 740:RtosV611/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
 741:RtosV611/Source/tasks.c **** 
 742:RtosV611/Source/tasks.c **** 	unsigned portBASE_TYPE uxTaskPriorityGet( xTaskHandle pxTask )
 743:RtosV611/Source/tasks.c **** 	{
 829              		.loc 1 743 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 16
 832              		@ frame_needed = 1, uses_anonymous_args = 0
 833 0000 80B5     		push	{r7, lr}	@
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 84B0     		sub	sp, sp, #16	@,,
 838              		.cfi_def_cfa_offset 24
 839 0004 00AF     		add	r7, sp, #0	@,,
 840              		.cfi_def_cfa_register 7
 841 0006 7860     		str	r0, [r7, #4]	@ pxTask, pxTask
 744:RtosV611/Source/tasks.c **** 	tskTCB *pxTCB;
 745:RtosV611/Source/tasks.c **** 	unsigned portBASE_TYPE uxReturn;
 746:RtosV611/Source/tasks.c **** 
 747:RtosV611/Source/tasks.c **** 		portENTER_CRITICAL();
 842              		.loc 1 747 0
 843 0008 FFF7FEFF 		bl	vPortEnterCritical	@
 748:RtosV611/Source/tasks.c **** 		{
 749:RtosV611/Source/tasks.c **** 			/* If null is passed in here then we are changing the
 750:RtosV611/Source/tasks.c **** 			priority of the calling function. */
 751:RtosV611/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTask );
 844              		.loc 1 751 0
 845 000c 7B68     		ldr	r3, [r7, #4]	@ tmp113, pxTask
 846 000e 002B     		cmp	r3, #0	@ tmp113,
 847 0010 02D1     		bne	.L43	@,
 848              		.loc 1 751 0 is_stmt 0 discriminator 1
 849 0012 074B     		ldr	r3, .L46	@ tmp114,
 850 0014 1B68     		ldr	r3, [r3]	@ iftmp.35_1, pxCurrentTCB
 851 0016 00E0     		b	.L44	@
 852              	.L43:
 853              		.loc 1 751 0 discriminator 2
 854 0018 7B68     		ldr	r3, [r7, #4]	@ iftmp.35_1, pxTask
 855              	.L44:
 856              		.loc 1 751 0 discriminator 4
 857 001a FB60     		str	r3, [r7, #12]	@ iftmp.35_1, pxTCB
 752:RtosV611/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 858              		.loc 1 752 0 is_stmt 1 discriminator 4
 859 001c FB68     		ldr	r3, [r7, #12]	@ tmp115, pxTCB
 860 001e DB6A     		ldr	r3, [r3, #44]	@ tmp116, pxTCB_7->uxPriority
 861 0020 BB60     		str	r3, [r7, #8]	@ tmp116, uxReturn
 753:RtosV611/Source/tasks.c **** 		}
 754:RtosV611/Source/tasks.c **** 		portEXIT_CRITICAL();
 862              		.loc 1 754 0 discriminator 4
 863 0022 FFF7FEFF 		bl	vPortExitCritical	@
 755:RtosV611/Source/tasks.c **** 
 756:RtosV611/Source/tasks.c **** 		return uxReturn;
 864              		.loc 1 756 0 discriminator 4
 865 0026 BB68     		ldr	r3, [r7, #8]	@ _10, uxReturn
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 30


 757:RtosV611/Source/tasks.c **** 	}
 866              		.loc 1 757 0 discriminator 4
 867 0028 1846     		mov	r0, r3	@, <retval>
 868 002a 1037     		adds	r7, r7, #16	@,,
 869              		.cfi_def_cfa_offset 8
 870 002c BD46     		mov	sp, r7	@,
 871              		.cfi_def_cfa_register 13
 872              		@ sp needed	@
 873 002e 80BD     		pop	{r7, pc}	@
 874              	.L47:
 875              		.align	2
 876              	.L46:
 877 0030 00000000 		.word	pxCurrentTCB
 878              		.cfi_endproc
 879              	.LFE5:
 880              		.size	uxTaskPriorityGet, .-uxTaskPriorityGet
 881              		.section	.text.vTaskPrioritySet,"ax",%progbits
 882              		.align	1
 883              		.global	vTaskPrioritySet
 884              		.syntax unified
 885              		.thumb
 886              		.thumb_func
 887              		.fpu softvfp
 888              		.type	vTaskPrioritySet, %function
 889              	vTaskPrioritySet:
 890              	.LFB6:
 758:RtosV611/Source/tasks.c **** 
 759:RtosV611/Source/tasks.c **** #endif
 760:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
 761:RtosV611/Source/tasks.c **** 
 762:RtosV611/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
 763:RtosV611/Source/tasks.c **** 
 764:RtosV611/Source/tasks.c **** 	void vTaskPrioritySet( xTaskHandle pxTask, unsigned portBASE_TYPE uxNewPriority )
 765:RtosV611/Source/tasks.c **** 	{
 891              		.loc 1 765 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 24
 894              		@ frame_needed = 1, uses_anonymous_args = 0
 895 0000 80B5     		push	{r7, lr}	@
 896              		.cfi_def_cfa_offset 8
 897              		.cfi_offset 7, -8
 898              		.cfi_offset 14, -4
 899 0002 86B0     		sub	sp, sp, #24	@,,
 900              		.cfi_def_cfa_offset 32
 901 0004 00AF     		add	r7, sp, #0	@,,
 902              		.cfi_def_cfa_register 7
 903 0006 7860     		str	r0, [r7, #4]	@ pxTask, pxTask
 904 0008 3960     		str	r1, [r7]	@ uxNewPriority, uxNewPriority
 766:RtosV611/Source/tasks.c **** 	tskTCB *pxTCB;
 767:RtosV611/Source/tasks.c **** 	unsigned portBASE_TYPE uxCurrentPriority, xYieldRequired = pdFALSE;
 905              		.loc 1 767 0
 906 000a 0023     		movs	r3, #0	@ tmp124,
 907 000c 7B61     		str	r3, [r7, #20]	@ tmp124, xYieldRequired
 768:RtosV611/Source/tasks.c **** 
 769:RtosV611/Source/tasks.c **** 		/* Ensure the new priority is valid. */
 770:RtosV611/Source/tasks.c **** 		if( uxNewPriority >= configMAX_PRIORITIES )
 908              		.loc 1 770 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 31


 909 000e 3B68     		ldr	r3, [r7]	@ tmp125, uxNewPriority
 910 0010 052B     		cmp	r3, #5	@ tmp125,
 911 0012 01D9     		bls	.L49	@,
 771:RtosV611/Source/tasks.c **** 		{
 772:RtosV611/Source/tasks.c **** 			uxNewPriority = configMAX_PRIORITIES - 1;
 912              		.loc 1 772 0
 913 0014 0523     		movs	r3, #5	@ tmp126,
 914 0016 3B60     		str	r3, [r7]	@ tmp126, uxNewPriority
 915              	.L49:
 773:RtosV611/Source/tasks.c **** 		}
 774:RtosV611/Source/tasks.c **** 
 775:RtosV611/Source/tasks.c **** 		portENTER_CRITICAL();
 916              		.loc 1 775 0
 917 0018 FFF7FEFF 		bl	vPortEnterCritical	@
 776:RtosV611/Source/tasks.c **** 		{
 777:RtosV611/Source/tasks.c **** 			if( pxTask == pxCurrentTCB )
 918              		.loc 1 777 0
 919 001c 344B     		ldr	r3, .L60	@ tmp127,
 920 001e 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.36_15, pxCurrentTCB
 921 0020 7A68     		ldr	r2, [r7, #4]	@ tmp128, pxTask
 922 0022 9A42     		cmp	r2, r3	@ tmp128, pxCurrentTCB.36_15
 923 0024 01D1     		bne	.L50	@,
 778:RtosV611/Source/tasks.c **** 			{
 779:RtosV611/Source/tasks.c **** 				pxTask = NULL;
 924              		.loc 1 779 0
 925 0026 0023     		movs	r3, #0	@ tmp129,
 926 0028 7B60     		str	r3, [r7, #4]	@ tmp129, pxTask
 927              	.L50:
 780:RtosV611/Source/tasks.c **** 			}
 781:RtosV611/Source/tasks.c **** 
 782:RtosV611/Source/tasks.c **** 			/* If null is passed in here then we are changing the
 783:RtosV611/Source/tasks.c **** 			priority of the calling function. */
 784:RtosV611/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTask );
 928              		.loc 1 784 0
 929 002a 7B68     		ldr	r3, [r7, #4]	@ tmp130, pxTask
 930 002c 002B     		cmp	r3, #0	@ tmp130,
 931 002e 02D1     		bne	.L51	@,
 932              		.loc 1 784 0 is_stmt 0 discriminator 1
 933 0030 2F4B     		ldr	r3, .L60	@ tmp131,
 934 0032 1B68     		ldr	r3, [r3]	@ iftmp.37_5, pxCurrentTCB
 935 0034 00E0     		b	.L52	@
 936              	.L51:
 937              		.loc 1 784 0 discriminator 2
 938 0036 7B68     		ldr	r3, [r7, #4]	@ iftmp.37_5, pxTask
 939              	.L52:
 940              		.loc 1 784 0 discriminator 4
 941 0038 3B61     		str	r3, [r7, #16]	@ iftmp.37_5, pxTCB
 785:RtosV611/Source/tasks.c **** 
 786:RtosV611/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTask, uxNewPriority );
 787:RtosV611/Source/tasks.c **** 
 788:RtosV611/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
 789:RtosV611/Source/tasks.c **** 			{
 790:RtosV611/Source/tasks.c **** 				uxCurrentPriority = pxTCB->uxBasePriority;
 942              		.loc 1 790 0 is_stmt 1 discriminator 4
 943 003a 3B69     		ldr	r3, [r7, #16]	@ tmp132, pxTCB
 944 003c 9B6C     		ldr	r3, [r3, #72]	@ tmp133, pxTCB_20->uxBasePriority
 945 003e FB60     		str	r3, [r7, #12]	@ tmp133, uxCurrentPriority
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 32


 791:RtosV611/Source/tasks.c **** 			}
 792:RtosV611/Source/tasks.c **** 			#else
 793:RtosV611/Source/tasks.c **** 			{
 794:RtosV611/Source/tasks.c **** 				uxCurrentPriority = pxTCB->uxPriority;
 795:RtosV611/Source/tasks.c **** 			}
 796:RtosV611/Source/tasks.c **** 			#endif
 797:RtosV611/Source/tasks.c **** 
 798:RtosV611/Source/tasks.c **** 			if( uxCurrentPriority != uxNewPriority )
 946              		.loc 1 798 0 discriminator 4
 947 0040 FA68     		ldr	r2, [r7, #12]	@ tmp134, uxCurrentPriority
 948 0042 3B68     		ldr	r3, [r7]	@ tmp135, uxNewPriority
 949 0044 9A42     		cmp	r2, r3	@ tmp134, tmp135
 950 0046 4CD0     		beq	.L53	@,
 799:RtosV611/Source/tasks.c **** 			{
 800:RtosV611/Source/tasks.c **** 				/* The priority change may have readied a task of higher
 801:RtosV611/Source/tasks.c **** 				priority than the calling task. */
 802:RtosV611/Source/tasks.c **** 				if( uxNewPriority > uxCurrentPriority )
 951              		.loc 1 802 0
 952 0048 3A68     		ldr	r2, [r7]	@ tmp136, uxNewPriority
 953 004a FB68     		ldr	r3, [r7, #12]	@ tmp137, uxCurrentPriority
 954 004c 9A42     		cmp	r2, r3	@ tmp136, tmp137
 955 004e 05D9     		bls	.L54	@,
 803:RtosV611/Source/tasks.c **** 				{
 804:RtosV611/Source/tasks.c **** 					if( pxTask != NULL )
 956              		.loc 1 804 0
 957 0050 7B68     		ldr	r3, [r7, #4]	@ tmp138, pxTask
 958 0052 002B     		cmp	r3, #0	@ tmp138,
 959 0054 07D0     		beq	.L56	@,
 805:RtosV611/Source/tasks.c **** 					{
 806:RtosV611/Source/tasks.c **** 						/* The priority of another task is being raised.  If we
 807:RtosV611/Source/tasks.c **** 						were raising the priority of the currently running task
 808:RtosV611/Source/tasks.c **** 						there would be no need to switch as it must have already
 809:RtosV611/Source/tasks.c **** 						been the highest priority task. */
 810:RtosV611/Source/tasks.c **** 						xYieldRequired = pdTRUE;
 960              		.loc 1 810 0
 961 0056 0123     		movs	r3, #1	@ tmp139,
 962 0058 7B61     		str	r3, [r7, #20]	@ tmp139, xYieldRequired
 963 005a 04E0     		b	.L56	@
 964              	.L54:
 811:RtosV611/Source/tasks.c **** 					}
 812:RtosV611/Source/tasks.c **** 				}
 813:RtosV611/Source/tasks.c **** 				else if( pxTask == NULL )
 965              		.loc 1 813 0
 966 005c 7B68     		ldr	r3, [r7, #4]	@ tmp140, pxTask
 967 005e 002B     		cmp	r3, #0	@ tmp140,
 968 0060 01D1     		bne	.L56	@,
 814:RtosV611/Source/tasks.c **** 				{
 815:RtosV611/Source/tasks.c **** 					/* Setting our own priority down means there may now be another
 816:RtosV611/Source/tasks.c **** 					task of higher priority that is ready to execute. */
 817:RtosV611/Source/tasks.c **** 					xYieldRequired = pdTRUE;
 969              		.loc 1 817 0
 970 0062 0123     		movs	r3, #1	@ tmp141,
 971 0064 7B61     		str	r3, [r7, #20]	@ tmp141, xYieldRequired
 972              	.L56:
 818:RtosV611/Source/tasks.c **** 				}
 819:RtosV611/Source/tasks.c **** 
 820:RtosV611/Source/tasks.c **** 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 33


 821:RtosV611/Source/tasks.c **** 
 822:RtosV611/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
 823:RtosV611/Source/tasks.c **** 				{
 824:RtosV611/Source/tasks.c **** 					/* Only change the priority being used if the task is not
 825:RtosV611/Source/tasks.c **** 					currently using an inherited priority. */
 826:RtosV611/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
 973              		.loc 1 826 0
 974 0066 3B69     		ldr	r3, [r7, #16]	@ tmp142, pxTCB
 975 0068 9A6C     		ldr	r2, [r3, #72]	@ _24, pxTCB_20->uxBasePriority
 976 006a 3B69     		ldr	r3, [r7, #16]	@ tmp143, pxTCB
 977 006c DB6A     		ldr	r3, [r3, #44]	@ _25, pxTCB_20->uxPriority
 978 006e 9A42     		cmp	r2, r3	@ _24, _25
 979 0070 02D1     		bne	.L57	@,
 827:RtosV611/Source/tasks.c **** 					{
 828:RtosV611/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
 980              		.loc 1 828 0
 981 0072 3B69     		ldr	r3, [r7, #16]	@ tmp144, pxTCB
 982 0074 3A68     		ldr	r2, [r7]	@ tmp145, uxNewPriority
 983 0076 DA62     		str	r2, [r3, #44]	@ tmp145, pxTCB_20->uxPriority
 984              	.L57:
 829:RtosV611/Source/tasks.c **** 					}
 830:RtosV611/Source/tasks.c **** 
 831:RtosV611/Source/tasks.c **** 					/* The base priority gets set whatever. */
 832:RtosV611/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
 985              		.loc 1 832 0
 986 0078 3B69     		ldr	r3, [r7, #16]	@ tmp146, pxTCB
 987 007a 3A68     		ldr	r2, [r7]	@ tmp147, uxNewPriority
 988 007c 9A64     		str	r2, [r3, #72]	@ tmp147, pxTCB_20->uxBasePriority
 833:RtosV611/Source/tasks.c **** 				}
 834:RtosV611/Source/tasks.c **** 				#else
 835:RtosV611/Source/tasks.c **** 				{
 836:RtosV611/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
 837:RtosV611/Source/tasks.c **** 				}
 838:RtosV611/Source/tasks.c **** 				#endif
 839:RtosV611/Source/tasks.c **** 
 840:RtosV611/Source/tasks.c **** 				listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( configMAX_PRIORITIES - ( portTickType ) 
 989              		.loc 1 840 0
 990 007e 3B68     		ldr	r3, [r7]	@ tmp148, uxNewPriority
 991 0080 C3F10602 		rsb	r2, r3, #6	@ _28, tmp148,
 992 0084 3B69     		ldr	r3, [r7, #16]	@ tmp149, pxTCB
 993 0086 9A61     		str	r2, [r3, #24]	@ _28, pxTCB_20->xEventListItem.xItemValue
 841:RtosV611/Source/tasks.c **** 
 842:RtosV611/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
 843:RtosV611/Source/tasks.c **** 				nothing more than change it's priority variable. However, if
 844:RtosV611/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
 845:RtosV611/Source/tasks.c **** 				in the queue appropriate to its new priority. */
 846:RtosV611/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxCurrentPriority ] ), &( pxTCB->xGenericLis
 994              		.loc 1 846 0
 995 0088 3B69     		ldr	r3, [r7, #16]	@ tmp150, pxTCB
 996 008a 5969     		ldr	r1, [r3, #20]	@ _30, pxTCB_20->xGenericListItem.pvContainer
 997 008c FA68     		ldr	r2, [r7, #12]	@ tmp151, uxCurrentPriority
 998 008e 1346     		mov	r3, r2	@ tmp152, tmp151
 999 0090 9B00     		lsls	r3, r3, #2	@ tmp152, tmp152,
 1000 0092 1344     		add	r3, r3, r2	@ tmp152, tmp151
 1001 0094 9B00     		lsls	r3, r3, #2	@ tmp153, tmp152,
 1002 0096 174A     		ldr	r2, .L60+4	@ tmp154,
 1003 0098 1344     		add	r3, r3, r2	@ _31, tmp154
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 34


 1004 009a 9942     		cmp	r1, r3	@ _30, _31
 1005 009c 1CD1     		bne	.L58	@,
 847:RtosV611/Source/tasks.c **** 				{
 848:RtosV611/Source/tasks.c **** 					/* The task is currently in its ready list - remove before adding
 849:RtosV611/Source/tasks.c **** 					it to it's new ready list.  As we are in a critical section we
 850:RtosV611/Source/tasks.c **** 					can do this even if the scheduler is suspended. */
 851:RtosV611/Source/tasks.c **** 					vListRemove( &( pxTCB->xGenericListItem ) );
 1006              		.loc 1 851 0
 1007 009e 3B69     		ldr	r3, [r7, #16]	@ tmp155, pxTCB
 1008 00a0 0433     		adds	r3, r3, #4	@ _32, tmp155,
 1009 00a2 1846     		mov	r0, r3	@, _32
 1010 00a4 FFF7FEFF 		bl	vListRemove	@
 852:RtosV611/Source/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
 1011              		.loc 1 852 0
 1012 00a8 3B69     		ldr	r3, [r7, #16]	@ tmp156, pxTCB
 1013 00aa DA6A     		ldr	r2, [r3, #44]	@ _34, pxTCB_20->uxPriority
 1014 00ac 124B     		ldr	r3, .L60+8	@ tmp157,
 1015 00ae 1B68     		ldr	r3, [r3]	@ uxTopReadyPriority.38_35, uxTopReadyPriority
 1016 00b0 9A42     		cmp	r2, r3	@ _34, uxTopReadyPriority.38_35
 1017 00b2 03D9     		bls	.L59	@,
 1018              		.loc 1 852 0 is_stmt 0 discriminator 1
 1019 00b4 3B69     		ldr	r3, [r7, #16]	@ tmp158, pxTCB
 1020 00b6 DB6A     		ldr	r3, [r3, #44]	@ _36, pxTCB_20->uxPriority
 1021 00b8 0F4A     		ldr	r2, .L60+8	@ tmp159,
 1022 00ba 1360     		str	r3, [r2]	@ _36, uxTopReadyPriority
 1023              	.L59:
 1024              		.loc 1 852 0 discriminator 3
 1025 00bc 3B69     		ldr	r3, [r7, #16]	@ tmp160, pxTCB
 1026 00be DA6A     		ldr	r2, [r3, #44]	@ _38, pxTCB_20->uxPriority
 1027 00c0 1346     		mov	r3, r2	@ tmp161, _38
 1028 00c2 9B00     		lsls	r3, r3, #2	@ tmp161, tmp161,
 1029 00c4 1344     		add	r3, r3, r2	@ tmp161, _38
 1030 00c6 9B00     		lsls	r3, r3, #2	@ tmp162, tmp161,
 1031 00c8 0A4A     		ldr	r2, .L60+4	@ tmp163,
 1032 00ca 1A44     		add	r2, r2, r3	@ _39, tmp161
 1033 00cc 3B69     		ldr	r3, [r7, #16]	@ tmp164, pxTCB
 1034 00ce 0433     		adds	r3, r3, #4	@ _40, tmp164,
 1035 00d0 1946     		mov	r1, r3	@, _40
 1036 00d2 1046     		mov	r0, r2	@, _39
 1037 00d4 FFF7FEFF 		bl	vListInsertEnd	@
 1038              	.L58:
 853:RtosV611/Source/tasks.c **** 				}
 854:RtosV611/Source/tasks.c **** 
 855:RtosV611/Source/tasks.c **** 				if( xYieldRequired == pdTRUE )
 1039              		.loc 1 855 0 is_stmt 1
 1040 00d8 7B69     		ldr	r3, [r7, #20]	@ tmp165, xYieldRequired
 1041 00da 012B     		cmp	r3, #1	@ tmp165,
 1042 00dc 01D1     		bne	.L53	@,
 856:RtosV611/Source/tasks.c **** 				{
 857:RtosV611/Source/tasks.c **** 					portYIELD_WITHIN_API();
 1043              		.loc 1 857 0
 1044 00de FFF7FEFF 		bl	vPortYieldFromISR	@
 1045              	.L53:
 858:RtosV611/Source/tasks.c **** 				}
 859:RtosV611/Source/tasks.c **** 			}
 860:RtosV611/Source/tasks.c **** 		}
 861:RtosV611/Source/tasks.c **** 		portEXIT_CRITICAL();
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 35


 1046              		.loc 1 861 0
 1047 00e2 FFF7FEFF 		bl	vPortExitCritical	@
 862:RtosV611/Source/tasks.c **** 	}
 1048              		.loc 1 862 0
 1049 00e6 00BF     		nop
 1050 00e8 1837     		adds	r7, r7, #24	@,,
 1051              		.cfi_def_cfa_offset 8
 1052 00ea BD46     		mov	sp, r7	@,
 1053              		.cfi_def_cfa_register 13
 1054              		@ sp needed	@
 1055 00ec 80BD     		pop	{r7, pc}	@
 1056              	.L61:
 1057 00ee 00BF     		.align	2
 1058              	.L60:
 1059 00f0 00000000 		.word	pxCurrentTCB
 1060 00f4 00000000 		.word	pxReadyTasksLists
 1061 00f8 00000000 		.word	uxTopReadyPriority
 1062              		.cfi_endproc
 1063              	.LFE6:
 1064              		.size	vTaskPrioritySet, .-vTaskPrioritySet
 1065              		.section	.text.vTaskSuspend,"ax",%progbits
 1066              		.align	1
 1067              		.global	vTaskSuspend
 1068              		.syntax unified
 1069              		.thumb
 1070              		.thumb_func
 1071              		.fpu softvfp
 1072              		.type	vTaskSuspend, %function
 1073              	vTaskSuspend:
 1074              	.LFB7:
 863:RtosV611/Source/tasks.c **** 
 864:RtosV611/Source/tasks.c **** #endif
 865:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
 866:RtosV611/Source/tasks.c **** 
 867:RtosV611/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 868:RtosV611/Source/tasks.c **** 
 869:RtosV611/Source/tasks.c **** 	void vTaskSuspend( xTaskHandle pxTaskToSuspend )
 870:RtosV611/Source/tasks.c **** 	{
 1075              		.loc 1 870 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 16
 1078              		@ frame_needed = 1, uses_anonymous_args = 0
 1079 0000 80B5     		push	{r7, lr}	@
 1080              		.cfi_def_cfa_offset 8
 1081              		.cfi_offset 7, -8
 1082              		.cfi_offset 14, -4
 1083 0002 84B0     		sub	sp, sp, #16	@,,
 1084              		.cfi_def_cfa_offset 24
 1085 0004 00AF     		add	r7, sp, #0	@,,
 1086              		.cfi_def_cfa_register 7
 1087 0006 7860     		str	r0, [r7, #4]	@ pxTaskToSuspend, pxTaskToSuspend
 871:RtosV611/Source/tasks.c **** 	tskTCB *pxTCB;
 872:RtosV611/Source/tasks.c **** 
 873:RtosV611/Source/tasks.c **** 		portENTER_CRITICAL();
 1088              		.loc 1 873 0
 1089 0008 FFF7FEFF 		bl	vPortEnterCritical	@
 874:RtosV611/Source/tasks.c **** 		{
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 36


 875:RtosV611/Source/tasks.c **** 			/* Ensure a yield is performed if the current task is being
 876:RtosV611/Source/tasks.c **** 			suspended. */
 877:RtosV611/Source/tasks.c **** 			if( pxTaskToSuspend == pxCurrentTCB )
 1090              		.loc 1 877 0
 1091 000c 1E4B     		ldr	r3, .L71	@ tmp118,
 1092 000e 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.39_7, pxCurrentTCB
 1093 0010 7A68     		ldr	r2, [r7, #4]	@ tmp119, pxTaskToSuspend
 1094 0012 9A42     		cmp	r2, r3	@ tmp119, pxCurrentTCB.39_7
 1095 0014 01D1     		bne	.L63	@,
 878:RtosV611/Source/tasks.c **** 			{
 879:RtosV611/Source/tasks.c **** 				pxTaskToSuspend = NULL;
 1096              		.loc 1 879 0
 1097 0016 0023     		movs	r3, #0	@ tmp120,
 1098 0018 7B60     		str	r3, [r7, #4]	@ tmp120, pxTaskToSuspend
 1099              	.L63:
 880:RtosV611/Source/tasks.c **** 			}
 881:RtosV611/Source/tasks.c **** 
 882:RtosV611/Source/tasks.c **** 			/* If null is passed in here then we are suspending ourselves. */
 883:RtosV611/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTaskToSuspend );
 1100              		.loc 1 883 0
 1101 001a 7B68     		ldr	r3, [r7, #4]	@ tmp121, pxTaskToSuspend
 1102 001c 002B     		cmp	r3, #0	@ tmp121,
 1103 001e 02D1     		bne	.L64	@,
 1104              		.loc 1 883 0 is_stmt 0 discriminator 1
 1105 0020 194B     		ldr	r3, .L71	@ tmp122,
 1106 0022 1B68     		ldr	r3, [r3]	@ iftmp.40_2, pxCurrentTCB
 1107 0024 00E0     		b	.L65	@
 1108              	.L64:
 1109              		.loc 1 883 0 discriminator 2
 1110 0026 7B68     		ldr	r3, [r7, #4]	@ iftmp.40_2, pxTaskToSuspend
 1111              	.L65:
 1112              		.loc 1 883 0 discriminator 4
 1113 0028 FB60     		str	r3, [r7, #12]	@ iftmp.40_2, pxTCB
 884:RtosV611/Source/tasks.c **** 
 885:RtosV611/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
 886:RtosV611/Source/tasks.c **** 
 887:RtosV611/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the	suspended list. */
 888:RtosV611/Source/tasks.c **** 			vListRemove( &( pxTCB->xGenericListItem ) );
 1114              		.loc 1 888 0 is_stmt 1 discriminator 4
 1115 002a FB68     		ldr	r3, [r7, #12]	@ tmp123, pxTCB
 1116 002c 0433     		adds	r3, r3, #4	@ _13, tmp123,
 1117 002e 1846     		mov	r0, r3	@, _13
 1118 0030 FFF7FEFF 		bl	vListRemove	@
 889:RtosV611/Source/tasks.c **** 
 890:RtosV611/Source/tasks.c **** 			/* Is the task waiting on an event also? */
 891:RtosV611/Source/tasks.c **** 			if( pxTCB->xEventListItem.pvContainer )
 1119              		.loc 1 891 0 discriminator 4
 1120 0034 FB68     		ldr	r3, [r7, #12]	@ tmp124, pxTCB
 1121 0036 9B6A     		ldr	r3, [r3, #40]	@ _15, pxTCB_12->xEventListItem.pvContainer
 1122 0038 002B     		cmp	r3, #0	@ _15,
 1123 003a 04D0     		beq	.L66	@,
 892:RtosV611/Source/tasks.c **** 			{
 893:RtosV611/Source/tasks.c **** 				vListRemove( &( pxTCB->xEventListItem ) );
 1124              		.loc 1 893 0
 1125 003c FB68     		ldr	r3, [r7, #12]	@ tmp125, pxTCB
 1126 003e 1833     		adds	r3, r3, #24	@ _16, tmp125,
 1127 0040 1846     		mov	r0, r3	@, _16
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 37


 1128 0042 FFF7FEFF 		bl	vListRemove	@
 1129              	.L66:
 894:RtosV611/Source/tasks.c **** 			}
 895:RtosV611/Source/tasks.c **** 
 896:RtosV611/Source/tasks.c **** 			vListInsertEnd( ( xList * ) &xSuspendedTaskList, &( pxTCB->xGenericListItem ) );
 1130              		.loc 1 896 0
 1131 0046 FB68     		ldr	r3, [r7, #12]	@ tmp126, pxTCB
 1132 0048 0433     		adds	r3, r3, #4	@ _18, tmp126,
 1133 004a 1946     		mov	r1, r3	@, _18
 1134 004c 0F48     		ldr	r0, .L71+4	@,
 1135 004e FFF7FEFF 		bl	vListInsertEnd	@
 897:RtosV611/Source/tasks.c **** 		}
 898:RtosV611/Source/tasks.c **** 		portEXIT_CRITICAL();
 1136              		.loc 1 898 0
 1137 0052 FFF7FEFF 		bl	vPortExitCritical	@
 899:RtosV611/Source/tasks.c **** 
 900:RtosV611/Source/tasks.c **** 		if( ( void * ) pxTaskToSuspend == NULL )
 1138              		.loc 1 900 0
 1139 0056 7B68     		ldr	r3, [r7, #4]	@ tmp127, pxTaskToSuspend
 1140 0058 002B     		cmp	r3, #0	@ tmp127,
 1141 005a 10D1     		bne	.L70	@,
 901:RtosV611/Source/tasks.c **** 		{
 902:RtosV611/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
 1142              		.loc 1 902 0
 1143 005c 0C4B     		ldr	r3, .L71+8	@ tmp128,
 1144 005e 1B68     		ldr	r3, [r3]	@ xSchedulerRunning.41_21, xSchedulerRunning
 1145 0060 002B     		cmp	r3, #0	@ xSchedulerRunning.41_21,
 1146 0062 02D0     		beq	.L68	@,
 903:RtosV611/Source/tasks.c **** 			{
 904:RtosV611/Source/tasks.c **** 				/* We have just suspended the current task. */
 905:RtosV611/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1147              		.loc 1 905 0
 1148 0064 FFF7FEFF 		bl	vPortYieldFromISR	@
 906:RtosV611/Source/tasks.c **** 			}
 907:RtosV611/Source/tasks.c **** 			else
 908:RtosV611/Source/tasks.c **** 			{
 909:RtosV611/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
 910:RtosV611/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
 911:RtosV611/Source/tasks.c **** 				must be adjusted to point to a different task. */
 912:RtosV611/Source/tasks.c **** 				if( uxCurrentNumberOfTasks == 1 )
 913:RtosV611/Source/tasks.c **** 				{
 914:RtosV611/Source/tasks.c **** 					/* No other tasks are defined, so set pxCurrentTCB back to
 915:RtosV611/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
 916:RtosV611/Source/tasks.c **** 					be set to point to it no matter what its relative priority
 917:RtosV611/Source/tasks.c **** 					is. */
 918:RtosV611/Source/tasks.c **** 					pxCurrentTCB = NULL;
 919:RtosV611/Source/tasks.c **** 				}
 920:RtosV611/Source/tasks.c **** 				else
 921:RtosV611/Source/tasks.c **** 				{
 922:RtosV611/Source/tasks.c **** 					vTaskSwitchContext();
 923:RtosV611/Source/tasks.c **** 				}
 924:RtosV611/Source/tasks.c **** 			}
 925:RtosV611/Source/tasks.c **** 		}
 926:RtosV611/Source/tasks.c **** 	}
 1149              		.loc 1 926 0
 1150 0068 09E0     		b	.L70	@
 1151              	.L68:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 38


 912:RtosV611/Source/tasks.c **** 				{
 1152              		.loc 1 912 0
 1153 006a 0A4B     		ldr	r3, .L71+12	@ tmp129,
 1154 006c 1B68     		ldr	r3, [r3]	@ uxCurrentNumberOfTasks.42_23, uxCurrentNumberOfTasks
 1155 006e 012B     		cmp	r3, #1	@ uxCurrentNumberOfTasks.42_23,
 1156 0070 03D1     		bne	.L69	@,
 918:RtosV611/Source/tasks.c **** 				}
 1157              		.loc 1 918 0
 1158 0072 054B     		ldr	r3, .L71	@ tmp130,
 1159 0074 0022     		movs	r2, #0	@ tmp131,
 1160 0076 1A60     		str	r2, [r3]	@ tmp131, pxCurrentTCB
 1161              		.loc 1 926 0
 1162 0078 01E0     		b	.L70	@
 1163              	.L69:
 922:RtosV611/Source/tasks.c **** 				}
 1164              		.loc 1 922 0
 1165 007a FFF7FEFF 		bl	vTaskSwitchContext	@
 1166              	.L70:
 1167              		.loc 1 926 0
 1168 007e 00BF     		nop
 1169 0080 1037     		adds	r7, r7, #16	@,,
 1170              		.cfi_def_cfa_offset 8
 1171 0082 BD46     		mov	sp, r7	@,
 1172              		.cfi_def_cfa_register 13
 1173              		@ sp needed	@
 1174 0084 80BD     		pop	{r7, pc}	@
 1175              	.L72:
 1176 0086 00BF     		.align	2
 1177              	.L71:
 1178 0088 00000000 		.word	pxCurrentTCB
 1179 008c 00000000 		.word	xSuspendedTaskList
 1180 0090 00000000 		.word	xSchedulerRunning
 1181 0094 00000000 		.word	uxCurrentNumberOfTasks
 1182              		.cfi_endproc
 1183              	.LFE7:
 1184              		.size	vTaskSuspend, .-vTaskSuspend
 1185              		.section	.text.xTaskIsTaskSuspended,"ax",%progbits
 1186              		.align	1
 1187              		.global	xTaskIsTaskSuspended
 1188              		.syntax unified
 1189              		.thumb
 1190              		.thumb_func
 1191              		.fpu softvfp
 1192              		.type	xTaskIsTaskSuspended, %function
 1193              	xTaskIsTaskSuspended:
 1194              	.LFB8:
 927:RtosV611/Source/tasks.c **** 
 928:RtosV611/Source/tasks.c **** #endif
 929:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
 930:RtosV611/Source/tasks.c **** 
 931:RtosV611/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 932:RtosV611/Source/tasks.c **** 
 933:RtosV611/Source/tasks.c **** 	signed portBASE_TYPE xTaskIsTaskSuspended( xTaskHandle xTask )
 934:RtosV611/Source/tasks.c **** 	{
 1195              		.loc 1 934 0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 39


 1198              		@ frame_needed = 1, uses_anonymous_args = 0
 1199              		@ link register save eliminated.
 1200 0000 80B4     		push	{r7}	@
 1201              		.cfi_def_cfa_offset 4
 1202              		.cfi_offset 7, -4
 1203 0002 85B0     		sub	sp, sp, #20	@,,
 1204              		.cfi_def_cfa_offset 24
 1205 0004 00AF     		add	r7, sp, #0	@,,
 1206              		.cfi_def_cfa_register 7
 1207 0006 7860     		str	r0, [r7, #4]	@ xTask, xTask
 935:RtosV611/Source/tasks.c **** 	portBASE_TYPE xReturn = pdFALSE;
 1208              		.loc 1 935 0
 1209 0008 0023     		movs	r3, #0	@ tmp115,
 1210 000a FB60     		str	r3, [r7, #12]	@ tmp115, xReturn
 936:RtosV611/Source/tasks.c **** 	const tskTCB * const pxTCB = ( tskTCB * ) xTask;
 1211              		.loc 1 936 0
 1212 000c 7B68     		ldr	r3, [r7, #4]	@ tmp116, xTask
 1213 000e BB60     		str	r3, [r7, #8]	@ tmp116, pxTCB
 937:RtosV611/Source/tasks.c **** 
 938:RtosV611/Source/tasks.c **** 		/* Is the task we are attempting to resume actually in the
 939:RtosV611/Source/tasks.c **** 		suspended list? */
 940:RtosV611/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xGenericListItem ) ) != pdFALSE )
 1214              		.loc 1 940 0
 1215 0010 BB68     		ldr	r3, [r7, #8]	@ tmp117, pxTCB
 1216 0012 5B69     		ldr	r3, [r3, #20]	@ _6, pxTCB_4->xGenericListItem.pvContainer
 1217 0014 094A     		ldr	r2, .L76	@ tmp118,
 1218 0016 9342     		cmp	r3, r2	@ _6, tmp118
 1219 0018 0AD1     		bne	.L74	@,
 941:RtosV611/Source/tasks.c **** 		{
 942:RtosV611/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
 943:RtosV611/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) != pdTRUE )
 1220              		.loc 1 943 0
 1221 001a BB68     		ldr	r3, [r7, #8]	@ tmp119, pxTCB
 1222 001c 9B6A     		ldr	r3, [r3, #40]	@ _7, pxTCB_4->xEventListItem.pvContainer
 1223 001e 084A     		ldr	r2, .L76+4	@ tmp120,
 1224 0020 9342     		cmp	r3, r2	@ _7, tmp120
 1225 0022 05D0     		beq	.L74	@,
 944:RtosV611/Source/tasks.c **** 			{
 945:RtosV611/Source/tasks.c **** 				/* Is it in the suspended list because it is in the
 946:RtosV611/Source/tasks.c **** 				Suspended state?  It is possible to be in the suspended
 947:RtosV611/Source/tasks.c **** 				list because it is blocked on a task with no timeout
 948:RtosV611/Source/tasks.c **** 				specified. */
 949:RtosV611/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) == pdTRUE )
 1226              		.loc 1 949 0
 1227 0024 BB68     		ldr	r3, [r7, #8]	@ tmp121, pxTCB
 1228 0026 9B6A     		ldr	r3, [r3, #40]	@ _8, pxTCB_4->xEventListItem.pvContainer
 1229 0028 002B     		cmp	r3, #0	@ _8,
 1230 002a 01D1     		bne	.L74	@,
 950:RtosV611/Source/tasks.c **** 				{
 951:RtosV611/Source/tasks.c **** 					xReturn = pdTRUE;
 1231              		.loc 1 951 0
 1232 002c 0123     		movs	r3, #1	@ tmp122,
 1233 002e FB60     		str	r3, [r7, #12]	@ tmp122, xReturn
 1234              	.L74:
 952:RtosV611/Source/tasks.c **** 				}
 953:RtosV611/Source/tasks.c **** 			}
 954:RtosV611/Source/tasks.c **** 		}
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 40


 955:RtosV611/Source/tasks.c **** 
 956:RtosV611/Source/tasks.c **** 		return xReturn;
 1235              		.loc 1 956 0
 1236 0030 FB68     		ldr	r3, [r7, #12]	@ _10, xReturn
 957:RtosV611/Source/tasks.c **** 	}
 1237              		.loc 1 957 0
 1238 0032 1846     		mov	r0, r3	@, <retval>
 1239 0034 1437     		adds	r7, r7, #20	@,,
 1240              		.cfi_def_cfa_offset 4
 1241 0036 BD46     		mov	sp, r7	@,
 1242              		.cfi_def_cfa_register 13
 1243              		@ sp needed	@
 1244 0038 80BC     		pop	{r7}	@
 1245              		.cfi_restore 7
 1246              		.cfi_def_cfa_offset 0
 1247 003a 7047     		bx	lr	@
 1248              	.L77:
 1249              		.align	2
 1250              	.L76:
 1251 003c 00000000 		.word	xSuspendedTaskList
 1252 0040 00000000 		.word	xPendingReadyList
 1253              		.cfi_endproc
 1254              	.LFE8:
 1255              		.size	xTaskIsTaskSuspended, .-xTaskIsTaskSuspended
 1256              		.section	.text.vTaskResume,"ax",%progbits
 1257              		.align	1
 1258              		.global	vTaskResume
 1259              		.syntax unified
 1260              		.thumb
 1261              		.thumb_func
 1262              		.fpu softvfp
 1263              		.type	vTaskResume, %function
 1264              	vTaskResume:
 1265              	.LFB9:
 958:RtosV611/Source/tasks.c **** 
 959:RtosV611/Source/tasks.c **** #endif
 960:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
 961:RtosV611/Source/tasks.c **** 
 962:RtosV611/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 963:RtosV611/Source/tasks.c **** 
 964:RtosV611/Source/tasks.c **** 	void vTaskResume( xTaskHandle pxTaskToResume )
 965:RtosV611/Source/tasks.c **** 	{
 1266              		.loc 1 965 0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 16
 1269              		@ frame_needed = 1, uses_anonymous_args = 0
 1270 0000 80B5     		push	{r7, lr}	@
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 7, -8
 1273              		.cfi_offset 14, -4
 1274 0002 84B0     		sub	sp, sp, #16	@,,
 1275              		.cfi_def_cfa_offset 24
 1276 0004 00AF     		add	r7, sp, #0	@,,
 1277              		.cfi_def_cfa_register 7
 1278 0006 7860     		str	r0, [r7, #4]	@ pxTaskToResume, pxTaskToResume
 966:RtosV611/Source/tasks.c **** 	tskTCB *pxTCB;
 967:RtosV611/Source/tasks.c **** 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 41


 968:RtosV611/Source/tasks.c **** 		/* Remove the task from whichever list it is currently in, and place
 969:RtosV611/Source/tasks.c **** 		it in the ready list. */
 970:RtosV611/Source/tasks.c **** 		pxTCB = ( tskTCB * ) pxTaskToResume;
 1279              		.loc 1 970 0
 1280 0008 7B68     		ldr	r3, [r7, #4]	@ tmp122, pxTaskToResume
 1281 000a FB60     		str	r3, [r7, #12]	@ tmp122, pxTCB
 971:RtosV611/Source/tasks.c **** 
 972:RtosV611/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
 973:RtosV611/Source/tasks.c **** 		currently executing task. */
 974:RtosV611/Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
 1282              		.loc 1 974 0
 1283 000c FB68     		ldr	r3, [r7, #12]	@ tmp123, pxTCB
 1284 000e 002B     		cmp	r3, #0	@ tmp123,
 1285 0010 34D0     		beq	.L82	@,
 1286              		.loc 1 974 0 is_stmt 0 discriminator 1
 1287 0012 1C4B     		ldr	r3, .L83	@ tmp124,
 1288 0014 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.43_7, pxCurrentTCB
 1289 0016 FA68     		ldr	r2, [r7, #12]	@ tmp125, pxTCB
 1290 0018 9A42     		cmp	r2, r3	@ tmp125, pxCurrentTCB.43_7
 1291 001a 2FD0     		beq	.L82	@,
 975:RtosV611/Source/tasks.c **** 		{
 976:RtosV611/Source/tasks.c **** 			portENTER_CRITICAL();
 1292              		.loc 1 976 0 is_stmt 1
 1293 001c FFF7FEFF 		bl	vPortEnterCritical	@
 977:RtosV611/Source/tasks.c **** 			{
 978:RtosV611/Source/tasks.c **** 				if( xTaskIsTaskSuspended( pxTCB ) == pdTRUE )
 1294              		.loc 1 978 0
 1295 0020 F868     		ldr	r0, [r7, #12]	@, pxTCB
 1296 0022 FFF7FEFF 		bl	xTaskIsTaskSuspended	@
 1297 0026 0346     		mov	r3, r0	@ _10,
 1298 0028 012B     		cmp	r3, #1	@ _10,
 1299 002a 25D1     		bne	.L80	@,
 979:RtosV611/Source/tasks.c **** 				{
 980:RtosV611/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
 981:RtosV611/Source/tasks.c **** 
 982:RtosV611/Source/tasks.c **** 					/* As we are in a critical section we can access the ready
 983:RtosV611/Source/tasks.c **** 					lists even if the scheduler is suspended. */
 984:RtosV611/Source/tasks.c **** 					vListRemove(  &( pxTCB->xGenericListItem ) );
 1300              		.loc 1 984 0
 1301 002c FB68     		ldr	r3, [r7, #12]	@ tmp126, pxTCB
 1302 002e 0433     		adds	r3, r3, #4	@ _11, tmp126,
 1303 0030 1846     		mov	r0, r3	@, _11
 1304 0032 FFF7FEFF 		bl	vListRemove	@
 985:RtosV611/Source/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
 1305              		.loc 1 985 0
 1306 0036 FB68     		ldr	r3, [r7, #12]	@ tmp127, pxTCB
 1307 0038 DA6A     		ldr	r2, [r3, #44]	@ _13, pxTCB_5->uxPriority
 1308 003a 134B     		ldr	r3, .L83+4	@ tmp128,
 1309 003c 1B68     		ldr	r3, [r3]	@ uxTopReadyPriority.44_14, uxTopReadyPriority
 1310 003e 9A42     		cmp	r2, r3	@ _13, uxTopReadyPriority.44_14
 1311 0040 03D9     		bls	.L81	@,
 1312              		.loc 1 985 0 is_stmt 0 discriminator 1
 1313 0042 FB68     		ldr	r3, [r7, #12]	@ tmp129, pxTCB
 1314 0044 DB6A     		ldr	r3, [r3, #44]	@ _15, pxTCB_5->uxPriority
 1315 0046 104A     		ldr	r2, .L83+4	@ tmp130,
 1316 0048 1360     		str	r3, [r2]	@ _15, uxTopReadyPriority
 1317              	.L81:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 42


 1318              		.loc 1 985 0 discriminator 3
 1319 004a FB68     		ldr	r3, [r7, #12]	@ tmp131, pxTCB
 1320 004c DA6A     		ldr	r2, [r3, #44]	@ _17, pxTCB_5->uxPriority
 1321 004e 1346     		mov	r3, r2	@ tmp132, _17
 1322 0050 9B00     		lsls	r3, r3, #2	@ tmp132, tmp132,
 1323 0052 1344     		add	r3, r3, r2	@ tmp132, _17
 1324 0054 9B00     		lsls	r3, r3, #2	@ tmp133, tmp132,
 1325 0056 0D4A     		ldr	r2, .L83+8	@ tmp134,
 1326 0058 1A44     		add	r2, r2, r3	@ _18, tmp132
 1327 005a FB68     		ldr	r3, [r7, #12]	@ tmp135, pxTCB
 1328 005c 0433     		adds	r3, r3, #4	@ _19, tmp135,
 1329 005e 1946     		mov	r1, r3	@, _19
 1330 0060 1046     		mov	r0, r2	@, _18
 1331 0062 FFF7FEFF 		bl	vListInsertEnd	@
 986:RtosV611/Source/tasks.c **** 
 987:RtosV611/Source/tasks.c **** 					/* We may have just resumed a higher priority task. */
 988:RtosV611/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 1332              		.loc 1 988 0 is_stmt 1 discriminator 3
 1333 0066 FB68     		ldr	r3, [r7, #12]	@ tmp136, pxTCB
 1334 0068 DA6A     		ldr	r2, [r3, #44]	@ _21, pxTCB_5->uxPriority
 1335 006a 064B     		ldr	r3, .L83	@ tmp137,
 1336 006c 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.45_22, pxCurrentTCB
 1337 006e DB6A     		ldr	r3, [r3, #44]	@ _23, pxCurrentTCB.45_22->uxPriority
 1338 0070 9A42     		cmp	r2, r3	@ _21, _23
 1339 0072 01D3     		bcc	.L80	@,
 989:RtosV611/Source/tasks.c **** 					{
 990:RtosV611/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run, but
 991:RtosV611/Source/tasks.c **** 						will leave the lists in the correct state for the next yield. */
 992:RtosV611/Source/tasks.c **** 						portYIELD_WITHIN_API();
 1340              		.loc 1 992 0
 1341 0074 FFF7FEFF 		bl	vPortYieldFromISR	@
 1342              	.L80:
 993:RtosV611/Source/tasks.c **** 					}
 994:RtosV611/Source/tasks.c **** 				}
 995:RtosV611/Source/tasks.c **** 			}
 996:RtosV611/Source/tasks.c **** 			portEXIT_CRITICAL();
 1343              		.loc 1 996 0
 1344 0078 FFF7FEFF 		bl	vPortExitCritical	@
 1345              	.L82:
 997:RtosV611/Source/tasks.c **** 		}
 998:RtosV611/Source/tasks.c **** 	}
 1346              		.loc 1 998 0
 1347 007c 00BF     		nop
 1348 007e 1037     		adds	r7, r7, #16	@,,
 1349              		.cfi_def_cfa_offset 8
 1350 0080 BD46     		mov	sp, r7	@,
 1351              		.cfi_def_cfa_register 13
 1352              		@ sp needed	@
 1353 0082 80BD     		pop	{r7, pc}	@
 1354              	.L84:
 1355              		.align	2
 1356              	.L83:
 1357 0084 00000000 		.word	pxCurrentTCB
 1358 0088 00000000 		.word	uxTopReadyPriority
 1359 008c 00000000 		.word	pxReadyTasksLists
 1360              		.cfi_endproc
 1361              	.LFE9:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 43


 1362              		.size	vTaskResume, .-vTaskResume
 1363              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1364              		.align	1
 1365              		.global	xTaskResumeFromISR
 1366              		.syntax unified
 1367              		.thumb
 1368              		.thumb_func
 1369              		.fpu softvfp
 1370              		.type	xTaskResumeFromISR, %function
 1371              	xTaskResumeFromISR:
 1372              	.LFB10:
 999:RtosV611/Source/tasks.c **** 
1000:RtosV611/Source/tasks.c **** #endif
1001:RtosV611/Source/tasks.c **** 
1002:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
1003:RtosV611/Source/tasks.c **** 
1004:RtosV611/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1005:RtosV611/Source/tasks.c **** 
1006:RtosV611/Source/tasks.c **** 	portBASE_TYPE xTaskResumeFromISR( xTaskHandle pxTaskToResume )
1007:RtosV611/Source/tasks.c **** 	{
 1373              		.loc 1 1007 0
 1374              		.cfi_startproc
 1375              		@ args = 0, pretend = 0, frame = 16
 1376              		@ frame_needed = 1, uses_anonymous_args = 0
 1377 0000 80B5     		push	{r7, lr}	@
 1378              		.cfi_def_cfa_offset 8
 1379              		.cfi_offset 7, -8
 1380              		.cfi_offset 14, -4
 1381 0002 84B0     		sub	sp, sp, #16	@,,
 1382              		.cfi_def_cfa_offset 24
 1383 0004 00AF     		add	r7, sp, #0	@,,
 1384              		.cfi_def_cfa_register 7
 1385 0006 7860     		str	r0, [r7, #4]	@ pxTaskToResume, pxTaskToResume
1008:RtosV611/Source/tasks.c **** 	portBASE_TYPE xYieldRequired = pdFALSE;
 1386              		.loc 1 1008 0
 1387 0008 0023     		movs	r3, #0	@ tmp126,
 1388 000a FB60     		str	r3, [r7, #12]	@ tmp126, xYieldRequired
1009:RtosV611/Source/tasks.c **** 	tskTCB *pxTCB;
1010:RtosV611/Source/tasks.c **** 
1011:RtosV611/Source/tasks.c **** 		pxTCB = ( tskTCB * ) pxTaskToResume;
 1389              		.loc 1 1011 0
 1390 000c 7B68     		ldr	r3, [r7, #4]	@ tmp127, pxTaskToResume
 1391 000e BB60     		str	r3, [r7, #8]	@ tmp127, pxTCB
1012:RtosV611/Source/tasks.c **** 
1013:RtosV611/Source/tasks.c **** 		if( xTaskIsTaskSuspended( pxTCB ) == pdTRUE )
 1392              		.loc 1 1013 0
 1393 0010 B868     		ldr	r0, [r7, #8]	@, pxTCB
 1394 0012 FFF7FEFF 		bl	xTaskIsTaskSuspended	@
 1395 0016 0346     		mov	r3, r0	@ _9,
 1396 0018 012B     		cmp	r3, #1	@ _9,
 1397 001a 32D1     		bne	.L86	@,
1014:RtosV611/Source/tasks.c **** 		{
1015:RtosV611/Source/tasks.c **** 			traceTASK_RESUME_FROM_ISR( pxTCB );
1016:RtosV611/Source/tasks.c **** 
1017:RtosV611/Source/tasks.c **** 			if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
 1398              		.loc 1 1017 0
 1399 001c 1B4B     		ldr	r3, .L90	@ tmp128,
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 44


 1400 001e 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.46_10, uxSchedulerSuspended
 1401 0020 002B     		cmp	r3, #0	@ uxSchedulerSuspended.46_10,
 1402 0022 28D1     		bne	.L87	@,
1018:RtosV611/Source/tasks.c **** 			{
1019:RtosV611/Source/tasks.c **** 				xYieldRequired = ( pxTCB->uxPriority >= pxCurrentTCB->uxPriority );
 1403              		.loc 1 1019 0
 1404 0024 BB68     		ldr	r3, [r7, #8]	@ tmp129, pxTCB
 1405 0026 DA6A     		ldr	r2, [r3, #44]	@ _11, pxTCB_6->uxPriority
 1406 0028 194B     		ldr	r3, .L90+4	@ tmp130,
 1407 002a 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.47_12, pxCurrentTCB
 1408 002c DB6A     		ldr	r3, [r3, #44]	@ _13, pxCurrentTCB.47_12->uxPriority
 1409 002e 9A42     		cmp	r2, r3	@ _11, _13
 1410 0030 2CBF     		ite	cs
 1411 0032 0123     		movcs	r3, #1	@ tmp132,
 1412 0034 0023     		movcc	r3, #0	@ tmp132,
 1413 0036 DBB2     		uxtb	r3, r3	@ _14, tmp131
 1414 0038 FB60     		str	r3, [r7, #12]	@ _14, xYieldRequired
1020:RtosV611/Source/tasks.c **** 				vListRemove(  &( pxTCB->xGenericListItem ) );
 1415              		.loc 1 1020 0
 1416 003a BB68     		ldr	r3, [r7, #8]	@ tmp133, pxTCB
 1417 003c 0433     		adds	r3, r3, #4	@ _16, tmp133,
 1418 003e 1846     		mov	r0, r3	@, _16
 1419 0040 FFF7FEFF 		bl	vListRemove	@
1021:RtosV611/Source/tasks.c **** 				prvAddTaskToReadyQueue( pxTCB );
 1420              		.loc 1 1021 0
 1421 0044 BB68     		ldr	r3, [r7, #8]	@ tmp134, pxTCB
 1422 0046 DA6A     		ldr	r2, [r3, #44]	@ _18, pxTCB_6->uxPriority
 1423 0048 124B     		ldr	r3, .L90+8	@ tmp135,
 1424 004a 1B68     		ldr	r3, [r3]	@ uxTopReadyPriority.48_19, uxTopReadyPriority
 1425 004c 9A42     		cmp	r2, r3	@ _18, uxTopReadyPriority.48_19
 1426 004e 03D9     		bls	.L88	@,
 1427              		.loc 1 1021 0 is_stmt 0 discriminator 1
 1428 0050 BB68     		ldr	r3, [r7, #8]	@ tmp136, pxTCB
 1429 0052 DB6A     		ldr	r3, [r3, #44]	@ _20, pxTCB_6->uxPriority
 1430 0054 0F4A     		ldr	r2, .L90+8	@ tmp137,
 1431 0056 1360     		str	r3, [r2]	@ _20, uxTopReadyPriority
 1432              	.L88:
 1433              		.loc 1 1021 0 discriminator 3
 1434 0058 BB68     		ldr	r3, [r7, #8]	@ tmp138, pxTCB
 1435 005a DA6A     		ldr	r2, [r3, #44]	@ _22, pxTCB_6->uxPriority
 1436 005c 1346     		mov	r3, r2	@ tmp139, _22
 1437 005e 9B00     		lsls	r3, r3, #2	@ tmp139, tmp139,
 1438 0060 1344     		add	r3, r3, r2	@ tmp139, _22
 1439 0062 9B00     		lsls	r3, r3, #2	@ tmp140, tmp139,
 1440 0064 0C4A     		ldr	r2, .L90+12	@ tmp141,
 1441 0066 1A44     		add	r2, r2, r3	@ _23, tmp139
 1442 0068 BB68     		ldr	r3, [r7, #8]	@ tmp142, pxTCB
 1443 006a 0433     		adds	r3, r3, #4	@ _24, tmp142,
 1444 006c 1946     		mov	r1, r3	@, _24
 1445 006e 1046     		mov	r0, r2	@, _23
 1446 0070 FFF7FEFF 		bl	vListInsertEnd	@
 1447 0074 05E0     		b	.L86	@
 1448              	.L87:
1022:RtosV611/Source/tasks.c **** 			}
1023:RtosV611/Source/tasks.c **** 			else
1024:RtosV611/Source/tasks.c **** 			{
1025:RtosV611/Source/tasks.c **** 				/* We cannot access the delayed or ready lists, so will hold this
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 45


1026:RtosV611/Source/tasks.c **** 				task pending until the scheduler is resumed, at which point a
1027:RtosV611/Source/tasks.c **** 				yield will be performed if necessary. */
1028:RtosV611/Source/tasks.c **** 				vListInsertEnd( ( xList * ) &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 1449              		.loc 1 1028 0 is_stmt 1
 1450 0076 BB68     		ldr	r3, [r7, #8]	@ tmp143, pxTCB
 1451 0078 1833     		adds	r3, r3, #24	@ _26, tmp143,
 1452 007a 1946     		mov	r1, r3	@, _26
 1453 007c 0748     		ldr	r0, .L90+16	@,
 1454 007e FFF7FEFF 		bl	vListInsertEnd	@
 1455              	.L86:
1029:RtosV611/Source/tasks.c **** 			}
1030:RtosV611/Source/tasks.c **** 		}
1031:RtosV611/Source/tasks.c **** 
1032:RtosV611/Source/tasks.c **** 		return xYieldRequired;
 1456              		.loc 1 1032 0
 1457 0082 FB68     		ldr	r3, [r7, #12]	@ _28, xYieldRequired
1033:RtosV611/Source/tasks.c **** 	}
 1458              		.loc 1 1033 0
 1459 0084 1846     		mov	r0, r3	@, <retval>
 1460 0086 1037     		adds	r7, r7, #16	@,,
 1461              		.cfi_def_cfa_offset 8
 1462 0088 BD46     		mov	sp, r7	@,
 1463              		.cfi_def_cfa_register 13
 1464              		@ sp needed	@
 1465 008a 80BD     		pop	{r7, pc}	@
 1466              	.L91:
 1467              		.align	2
 1468              	.L90:
 1469 008c 00000000 		.word	uxSchedulerSuspended
 1470 0090 00000000 		.word	pxCurrentTCB
 1471 0094 00000000 		.word	uxTopReadyPriority
 1472 0098 00000000 		.word	pxReadyTasksLists
 1473 009c 00000000 		.word	xPendingReadyList
 1474              		.cfi_endproc
 1475              	.LFE10:
 1476              		.size	xTaskResumeFromISR, .-xTaskResumeFromISR
 1477              		.section	.rodata
 1478              		.align	2
 1479              	.LC0:
 1480 0000 49444C45 		.ascii	"IDLE\000"
 1480      00
 1481              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1482              		.align	1
 1483              		.global	vTaskStartScheduler
 1484              		.syntax unified
 1485              		.thumb
 1486              		.thumb_func
 1487              		.fpu softvfp
 1488              		.type	vTaskStartScheduler, %function
 1489              	vTaskStartScheduler:
 1490              	.LFB11:
1034:RtosV611/Source/tasks.c **** 
1035:RtosV611/Source/tasks.c **** #endif
1036:RtosV611/Source/tasks.c **** 
1037:RtosV611/Source/tasks.c **** 
1038:RtosV611/Source/tasks.c **** 
1039:RtosV611/Source/tasks.c **** 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 46


1040:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------
1041:RtosV611/Source/tasks.c ****  * PUBLIC SCHEDULER CONTROL documented in task.h
1042:RtosV611/Source/tasks.c ****  *----------------------------------------------------------*/
1043:RtosV611/Source/tasks.c **** 
1044:RtosV611/Source/tasks.c **** 
1045:RtosV611/Source/tasks.c **** void vTaskStartScheduler( void )
1046:RtosV611/Source/tasks.c **** {
 1491              		.loc 1 1046 0
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 8
 1494              		@ frame_needed = 1, uses_anonymous_args = 0
 1495 0000 80B5     		push	{r7, lr}	@
 1496              		.cfi_def_cfa_offset 8
 1497              		.cfi_offset 7, -8
 1498              		.cfi_offset 14, -4
 1499 0002 86B0     		sub	sp, sp, #24	@,,
 1500              		.cfi_def_cfa_offset 32
 1501 0004 04AF     		add	r7, sp, #16	@,,
 1502              		.cfi_def_cfa 7, 16
1047:RtosV611/Source/tasks.c **** portBASE_TYPE xReturn;
1048:RtosV611/Source/tasks.c **** 
1049:RtosV611/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1050:RtosV611/Source/tasks.c **** 	xReturn = xTaskCreate( prvIdleTask, ( signed char * ) "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL,
 1503              		.loc 1 1050 0
 1504 0006 0023     		movs	r3, #0	@ tmp111,
 1505 0008 0393     		str	r3, [sp, #12]	@ tmp111,
 1506 000a 0023     		movs	r3, #0	@ tmp112,
 1507 000c 0293     		str	r3, [sp, #8]	@ tmp112,
 1508 000e 0023     		movs	r3, #0	@ tmp113,
 1509 0010 0193     		str	r3, [sp, #4]	@ tmp113,
 1510 0012 0023     		movs	r3, #0	@ tmp114,
 1511 0014 0093     		str	r3, [sp]	@ tmp114,
 1512 0016 0023     		movs	r3, #0	@,
 1513 0018 8022     		movs	r2, #128	@,
 1514 001a 0D49     		ldr	r1, .L95	@,
 1515 001c 0D48     		ldr	r0, .L95+4	@,
 1516 001e FFF7FEFF 		bl	xTaskGenericCreate	@
 1517 0022 7860     		str	r0, [r7, #4]	@, xReturn
1051:RtosV611/Source/tasks.c **** 
1052:RtosV611/Source/tasks.c **** 	if( xReturn == pdPASS )
 1518              		.loc 1 1052 0
 1519 0024 7B68     		ldr	r3, [r7, #4]	@ tmp115, xReturn
 1520 0026 012B     		cmp	r3, #1	@ tmp115,
 1521 0028 0ED1     		bne	.L94	@,
1053:RtosV611/Source/tasks.c **** 	{
1054:RtosV611/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1055:RtosV611/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1056:RtosV611/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1057:RtosV611/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1058:RtosV611/Source/tasks.c **** 		starts to run.
1059:RtosV611/Source/tasks.c **** 
1060:RtosV611/Source/tasks.c **** 		STEPPING THROUGH HERE USING A DEBUGGER CAN CAUSE BIG PROBLEMS IF THE
1061:RtosV611/Source/tasks.c **** 		DEBUGGER ALLOWS INTERRUPTS TO BE PROCESSED. */
1062:RtosV611/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
 1522              		.loc 1 1062 0
 1523              		.syntax unified
 1524              	@ 1062 "RtosV611/Source/tasks.c" 1
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 47


 1525 002a 4FF0BF00 			mov r0, #191									@
 1526 002e 80F31188 		msr basepri, r0							
 1527              	
 1528              	@ 0 "" 2
1063:RtosV611/Source/tasks.c **** 
1064:RtosV611/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1529              		.loc 1 1064 0
 1530              		.thumb
 1531              		.syntax unified
 1532 0032 094B     		ldr	r3, .L95+8	@ tmp116,
 1533 0034 0122     		movs	r2, #1	@ tmp117,
 1534 0036 1A60     		str	r2, [r3]	@ tmp117, xSchedulerRunning
1065:RtosV611/Source/tasks.c **** 		xTickCount = ( portTickType ) 0;
 1535              		.loc 1 1065 0
 1536 0038 084B     		ldr	r3, .L95+12	@ tmp118,
 1537 003a 0022     		movs	r2, #0	@ tmp119,
 1538 003c 1A60     		str	r2, [r3]	@ tmp119, xTickCount
1066:RtosV611/Source/tasks.c **** 
1067:RtosV611/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1068:RtosV611/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1069:RtosV611/Source/tasks.c **** 		the run time counter time base. */
1070:RtosV611/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
 1539              		.loc 1 1070 0
 1540 003e 084B     		ldr	r3, .L95+16	@ tmp120,
 1541 0040 0022     		movs	r2, #0	@ tmp121,
 1542 0042 1A60     		str	r2, [r3]	@ tmp121, ulHighFrequencyTimerTicks
1071:RtosV611/Source/tasks.c **** 		
1072:RtosV611/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1073:RtosV611/Source/tasks.c **** 		portable interface. */
1074:RtosV611/Source/tasks.c **** 		if( xPortStartScheduler() )
 1543              		.loc 1 1074 0
 1544 0044 FFF7FEFF 		bl	xPortStartScheduler	@
 1545              	.L94:
1075:RtosV611/Source/tasks.c **** 		{
1076:RtosV611/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
1077:RtosV611/Source/tasks.c **** 			function will not return. */
1078:RtosV611/Source/tasks.c **** 		}
1079:RtosV611/Source/tasks.c **** 		else
1080:RtosV611/Source/tasks.c **** 		{
1081:RtosV611/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
1082:RtosV611/Source/tasks.c **** 		}
1083:RtosV611/Source/tasks.c **** 	}
1084:RtosV611/Source/tasks.c **** }
 1546              		.loc 1 1084 0
 1547 0048 00BF     		nop
 1548 004a 0837     		adds	r7, r7, #8	@,,
 1549              		.cfi_def_cfa_offset 8
 1550 004c BD46     		mov	sp, r7	@,
 1551              		.cfi_def_cfa_register 13
 1552              		@ sp needed	@
 1553 004e 80BD     		pop	{r7, pc}	@
 1554              	.L96:
 1555              		.align	2
 1556              	.L95:
 1557 0050 00000000 		.word	.LC0
 1558 0054 00000000 		.word	prvIdleTask
 1559 0058 00000000 		.word	xSchedulerRunning
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 48


 1560 005c 00000000 		.word	xTickCount
 1561 0060 00000000 		.word	ulHighFrequencyTimerTicks
 1562              		.cfi_endproc
 1563              	.LFE11:
 1564              		.size	vTaskStartScheduler, .-vTaskStartScheduler
 1565              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1566              		.align	1
 1567              		.global	vTaskEndScheduler
 1568              		.syntax unified
 1569              		.thumb
 1570              		.thumb_func
 1571              		.fpu softvfp
 1572              		.type	vTaskEndScheduler, %function
 1573              	vTaskEndScheduler:
 1574              	.LFB12:
1085:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
1086:RtosV611/Source/tasks.c **** 
1087:RtosV611/Source/tasks.c **** void vTaskEndScheduler( void )
1088:RtosV611/Source/tasks.c **** {
 1575              		.loc 1 1088 0
 1576              		.cfi_startproc
 1577              		@ args = 0, pretend = 0, frame = 0
 1578              		@ frame_needed = 1, uses_anonymous_args = 0
 1579 0000 80B5     		push	{r7, lr}	@
 1580              		.cfi_def_cfa_offset 8
 1581              		.cfi_offset 7, -8
 1582              		.cfi_offset 14, -4
 1583 0002 00AF     		add	r7, sp, #0	@,,
 1584              		.cfi_def_cfa_register 7
1089:RtosV611/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
1090:RtosV611/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
1091:RtosV611/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
1092:RtosV611/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
 1585              		.loc 1 1092 0
 1586              		.syntax unified
 1587              	@ 1092 "RtosV611/Source/tasks.c" 1
 1588 0004 4FF0BF00 			mov r0, #191									@
 1589 0008 80F31188 		msr basepri, r0							
 1590              	
 1591              	@ 0 "" 2
1093:RtosV611/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 1592              		.loc 1 1093 0
 1593              		.thumb
 1594              		.syntax unified
 1595 000c 034B     		ldr	r3, .L98	@ tmp110,
 1596 000e 0022     		movs	r2, #0	@ tmp111,
 1597 0010 1A60     		str	r2, [r3]	@ tmp111, xSchedulerRunning
1094:RtosV611/Source/tasks.c **** 	vPortEndScheduler();
 1598              		.loc 1 1094 0
 1599 0012 FFF7FEFF 		bl	vPortEndScheduler	@
1095:RtosV611/Source/tasks.c **** }
 1600              		.loc 1 1095 0
 1601 0016 00BF     		nop
 1602 0018 80BD     		pop	{r7, pc}	@
 1603              	.L99:
 1604 001a 00BF     		.align	2
 1605              	.L98:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 49


 1606 001c 00000000 		.word	xSchedulerRunning
 1607              		.cfi_endproc
 1608              	.LFE12:
 1609              		.size	vTaskEndScheduler, .-vTaskEndScheduler
 1610              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1611              		.align	1
 1612              		.global	vTaskSuspendAll
 1613              		.syntax unified
 1614              		.thumb
 1615              		.thumb_func
 1616              		.fpu softvfp
 1617              		.type	vTaskSuspendAll, %function
 1618              	vTaskSuspendAll:
 1619              	.LFB13:
1096:RtosV611/Source/tasks.c **** /*----------------------------------------------------------*/
1097:RtosV611/Source/tasks.c **** 
1098:RtosV611/Source/tasks.c **** void vTaskSuspendAll( void )
1099:RtosV611/Source/tasks.c **** {
 1620              		.loc 1 1099 0
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 0
 1623              		@ frame_needed = 1, uses_anonymous_args = 0
 1624              		@ link register save eliminated.
 1625 0000 80B4     		push	{r7}	@
 1626              		.cfi_def_cfa_offset 4
 1627              		.cfi_offset 7, -4
 1628 0002 00AF     		add	r7, sp, #0	@,,
 1629              		.cfi_def_cfa_register 7
1100:RtosV611/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
1101:RtosV611/Source/tasks.c **** 	portBASE_TYPE. */
1102:RtosV611/Source/tasks.c **** 	++uxSchedulerSuspended;
 1630              		.loc 1 1102 0
 1631 0004 044B     		ldr	r3, .L101	@ tmp112,
 1632 0006 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.49_2, uxSchedulerSuspended
 1633 0008 0133     		adds	r3, r3, #1	@ _3, uxSchedulerSuspended.49_2,
 1634 000a 034A     		ldr	r2, .L101	@ tmp113,
 1635 000c 1360     		str	r3, [r2]	@ _3, uxSchedulerSuspended
1103:RtosV611/Source/tasks.c **** }
 1636              		.loc 1 1103 0
 1637 000e 00BF     		nop
 1638 0010 BD46     		mov	sp, r7	@,
 1639              		.cfi_def_cfa_register 13
 1640              		@ sp needed	@
 1641 0012 80BC     		pop	{r7}	@
 1642              		.cfi_restore 7
 1643              		.cfi_def_cfa_offset 0
 1644 0014 7047     		bx	lr	@
 1645              	.L102:
 1646 0016 00BF     		.align	2
 1647              	.L101:
 1648 0018 00000000 		.word	uxSchedulerSuspended
 1649              		.cfi_endproc
 1650              	.LFE13:
 1651              		.size	vTaskSuspendAll, .-vTaskSuspendAll
 1652              		.section	.text.xTaskResumeAll,"ax",%progbits
 1653              		.align	1
 1654              		.global	xTaskResumeAll
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 50


 1655              		.syntax unified
 1656              		.thumb
 1657              		.thumb_func
 1658              		.fpu softvfp
 1659              		.type	xTaskResumeAll, %function
 1660              	xTaskResumeAll:
 1661              	.LFB14:
1104:RtosV611/Source/tasks.c **** /*----------------------------------------------------------*/
1105:RtosV611/Source/tasks.c **** 
1106:RtosV611/Source/tasks.c **** signed portBASE_TYPE xTaskResumeAll( void )
1107:RtosV611/Source/tasks.c **** {
 1662              		.loc 1 1107 0
 1663              		.cfi_startproc
 1664              		@ args = 0, pretend = 0, frame = 8
 1665              		@ frame_needed = 1, uses_anonymous_args = 0
 1666 0000 90B5     		push	{r4, r7, lr}	@
 1667              		.cfi_def_cfa_offset 12
 1668              		.cfi_offset 4, -12
 1669              		.cfi_offset 7, -8
 1670              		.cfi_offset 14, -4
 1671 0002 83B0     		sub	sp, sp, #12	@,,
 1672              		.cfi_def_cfa_offset 24
 1673 0004 00AF     		add	r7, sp, #0	@,,
 1674              		.cfi_def_cfa_register 7
1108:RtosV611/Source/tasks.c **** register tskTCB *pxTCB;
1109:RtosV611/Source/tasks.c **** signed portBASE_TYPE xAlreadyYielded = pdFALSE;
 1675              		.loc 1 1109 0
 1676 0006 0023     		movs	r3, #0	@ tmp136,
 1677 0008 7B60     		str	r3, [r7, #4]	@ tmp136, xAlreadyYielded
1110:RtosV611/Source/tasks.c **** 
1111:RtosV611/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
1112:RtosV611/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
1113:RtosV611/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
1114:RtosV611/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
1115:RtosV611/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
1116:RtosV611/Source/tasks.c **** 	portENTER_CRITICAL();
 1678              		.loc 1 1116 0
 1679 000a FFF7FEFF 		bl	vPortEnterCritical	@
1117:RtosV611/Source/tasks.c **** 	{
1118:RtosV611/Source/tasks.c **** 		--uxSchedulerSuspended;
 1680              		.loc 1 1118 0
 1681 000e 344B     		ldr	r3, .L115	@ tmp137,
 1682 0010 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.50_13, uxSchedulerSuspended
 1683 0012 013B     		subs	r3, r3, #1	@ _14, uxSchedulerSuspended.50_13,
 1684 0014 324A     		ldr	r2, .L115	@ tmp138,
 1685 0016 1360     		str	r3, [r2]	@ _14, uxSchedulerSuspended
1119:RtosV611/Source/tasks.c **** 
1120:RtosV611/Source/tasks.c **** 		if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
 1686              		.loc 1 1120 0
 1687 0018 314B     		ldr	r3, .L115	@ tmp139,
 1688 001a 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.51_16, uxSchedulerSuspended
 1689 001c 002B     		cmp	r3, #0	@ uxSchedulerSuspended.51_16,
 1690 001e 57D1     		bne	.L104	@,
1121:RtosV611/Source/tasks.c **** 		{
1122:RtosV611/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( unsigned portBASE_TYPE ) 0 )
 1691              		.loc 1 1122 0
 1692 0020 304B     		ldr	r3, .L115+4	@ tmp140,
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 51


 1693 0022 1B68     		ldr	r3, [r3]	@ uxCurrentNumberOfTasks.52_17, uxCurrentNumberOfTasks
 1694 0024 002B     		cmp	r3, #0	@ uxCurrentNumberOfTasks.52_17,
 1695 0026 53D0     		beq	.L104	@,
 1696              	.LBB3:
1123:RtosV611/Source/tasks.c **** 			{
1124:RtosV611/Source/tasks.c **** 				portBASE_TYPE xYieldRequired = pdFALSE;
 1697              		.loc 1 1124 0
 1698 0028 0023     		movs	r3, #0	@ tmp141,
 1699 002a 3B60     		str	r3, [r7]	@ tmp141, xYieldRequired
1125:RtosV611/Source/tasks.c **** 
1126:RtosV611/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
1127:RtosV611/Source/tasks.c **** 				appropriate ready list. */
1128:RtosV611/Source/tasks.c **** 				while( ( pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY(  ( ( xList * ) &xPendingReadyList ) 
 1700              		.loc 1 1128 0
 1701 002c 24E0     		b	.L105	@
 1702              	.L109:
1129:RtosV611/Source/tasks.c **** 				{
1130:RtosV611/Source/tasks.c **** 					vListRemove( &( pxTCB->xEventListItem ) );
 1703              		.loc 1 1130 0
 1704 002e 04F11803 		add	r3, r4, #24	@ _24, pxTCB,
 1705 0032 1846     		mov	r0, r3	@, _24
 1706 0034 FFF7FEFF 		bl	vListRemove	@
1131:RtosV611/Source/tasks.c **** 					vListRemove( &( pxTCB->xGenericListItem ) );
 1707              		.loc 1 1131 0
 1708 0038 231D     		adds	r3, r4, #4	@ _26, pxTCB,
 1709 003a 1846     		mov	r0, r3	@, _26
 1710 003c FFF7FEFF 		bl	vListRemove	@
1132:RtosV611/Source/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
 1711              		.loc 1 1132 0
 1712 0040 E26A     		ldr	r2, [r4, #44]	@ _28, pxTCB_23->uxPriority
 1713 0042 294B     		ldr	r3, .L115+8	@ tmp142,
 1714 0044 1B68     		ldr	r3, [r3]	@ uxTopReadyPriority.53_29, uxTopReadyPriority
 1715 0046 9A42     		cmp	r2, r3	@ _28, uxTopReadyPriority.53_29
 1716 0048 02D9     		bls	.L106	@,
 1717              		.loc 1 1132 0 is_stmt 0 discriminator 1
 1718 004a E36A     		ldr	r3, [r4, #44]	@ _30, pxTCB_23->uxPriority
 1719 004c 264A     		ldr	r2, .L115+8	@ tmp143,
 1720 004e 1360     		str	r3, [r2]	@ _30, uxTopReadyPriority
 1721              	.L106:
 1722              		.loc 1 1132 0 discriminator 3
 1723 0050 E26A     		ldr	r2, [r4, #44]	@ _32, pxTCB_23->uxPriority
 1724 0052 1346     		mov	r3, r2	@ tmp144, _32
 1725 0054 9B00     		lsls	r3, r3, #2	@ tmp144, tmp144,
 1726 0056 1344     		add	r3, r3, r2	@ tmp144, _32
 1727 0058 9B00     		lsls	r3, r3, #2	@ tmp145, tmp144,
 1728 005a 244A     		ldr	r2, .L115+12	@ tmp146,
 1729 005c 1344     		add	r3, r3, r2	@ _33, tmp146
 1730 005e 221D     		adds	r2, r4, #4	@ _34, pxTCB,
 1731 0060 1146     		mov	r1, r2	@, _34
 1732 0062 1846     		mov	r0, r3	@, _33
 1733 0064 FFF7FEFF 		bl	vListInsertEnd	@
1133:RtosV611/Source/tasks.c **** 
1134:RtosV611/Source/tasks.c **** 					/* If we have moved a task that has a priority higher than
1135:RtosV611/Source/tasks.c **** 					the current task then we should yield. */
1136:RtosV611/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 1734              		.loc 1 1136 0 is_stmt 1 discriminator 3
 1735 0068 E26A     		ldr	r2, [r4, #44]	@ _36, pxTCB_23->uxPriority
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 52


 1736 006a 214B     		ldr	r3, .L115+16	@ tmp147,
 1737 006c 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.54_37, pxCurrentTCB
 1738 006e DB6A     		ldr	r3, [r3, #44]	@ _38, pxCurrentTCB.54_37->uxPriority
 1739 0070 9A42     		cmp	r2, r3	@ _36, _38
 1740 0072 01D3     		bcc	.L105	@,
1137:RtosV611/Source/tasks.c **** 					{
1138:RtosV611/Source/tasks.c **** 						xYieldRequired = pdTRUE;
 1741              		.loc 1 1138 0
 1742 0074 0123     		movs	r3, #1	@ tmp148,
 1743 0076 3B60     		str	r3, [r7]	@ tmp148, xYieldRequired
 1744              	.L105:
1128:RtosV611/Source/tasks.c **** 				{
 1745              		.loc 1 1128 0
 1746 0078 1E4B     		ldr	r3, .L115+20	@ tmp149,
 1747 007a 1B68     		ldr	r3, [r3]	@ _19, xPendingReadyList.uxNumberOfItems
 1748 007c 002B     		cmp	r3, #0	@ _19,
 1749 007e 03D0     		beq	.L107	@,
1128:RtosV611/Source/tasks.c **** 				{
 1750              		.loc 1 1128 0 is_stmt 0 discriminator 1
 1751 0080 1C4B     		ldr	r3, .L115+20	@ tmp150,
 1752 0082 DB68     		ldr	r3, [r3, #12]	@ _20, xPendingReadyList.xListEnd.pxNext
 1753 0084 DB68     		ldr	r3, [r3, #12]	@ iftmp.55_4, _20->pvOwner
 1754 0086 00E0     		b	.L108	@
 1755              	.L107:
1128:RtosV611/Source/tasks.c **** 				{
 1756              		.loc 1 1128 0 discriminator 2
 1757 0088 0023     		movs	r3, #0	@ iftmp.55_4,
 1758              	.L108:
1128:RtosV611/Source/tasks.c **** 				{
 1759              		.loc 1 1128 0 discriminator 4
 1760 008a 1C46     		mov	r4, r3	@ pxTCB, iftmp.55_4
 1761 008c 002C     		cmp	r4, #0	@ pxTCB,
 1762 008e CED1     		bne	.L109	@,
1139:RtosV611/Source/tasks.c **** 					}
1140:RtosV611/Source/tasks.c **** 				}
1141:RtosV611/Source/tasks.c **** 
1142:RtosV611/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
1143:RtosV611/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does not
1144:RtosV611/Source/tasks.c **** 				slip, and that any delayed tasks are resumed at the correct time. */
1145:RtosV611/Source/tasks.c **** 				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
 1763              		.loc 1 1145 0 is_stmt 1
 1764 0090 194B     		ldr	r3, .L115+24	@ tmp151,
 1765 0092 1B68     		ldr	r3, [r3]	@ uxMissedTicks.56_40, uxMissedTicks
 1766 0094 002B     		cmp	r3, #0	@ uxMissedTicks.56_40,
 1767 0096 0DD0     		beq	.L110	@,
1146:RtosV611/Source/tasks.c **** 				{
1147:RtosV611/Source/tasks.c **** 					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
 1768              		.loc 1 1147 0
 1769 0098 06E0     		b	.L111	@
 1770              	.L112:
1148:RtosV611/Source/tasks.c **** 					{
1149:RtosV611/Source/tasks.c **** 						vTaskIncrementTick();
 1771              		.loc 1 1149 0
 1772 009a FFF7FEFF 		bl	vTaskIncrementTick	@
1150:RtosV611/Source/tasks.c **** 						--uxMissedTicks;
 1773              		.loc 1 1150 0
 1774 009e 164B     		ldr	r3, .L115+24	@ tmp152,
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 53


 1775 00a0 1B68     		ldr	r3, [r3]	@ uxMissedTicks.57_43, uxMissedTicks
 1776 00a2 013B     		subs	r3, r3, #1	@ _44, uxMissedTicks.57_43,
 1777 00a4 144A     		ldr	r2, .L115+24	@ tmp153,
 1778 00a6 1360     		str	r3, [r2]	@ _44, uxMissedTicks
 1779              	.L111:
1147:RtosV611/Source/tasks.c **** 					{
 1780              		.loc 1 1147 0
 1781 00a8 134B     		ldr	r3, .L115+24	@ tmp154,
 1782 00aa 1B68     		ldr	r3, [r3]	@ uxMissedTicks.58_41, uxMissedTicks
 1783 00ac 002B     		cmp	r3, #0	@ uxMissedTicks.58_41,
 1784 00ae F4D1     		bne	.L112	@,
1151:RtosV611/Source/tasks.c **** 					}
1152:RtosV611/Source/tasks.c **** 
1153:RtosV611/Source/tasks.c **** 					/* As we have processed some ticks it is appropriate to yield
1154:RtosV611/Source/tasks.c **** 					to ensure the highest priority task that is ready to run is
1155:RtosV611/Source/tasks.c **** 					the task actually running. */
1156:RtosV611/Source/tasks.c **** 					#if configUSE_PREEMPTION == 1
1157:RtosV611/Source/tasks.c **** 					{
1158:RtosV611/Source/tasks.c **** 						xYieldRequired = pdTRUE;
 1785              		.loc 1 1158 0
 1786 00b0 0123     		movs	r3, #1	@ tmp155,
 1787 00b2 3B60     		str	r3, [r7]	@ tmp155, xYieldRequired
 1788              	.L110:
1159:RtosV611/Source/tasks.c **** 					}
1160:RtosV611/Source/tasks.c **** 					#endif
1161:RtosV611/Source/tasks.c **** 				}
1162:RtosV611/Source/tasks.c **** 
1163:RtosV611/Source/tasks.c **** 				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
 1789              		.loc 1 1163 0
 1790 00b4 3B68     		ldr	r3, [r7]	@ tmp156, xYieldRequired
 1791 00b6 012B     		cmp	r3, #1	@ tmp156,
 1792 00b8 03D0     		beq	.L113	@,
 1793              		.loc 1 1163 0 is_stmt 0 discriminator 1
 1794 00ba 104B     		ldr	r3, .L115+28	@ tmp157,
 1795 00bc 1B68     		ldr	r3, [r3]	@ xMissedYield.59_47, xMissedYield
 1796 00be 012B     		cmp	r3, #1	@ xMissedYield.59_47,
 1797 00c0 06D1     		bne	.L104	@,
 1798              	.L113:
1164:RtosV611/Source/tasks.c **** 				{
1165:RtosV611/Source/tasks.c **** 					xAlreadyYielded = pdTRUE;
 1799              		.loc 1 1165 0 is_stmt 1
 1800 00c2 0123     		movs	r3, #1	@ tmp158,
 1801 00c4 7B60     		str	r3, [r7, #4]	@ tmp158, xAlreadyYielded
1166:RtosV611/Source/tasks.c **** 					xMissedYield = pdFALSE;
 1802              		.loc 1 1166 0
 1803 00c6 0D4B     		ldr	r3, .L115+28	@ tmp159,
 1804 00c8 0022     		movs	r2, #0	@ tmp160,
 1805 00ca 1A60     		str	r2, [r3]	@ tmp160, xMissedYield
1167:RtosV611/Source/tasks.c **** 					portYIELD_WITHIN_API();
 1806              		.loc 1 1167 0
 1807 00cc FFF7FEFF 		bl	vPortYieldFromISR	@
 1808              	.L104:
 1809              	.LBE3:
1168:RtosV611/Source/tasks.c **** 				}
1169:RtosV611/Source/tasks.c **** 			}
1170:RtosV611/Source/tasks.c **** 		}
1171:RtosV611/Source/tasks.c **** 	}
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 54


1172:RtosV611/Source/tasks.c **** 	portEXIT_CRITICAL();
 1810              		.loc 1 1172 0
 1811 00d0 FFF7FEFF 		bl	vPortExitCritical	@
1173:RtosV611/Source/tasks.c **** 
1174:RtosV611/Source/tasks.c **** 	return xAlreadyYielded;
 1812              		.loc 1 1174 0
 1813 00d4 7B68     		ldr	r3, [r7, #4]	@ _52, xAlreadyYielded
1175:RtosV611/Source/tasks.c **** }
 1814              		.loc 1 1175 0
 1815 00d6 1846     		mov	r0, r3	@, <retval>
 1816 00d8 0C37     		adds	r7, r7, #12	@,,
 1817              		.cfi_def_cfa_offset 12
 1818 00da BD46     		mov	sp, r7	@,
 1819              		.cfi_def_cfa_register 13
 1820              		@ sp needed	@
 1821 00dc 90BD     		pop	{r4, r7, pc}	@
 1822              	.L116:
 1823 00de 00BF     		.align	2
 1824              	.L115:
 1825 00e0 00000000 		.word	uxSchedulerSuspended
 1826 00e4 00000000 		.word	uxCurrentNumberOfTasks
 1827 00e8 00000000 		.word	uxTopReadyPriority
 1828 00ec 00000000 		.word	pxReadyTasksLists
 1829 00f0 00000000 		.word	pxCurrentTCB
 1830 00f4 00000000 		.word	xPendingReadyList
 1831 00f8 00000000 		.word	uxMissedTicks
 1832 00fc 00000000 		.word	xMissedYield
 1833              		.cfi_endproc
 1834              	.LFE14:
 1835              		.size	xTaskResumeAll, .-xTaskResumeAll
 1836              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1837              		.align	1
 1838              		.global	xTaskGetTickCount
 1839              		.syntax unified
 1840              		.thumb
 1841              		.thumb_func
 1842              		.fpu softvfp
 1843              		.type	xTaskGetTickCount, %function
 1844              	xTaskGetTickCount:
 1845              	.LFB15:
1176:RtosV611/Source/tasks.c **** 
1177:RtosV611/Source/tasks.c **** 
1178:RtosV611/Source/tasks.c **** 
1179:RtosV611/Source/tasks.c **** 
1180:RtosV611/Source/tasks.c **** 
1181:RtosV611/Source/tasks.c **** 
1182:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------
1183:RtosV611/Source/tasks.c ****  * PUBLIC TASK UTILITIES documented in task.h
1184:RtosV611/Source/tasks.c ****  *----------------------------------------------------------*/
1185:RtosV611/Source/tasks.c **** 
1186:RtosV611/Source/tasks.c **** 
1187:RtosV611/Source/tasks.c **** 
1188:RtosV611/Source/tasks.c **** portTickType xTaskGetTickCount( void )
1189:RtosV611/Source/tasks.c **** {
 1846              		.loc 1 1189 0
 1847              		.cfi_startproc
 1848              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 55


 1849              		@ frame_needed = 1, uses_anonymous_args = 0
 1850 0000 80B5     		push	{r7, lr}	@
 1851              		.cfi_def_cfa_offset 8
 1852              		.cfi_offset 7, -8
 1853              		.cfi_offset 14, -4
 1854 0002 82B0     		sub	sp, sp, #8	@,,
 1855              		.cfi_def_cfa_offset 16
 1856 0004 00AF     		add	r7, sp, #0	@,,
 1857              		.cfi_def_cfa_register 7
1190:RtosV611/Source/tasks.c **** portTickType xTicks;
1191:RtosV611/Source/tasks.c **** 
1192:RtosV611/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
1193:RtosV611/Source/tasks.c **** 	portENTER_CRITICAL();
 1858              		.loc 1 1193 0
 1859 0006 FFF7FEFF 		bl	vPortEnterCritical	@
1194:RtosV611/Source/tasks.c **** 	{
1195:RtosV611/Source/tasks.c **** 		xTicks = xTickCount;
 1860              		.loc 1 1195 0
 1861 000a 054B     		ldr	r3, .L119	@ tmp112,
 1862 000c 1B68     		ldr	r3, [r3]	@ tmp113, xTickCount
 1863 000e 7B60     		str	r3, [r7, #4]	@ tmp113, xTicks
1196:RtosV611/Source/tasks.c **** 	}
1197:RtosV611/Source/tasks.c **** 	portEXIT_CRITICAL();
 1864              		.loc 1 1197 0
 1865 0010 FFF7FEFF 		bl	vPortExitCritical	@
1198:RtosV611/Source/tasks.c **** 
1199:RtosV611/Source/tasks.c **** 	return xTicks;
 1866              		.loc 1 1199 0
 1867 0014 7B68     		ldr	r3, [r7, #4]	@ _5, xTicks
1200:RtosV611/Source/tasks.c **** }
 1868              		.loc 1 1200 0
 1869 0016 1846     		mov	r0, r3	@, <retval>
 1870 0018 0837     		adds	r7, r7, #8	@,,
 1871              		.cfi_def_cfa_offset 8
 1872 001a BD46     		mov	sp, r7	@,
 1873              		.cfi_def_cfa_register 13
 1874              		@ sp needed	@
 1875 001c 80BD     		pop	{r7, pc}	@
 1876              	.L120:
 1877 001e 00BF     		.align	2
 1878              	.L119:
 1879 0020 00000000 		.word	xTickCount
 1880              		.cfi_endproc
 1881              	.LFE15:
 1882              		.size	xTaskGetTickCount, .-xTaskGetTickCount
 1883              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1884              		.align	1
 1885              		.global	xTaskGetTickCountFromISR
 1886              		.syntax unified
 1887              		.thumb
 1888              		.thumb_func
 1889              		.fpu softvfp
 1890              		.type	xTaskGetTickCountFromISR, %function
 1891              	xTaskGetTickCountFromISR:
 1892              	.LFB16:
1201:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
1202:RtosV611/Source/tasks.c **** 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 56


1203:RtosV611/Source/tasks.c **** portTickType xTaskGetTickCountFromISR( void )
1204:RtosV611/Source/tasks.c **** {
 1893              		.loc 1 1204 0
 1894              		.cfi_startproc
 1895              		@ args = 0, pretend = 0, frame = 0
 1896              		@ frame_needed = 1, uses_anonymous_args = 0
 1897              		@ link register save eliminated.
 1898 0000 80B4     		push	{r7}	@
 1899              		.cfi_def_cfa_offset 4
 1900              		.cfi_offset 7, -4
 1901 0002 00AF     		add	r7, sp, #0	@,,
 1902              		.cfi_def_cfa_register 7
1205:RtosV611/Source/tasks.c **** 	return xTickCount;
 1903              		.loc 1 1205 0
 1904 0004 024B     		ldr	r3, .L123	@ tmp112,
 1905 0006 1B68     		ldr	r3, [r3]	@ _2, xTickCount
1206:RtosV611/Source/tasks.c **** }
 1906              		.loc 1 1206 0
 1907 0008 1846     		mov	r0, r3	@, <retval>
 1908 000a BD46     		mov	sp, r7	@,
 1909              		.cfi_def_cfa_register 13
 1910              		@ sp needed	@
 1911 000c 80BC     		pop	{r7}	@
 1912              		.cfi_restore 7
 1913              		.cfi_def_cfa_offset 0
 1914 000e 7047     		bx	lr	@
 1915              	.L124:
 1916              		.align	2
 1917              	.L123:
 1918 0010 00000000 		.word	xTickCount
 1919              		.cfi_endproc
 1920              	.LFE16:
 1921              		.size	xTaskGetTickCountFromISR, .-xTaskGetTickCountFromISR
 1922              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1923              		.align	1
 1924              		.global	uxTaskGetNumberOfTasks
 1925              		.syntax unified
 1926              		.thumb
 1927              		.thumb_func
 1928              		.fpu softvfp
 1929              		.type	uxTaskGetNumberOfTasks, %function
 1930              	uxTaskGetNumberOfTasks:
 1931              	.LFB17:
1207:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
1208:RtosV611/Source/tasks.c **** 
1209:RtosV611/Source/tasks.c **** unsigned portBASE_TYPE uxTaskGetNumberOfTasks( void )
1210:RtosV611/Source/tasks.c **** {
 1932              		.loc 1 1210 0
 1933              		.cfi_startproc
 1934              		@ args = 0, pretend = 0, frame = 0
 1935              		@ frame_needed = 1, uses_anonymous_args = 0
 1936              		@ link register save eliminated.
 1937 0000 80B4     		push	{r7}	@
 1938              		.cfi_def_cfa_offset 4
 1939              		.cfi_offset 7, -4
 1940 0002 00AF     		add	r7, sp, #0	@,,
 1941              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 57


1211:RtosV611/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
1212:RtosV611/Source/tasks.c **** 	portBASE_TYPE. */
1213:RtosV611/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
 1942              		.loc 1 1213 0
 1943 0004 024B     		ldr	r3, .L127	@ tmp112,
 1944 0006 1B68     		ldr	r3, [r3]	@ _2, uxCurrentNumberOfTasks
1214:RtosV611/Source/tasks.c **** }
 1945              		.loc 1 1214 0
 1946 0008 1846     		mov	r0, r3	@, <retval>
 1947 000a BD46     		mov	sp, r7	@,
 1948              		.cfi_def_cfa_register 13
 1949              		@ sp needed	@
 1950 000c 80BC     		pop	{r7}	@
 1951              		.cfi_restore 7
 1952              		.cfi_def_cfa_offset 0
 1953 000e 7047     		bx	lr	@
 1954              	.L128:
 1955              		.align	2
 1956              	.L127:
 1957 0010 00000000 		.word	uxCurrentNumberOfTasks
 1958              		.cfi_endproc
 1959              	.LFE17:
 1960              		.size	uxTaskGetNumberOfTasks, .-uxTaskGetNumberOfTasks
 1961              		.section	.rodata
 1962 0005 000000   		.align	2
 1963              	.LC1:
 1964 0008 0D0A00   		.ascii	"\015\012\000"
 1965              		.section	.text.vTaskList,"ax",%progbits
 1966              		.align	1
 1967              		.global	vTaskList
 1968              		.syntax unified
 1969              		.thumb
 1970              		.thumb_func
 1971              		.fpu softvfp
 1972              		.type	vTaskList, %function
 1973              	vTaskList:
 1974              	.LFB18:
1215:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
1216:RtosV611/Source/tasks.c **** 
1217:RtosV611/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1218:RtosV611/Source/tasks.c **** 
1219:RtosV611/Source/tasks.c **** 	void vTaskList( signed char *pcWriteBuffer )
1220:RtosV611/Source/tasks.c **** 	{
 1975              		.loc 1 1220 0
 1976              		.cfi_startproc
 1977              		@ args = 0, pretend = 0, frame = 16
 1978              		@ frame_needed = 1, uses_anonymous_args = 0
 1979 0000 80B5     		push	{r7, lr}	@
 1980              		.cfi_def_cfa_offset 8
 1981              		.cfi_offset 7, -8
 1982              		.cfi_offset 14, -4
 1983 0002 84B0     		sub	sp, sp, #16	@,,
 1984              		.cfi_def_cfa_offset 24
 1985 0004 00AF     		add	r7, sp, #0	@,,
 1986              		.cfi_def_cfa_register 7
 1987 0006 7860     		str	r0, [r7, #4]	@ pcWriteBuffer, pcWriteBuffer
1221:RtosV611/Source/tasks.c **** 	unsigned portBASE_TYPE uxQueue;
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 58


1222:RtosV611/Source/tasks.c **** 
1223:RtosV611/Source/tasks.c **** 		/* This is a VERY costly function that should be used for debug only.
1224:RtosV611/Source/tasks.c **** 		It leaves interrupts disabled for a LONG time. */
1225:RtosV611/Source/tasks.c **** 
1226:RtosV611/Source/tasks.c **** 		vTaskSuspendAll();
 1988              		.loc 1 1226 0
 1989 0008 FFF7FEFF 		bl	vTaskSuspendAll	@
1227:RtosV611/Source/tasks.c **** 		{
1228:RtosV611/Source/tasks.c **** 			/* Run through all the lists that could potentially contain a TCB and
1229:RtosV611/Source/tasks.c **** 			report the task name, state and stack high water mark. */
1230:RtosV611/Source/tasks.c **** 
1231:RtosV611/Source/tasks.c **** 			pcWriteBuffer[ 0 ] = ( signed char ) 0x00;
 1990              		.loc 1 1231 0
 1991 000c 7B68     		ldr	r3, [r7, #4]	@ tmp123, pcWriteBuffer
 1992 000e 0022     		movs	r2, #0	@ tmp124,
 1993 0010 1A70     		strb	r2, [r3]	@ tmp125, *pcWriteBuffer_10(D)
1232:RtosV611/Source/tasks.c **** 			strcat( ( char * ) pcWriteBuffer, ( const char * ) "\r\n" );
 1994              		.loc 1 1232 0
 1995 0012 7868     		ldr	r0, [r7, #4]	@, pcWriteBuffer
 1996 0014 FFF7FEFF 		bl	strlen	@
 1997 0018 0346     		mov	r3, r0	@ tmp126,
 1998 001a 1A46     		mov	r2, r3	@ _12, tmp126
 1999 001c 7B68     		ldr	r3, [r7, #4]	@ tmp127, pcWriteBuffer
 2000 001e 1344     		add	r3, r3, r2	@ _13, _12
 2001 0020 2A4A     		ldr	r2, .L136	@ tmp128,
 2002 0022 1188     		ldrh	r1, [r2]	@ unaligned	@ tmp131, MEM[(void *)"\r\n"]
 2003 0024 9278     		ldrb	r2, [r2, #2]	@ tmp132, MEM[(void *)"\r\n"]
 2004 0026 1980     		strh	r1, [r3]	@ unaligned	@ tmp131, MEM[(void *)_13]
 2005 0028 9A70     		strb	r2, [r3, #2]	@ tmp133, MEM[(void *)_13]
1233:RtosV611/Source/tasks.c **** 
1234:RtosV611/Source/tasks.c **** 			uxQueue = uxTopUsedPriority + 1;
 2006              		.loc 1 1234 0
 2007 002a 294B     		ldr	r3, .L136+4	@ tmp134,
 2008 002c 1B68     		ldr	r3, [r3]	@ uxTopUsedPriority.60_15, uxTopUsedPriority
 2009 002e 0133     		adds	r3, r3, #1	@ tmp135, uxTopUsedPriority.60_15,
 2010 0030 FB60     		str	r3, [r7, #12]	@ tmp135, uxQueue
 2011              	.L131:
1235:RtosV611/Source/tasks.c **** 
1236:RtosV611/Source/tasks.c **** 			do
1237:RtosV611/Source/tasks.c **** 			{
1238:RtosV611/Source/tasks.c **** 				uxQueue--;
 2012              		.loc 1 1238 0
 2013 0032 FB68     		ldr	r3, [r7, #12]	@ tmp137, uxQueue
 2014 0034 013B     		subs	r3, r3, #1	@ tmp136, tmp137,
 2015 0036 FB60     		str	r3, [r7, #12]	@ tmp136, uxQueue
1239:RtosV611/Source/tasks.c **** 
1240:RtosV611/Source/tasks.c **** 				if( !listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxQueue ] ) ) )
 2016              		.loc 1 1240 0
 2017 0038 2649     		ldr	r1, .L136+8	@ tmp138,
 2018 003a FA68     		ldr	r2, [r7, #12]	@ tmp139, uxQueue
 2019 003c 1346     		mov	r3, r2	@ tmp140, tmp139
 2020 003e 9B00     		lsls	r3, r3, #2	@ tmp140, tmp140,
 2021 0040 1344     		add	r3, r3, r2	@ tmp140, tmp139
 2022 0042 9B00     		lsls	r3, r3, #2	@ tmp141, tmp140,
 2023 0044 0B44     		add	r3, r3, r1	@ tmp142, tmp138
 2024 0046 1B68     		ldr	r3, [r3]	@ _18, pxReadyTasksLists[uxQueue_17].uxNumberOfItems
 2025 0048 002B     		cmp	r3, #0	@ _18,
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 59


 2026 004a 0BD0     		beq	.L130	@,
1241:RtosV611/Source/tasks.c **** 				{
1242:RtosV611/Source/tasks.c **** 					prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) &( pxReadyTasksLists[ uxQueue ] ), tsk
 2027              		.loc 1 1242 0
 2028 004c FA68     		ldr	r2, [r7, #12]	@ tmp143, uxQueue
 2029 004e 1346     		mov	r3, r2	@ tmp144, tmp143
 2030 0050 9B00     		lsls	r3, r3, #2	@ tmp144, tmp144,
 2031 0052 1344     		add	r3, r3, r2	@ tmp144, tmp143
 2032 0054 9B00     		lsls	r3, r3, #2	@ tmp145, tmp144,
 2033 0056 1F4A     		ldr	r2, .L136+8	@ tmp146,
 2034 0058 1344     		add	r3, r3, r2	@ _19, tmp146
 2035 005a 5222     		movs	r2, #82	@,
 2036 005c 1946     		mov	r1, r3	@, _19
 2037 005e 7868     		ldr	r0, [r7, #4]	@, pcWriteBuffer
 2038 0060 FFF7FEFF 		bl	prvListTaskWithinSingleList	@
 2039              	.L130:
1243:RtosV611/Source/tasks.c **** 				}
1244:RtosV611/Source/tasks.c **** 			}while( uxQueue > ( unsigned short ) tskIDLE_PRIORITY );
 2040              		.loc 1 1244 0
 2041 0064 FB68     		ldr	r3, [r7, #12]	@ tmp147, uxQueue
 2042 0066 002B     		cmp	r3, #0	@ tmp147,
 2043 0068 E3D1     		bne	.L131	@,
1245:RtosV611/Source/tasks.c **** 
1246:RtosV611/Source/tasks.c **** 			if( !listLIST_IS_EMPTY( pxDelayedTaskList ) )
 2044              		.loc 1 1246 0
 2045 006a 1B4B     		ldr	r3, .L136+12	@ tmp148,
 2046 006c 1B68     		ldr	r3, [r3]	@ pxDelayedTaskList.61_21, pxDelayedTaskList
 2047 006e 1B68     		ldr	r3, [r3]	@ _22, pxDelayedTaskList.61_21->uxNumberOfItems
 2048 0070 002B     		cmp	r3, #0	@ _22,
 2049 0072 06D0     		beq	.L132	@,
1247:RtosV611/Source/tasks.c **** 			{
1248:RtosV611/Source/tasks.c **** 				prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) pxDelayedTaskList, tskBLOCKED_CHAR );
 2050              		.loc 1 1248 0
 2051 0074 184B     		ldr	r3, .L136+12	@ tmp149,
 2052 0076 1B68     		ldr	r3, [r3]	@ pxDelayedTaskList.62_23, pxDelayedTaskList
 2053 0078 4222     		movs	r2, #66	@,
 2054 007a 1946     		mov	r1, r3	@, pxDelayedTaskList.62_23
 2055 007c 7868     		ldr	r0, [r7, #4]	@, pcWriteBuffer
 2056 007e FFF7FEFF 		bl	prvListTaskWithinSingleList	@
 2057              	.L132:
1249:RtosV611/Source/tasks.c **** 			}
1250:RtosV611/Source/tasks.c **** 
1251:RtosV611/Source/tasks.c **** 			if( !listLIST_IS_EMPTY( pxOverflowDelayedTaskList ) )
 2058              		.loc 1 1251 0
 2059 0082 164B     		ldr	r3, .L136+16	@ tmp150,
 2060 0084 1B68     		ldr	r3, [r3]	@ pxOverflowDelayedTaskList.63_25, pxOverflowDelayedTaskList
 2061 0086 1B68     		ldr	r3, [r3]	@ _26, pxOverflowDelayedTaskList.63_25->uxNumberOfItems
 2062 0088 002B     		cmp	r3, #0	@ _26,
 2063 008a 06D0     		beq	.L133	@,
1252:RtosV611/Source/tasks.c **** 			{
1253:RtosV611/Source/tasks.c **** 				prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) pxOverflowDelayedTaskList, tskBLOCKED_C
 2064              		.loc 1 1253 0
 2065 008c 134B     		ldr	r3, .L136+16	@ tmp151,
 2066 008e 1B68     		ldr	r3, [r3]	@ pxOverflowDelayedTaskList.64_27, pxOverflowDelayedTaskList
 2067 0090 4222     		movs	r2, #66	@,
 2068 0092 1946     		mov	r1, r3	@, pxOverflowDelayedTaskList.64_27
 2069 0094 7868     		ldr	r0, [r7, #4]	@, pcWriteBuffer
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 60


 2070 0096 FFF7FEFF 		bl	prvListTaskWithinSingleList	@
 2071              	.L133:
1254:RtosV611/Source/tasks.c **** 			}
1255:RtosV611/Source/tasks.c **** 
1256:RtosV611/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
1257:RtosV611/Source/tasks.c **** 			{
1258:RtosV611/Source/tasks.c **** 				if( !listLIST_IS_EMPTY( &xTasksWaitingTermination ) )
 2072              		.loc 1 1258 0
 2073 009a 114B     		ldr	r3, .L136+20	@ tmp152,
 2074 009c 1B68     		ldr	r3, [r3]	@ _29, xTasksWaitingTermination.uxNumberOfItems
 2075 009e 002B     		cmp	r3, #0	@ _29,
 2076 00a0 04D0     		beq	.L134	@,
1259:RtosV611/Source/tasks.c **** 				{
1260:RtosV611/Source/tasks.c **** 					prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) &xTasksWaitingTermination, tskDELETED_
 2077              		.loc 1 1260 0
 2078 00a2 4422     		movs	r2, #68	@,
 2079 00a4 0E49     		ldr	r1, .L136+20	@,
 2080 00a6 7868     		ldr	r0, [r7, #4]	@, pcWriteBuffer
 2081 00a8 FFF7FEFF 		bl	prvListTaskWithinSingleList	@
 2082              	.L134:
1261:RtosV611/Source/tasks.c **** 				}
1262:RtosV611/Source/tasks.c **** 			}
1263:RtosV611/Source/tasks.c **** 			#endif
1264:RtosV611/Source/tasks.c **** 
1265:RtosV611/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1266:RtosV611/Source/tasks.c **** 			{
1267:RtosV611/Source/tasks.c **** 				if( !listLIST_IS_EMPTY( &xSuspendedTaskList ) )
 2083              		.loc 1 1267 0
 2084 00ac 0D4B     		ldr	r3, .L136+24	@ tmp153,
 2085 00ae 1B68     		ldr	r3, [r3]	@ _31, xSuspendedTaskList.uxNumberOfItems
 2086 00b0 002B     		cmp	r3, #0	@ _31,
 2087 00b2 04D0     		beq	.L135	@,
1268:RtosV611/Source/tasks.c **** 				{
1269:RtosV611/Source/tasks.c **** 					prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) &xSuspendedTaskList, tskSUSPENDED_CHAR
 2088              		.loc 1 1269 0
 2089 00b4 5322     		movs	r2, #83	@,
 2090 00b6 0B49     		ldr	r1, .L136+24	@,
 2091 00b8 7868     		ldr	r0, [r7, #4]	@, pcWriteBuffer
 2092 00ba FFF7FEFF 		bl	prvListTaskWithinSingleList	@
 2093              	.L135:
1270:RtosV611/Source/tasks.c **** 				}
1271:RtosV611/Source/tasks.c **** 			}
1272:RtosV611/Source/tasks.c **** 			#endif
1273:RtosV611/Source/tasks.c **** 		}
1274:RtosV611/Source/tasks.c **** 		xTaskResumeAll();
 2094              		.loc 1 1274 0
 2095 00be FFF7FEFF 		bl	xTaskResumeAll	@
1275:RtosV611/Source/tasks.c **** 	}
 2096              		.loc 1 1275 0
 2097 00c2 00BF     		nop
 2098 00c4 1037     		adds	r7, r7, #16	@,,
 2099              		.cfi_def_cfa_offset 8
 2100 00c6 BD46     		mov	sp, r7	@,
 2101              		.cfi_def_cfa_register 13
 2102              		@ sp needed	@
 2103 00c8 80BD     		pop	{r7, pc}	@
 2104              	.L137:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 61


 2105 00ca 00BF     		.align	2
 2106              	.L136:
 2107 00cc 08000000 		.word	.LC1
 2108 00d0 00000000 		.word	uxTopUsedPriority
 2109 00d4 00000000 		.word	pxReadyTasksLists
 2110 00d8 00000000 		.word	pxDelayedTaskList
 2111 00dc 00000000 		.word	pxOverflowDelayedTaskList
 2112 00e0 00000000 		.word	xTasksWaitingTermination
 2113 00e4 00000000 		.word	xSuspendedTaskList
 2114              		.cfi_endproc
 2115              	.LFE18:
 2116              		.size	vTaskList, .-vTaskList
 2117              		.section	.text.vTaskGetRunTimeStats,"ax",%progbits
 2118              		.align	1
 2119              		.global	vTaskGetRunTimeStats
 2120              		.syntax unified
 2121              		.thumb
 2122              		.thumb_func
 2123              		.fpu softvfp
 2124              		.type	vTaskGetRunTimeStats, %function
 2125              	vTaskGetRunTimeStats:
 2126              	.LFB19:
1276:RtosV611/Source/tasks.c **** 
1277:RtosV611/Source/tasks.c **** #endif
1278:RtosV611/Source/tasks.c **** /*----------------------------------------------------------*/
1279:RtosV611/Source/tasks.c **** 
1280:RtosV611/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
1281:RtosV611/Source/tasks.c **** 
1282:RtosV611/Source/tasks.c **** 	void vTaskGetRunTimeStats( signed char *pcWriteBuffer )
1283:RtosV611/Source/tasks.c **** 	{
 2127              		.loc 1 1283 0
 2128              		.cfi_startproc
 2129              		@ args = 0, pretend = 0, frame = 16
 2130              		@ frame_needed = 1, uses_anonymous_args = 0
 2131 0000 80B5     		push	{r7, lr}	@
 2132              		.cfi_def_cfa_offset 8
 2133              		.cfi_offset 7, -8
 2134              		.cfi_offset 14, -4
 2135 0002 84B0     		sub	sp, sp, #16	@,,
 2136              		.cfi_def_cfa_offset 24
 2137 0004 00AF     		add	r7, sp, #0	@,,
 2138              		.cfi_def_cfa_register 7
 2139 0006 7860     		str	r0, [r7, #4]	@ pcWriteBuffer, pcWriteBuffer
1284:RtosV611/Source/tasks.c **** 	unsigned portBASE_TYPE uxQueue;
1285:RtosV611/Source/tasks.c **** 	unsigned long ulTotalRunTime;
1286:RtosV611/Source/tasks.c **** 
1287:RtosV611/Source/tasks.c **** 		/* This is a VERY costly function that should be used for debug only.
1288:RtosV611/Source/tasks.c **** 		It leaves interrupts disabled for a LONG time. */
1289:RtosV611/Source/tasks.c **** 
1290:RtosV611/Source/tasks.c **** 		vTaskSuspendAll();
 2140              		.loc 1 1290 0
 2141 0008 FFF7FEFF 		bl	vTaskSuspendAll	@
1291:RtosV611/Source/tasks.c **** 		{
1292:RtosV611/Source/tasks.c **** 			#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
1293:RtosV611/Source/tasks.c **** 				portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
1294:RtosV611/Source/tasks.c **** 			#else
1295:RtosV611/Source/tasks.c **** 				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 62


 2142              		.loc 1 1295 0
 2143 000c 334B     		ldr	r3, .L145	@ tmp123,
 2144 000e 1B68     		ldr	r3, [r3]	@ tmp124, ulHighFrequencyTimerTicks
 2145 0010 BB60     		str	r3, [r7, #8]	@ tmp124, ulTotalRunTime
1296:RtosV611/Source/tasks.c **** 			#endif
1297:RtosV611/Source/tasks.c **** 
1298:RtosV611/Source/tasks.c **** 			/* Divide ulTotalRunTime by 100 to make the percentage caluclations
1299:RtosV611/Source/tasks.c **** 			simpler in the prvGenerateRunTimeStatsForTasksInList() function. */
1300:RtosV611/Source/tasks.c **** 			ulTotalRunTime /= 100UL;
 2146              		.loc 1 1300 0
 2147 0012 BB68     		ldr	r3, [r7, #8]	@ tmp126, ulTotalRunTime
 2148 0014 324A     		ldr	r2, .L145+4	@ tmp128,
 2149 0016 A2FB0323 		umull	r2, r3, r2, r3	@ tmp160, tmp127, tmp128, tmp126
 2150 001a 5B09     		lsrs	r3, r3, #5	@ tmp125, tmp127,
 2151 001c BB60     		str	r3, [r7, #8]	@ tmp125, ulTotalRunTime
1301:RtosV611/Source/tasks.c **** 			
1302:RtosV611/Source/tasks.c **** 			/* Run through all the lists that could potentially contain a TCB,
1303:RtosV611/Source/tasks.c **** 			generating a table of run timer percentages in the provided
1304:RtosV611/Source/tasks.c **** 			buffer. */
1305:RtosV611/Source/tasks.c **** 
1306:RtosV611/Source/tasks.c **** 			pcWriteBuffer[ 0 ] = ( signed char ) 0x00;
 2152              		.loc 1 1306 0
 2153 001e 7B68     		ldr	r3, [r7, #4]	@ tmp129, pcWriteBuffer
 2154 0020 0022     		movs	r2, #0	@ tmp130,
 2155 0022 1A70     		strb	r2, [r3]	@ tmp131, *pcWriteBuffer_12(D)
1307:RtosV611/Source/tasks.c **** 			strcat( ( char * ) pcWriteBuffer, ( const char * ) "\r\n" );
 2156              		.loc 1 1307 0
 2157 0024 7868     		ldr	r0, [r7, #4]	@, pcWriteBuffer
 2158 0026 FFF7FEFF 		bl	strlen	@
 2159 002a 0346     		mov	r3, r0	@ tmp132,
 2160 002c 1A46     		mov	r2, r3	@ _14, tmp132
 2161 002e 7B68     		ldr	r3, [r7, #4]	@ tmp133, pcWriteBuffer
 2162 0030 1344     		add	r3, r3, r2	@ _15, _14
 2163 0032 2C4A     		ldr	r2, .L145+8	@ tmp134,
 2164 0034 1188     		ldrh	r1, [r2]	@ unaligned	@ tmp137, MEM[(void *)"\r\n"]
 2165 0036 9278     		ldrb	r2, [r2, #2]	@ tmp138, MEM[(void *)"\r\n"]
 2166 0038 1980     		strh	r1, [r3]	@ unaligned	@ tmp137, MEM[(void *)_15]
 2167 003a 9A70     		strb	r2, [r3, #2]	@ tmp139, MEM[(void *)_15]
1308:RtosV611/Source/tasks.c **** 
1309:RtosV611/Source/tasks.c **** 			uxQueue = uxTopUsedPriority + 1;
 2168              		.loc 1 1309 0
 2169 003c 2A4B     		ldr	r3, .L145+12	@ tmp140,
 2170 003e 1B68     		ldr	r3, [r3]	@ uxTopUsedPriority.65_17, uxTopUsedPriority
 2171 0040 0133     		adds	r3, r3, #1	@ tmp141, uxTopUsedPriority.65_17,
 2172 0042 FB60     		str	r3, [r7, #12]	@ tmp141, uxQueue
 2173              	.L140:
1310:RtosV611/Source/tasks.c **** 
1311:RtosV611/Source/tasks.c **** 			do
1312:RtosV611/Source/tasks.c **** 			{
1313:RtosV611/Source/tasks.c **** 				uxQueue--;
 2174              		.loc 1 1313 0
 2175 0044 FB68     		ldr	r3, [r7, #12]	@ tmp143, uxQueue
 2176 0046 013B     		subs	r3, r3, #1	@ tmp142, tmp143,
 2177 0048 FB60     		str	r3, [r7, #12]	@ tmp142, uxQueue
1314:RtosV611/Source/tasks.c **** 
1315:RtosV611/Source/tasks.c **** 				if( !listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxQueue ] ) ) )
 2178              		.loc 1 1315 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 63


 2179 004a 2849     		ldr	r1, .L145+16	@ tmp144,
 2180 004c FA68     		ldr	r2, [r7, #12]	@ tmp145, uxQueue
 2181 004e 1346     		mov	r3, r2	@ tmp146, tmp145
 2182 0050 9B00     		lsls	r3, r3, #2	@ tmp146, tmp146,
 2183 0052 1344     		add	r3, r3, r2	@ tmp146, tmp145
 2184 0054 9B00     		lsls	r3, r3, #2	@ tmp147, tmp146,
 2185 0056 0B44     		add	r3, r3, r1	@ tmp148, tmp144
 2186 0058 1B68     		ldr	r3, [r3]	@ _20, pxReadyTasksLists[uxQueue_19].uxNumberOfItems
 2187 005a 002B     		cmp	r3, #0	@ _20,
 2188 005c 0BD0     		beq	.L139	@,
1316:RtosV611/Source/tasks.c **** 				{
1317:RtosV611/Source/tasks.c **** 					prvGenerateRunTimeStatsForTasksInList( pcWriteBuffer, ( xList * ) &( pxReadyTasksLists[ uxQueu
 2189              		.loc 1 1317 0
 2190 005e FA68     		ldr	r2, [r7, #12]	@ tmp149, uxQueue
 2191 0060 1346     		mov	r3, r2	@ tmp150, tmp149
 2192 0062 9B00     		lsls	r3, r3, #2	@ tmp150, tmp150,
 2193 0064 1344     		add	r3, r3, r2	@ tmp150, tmp149
 2194 0066 9B00     		lsls	r3, r3, #2	@ tmp151, tmp150,
 2195 0068 204A     		ldr	r2, .L145+16	@ tmp152,
 2196 006a 1344     		add	r3, r3, r2	@ _21, tmp152
 2197 006c BA68     		ldr	r2, [r7, #8]	@, ulTotalRunTime
 2198 006e 1946     		mov	r1, r3	@, _21
 2199 0070 7868     		ldr	r0, [r7, #4]	@, pcWriteBuffer
 2200 0072 FFF7FEFF 		bl	prvGenerateRunTimeStatsForTasksInList	@
 2201              	.L139:
1318:RtosV611/Source/tasks.c **** 				}
1319:RtosV611/Source/tasks.c **** 			}while( uxQueue > ( unsigned short ) tskIDLE_PRIORITY );
 2202              		.loc 1 1319 0
 2203 0076 FB68     		ldr	r3, [r7, #12]	@ tmp153, uxQueue
 2204 0078 002B     		cmp	r3, #0	@ tmp153,
 2205 007a E3D1     		bne	.L140	@,
1320:RtosV611/Source/tasks.c **** 
1321:RtosV611/Source/tasks.c **** 			if( !listLIST_IS_EMPTY( pxDelayedTaskList ) )
 2206              		.loc 1 1321 0
 2207 007c 1C4B     		ldr	r3, .L145+20	@ tmp154,
 2208 007e 1B68     		ldr	r3, [r3]	@ pxDelayedTaskList.66_23, pxDelayedTaskList
 2209 0080 1B68     		ldr	r3, [r3]	@ _24, pxDelayedTaskList.66_23->uxNumberOfItems
 2210 0082 002B     		cmp	r3, #0	@ _24,
 2211 0084 06D0     		beq	.L141	@,
1322:RtosV611/Source/tasks.c **** 			{
1323:RtosV611/Source/tasks.c **** 				prvGenerateRunTimeStatsForTasksInList( pcWriteBuffer, ( xList * ) pxDelayedTaskList, ulTotalRun
 2212              		.loc 1 1323 0
 2213 0086 1A4B     		ldr	r3, .L145+20	@ tmp155,
 2214 0088 1B68     		ldr	r3, [r3]	@ pxDelayedTaskList.67_25, pxDelayedTaskList
 2215 008a BA68     		ldr	r2, [r7, #8]	@, ulTotalRunTime
 2216 008c 1946     		mov	r1, r3	@, pxDelayedTaskList.67_25
 2217 008e 7868     		ldr	r0, [r7, #4]	@, pcWriteBuffer
 2218 0090 FFF7FEFF 		bl	prvGenerateRunTimeStatsForTasksInList	@
 2219              	.L141:
1324:RtosV611/Source/tasks.c **** 			}
1325:RtosV611/Source/tasks.c **** 
1326:RtosV611/Source/tasks.c **** 			if( !listLIST_IS_EMPTY( pxOverflowDelayedTaskList ) )
 2220              		.loc 1 1326 0
 2221 0094 174B     		ldr	r3, .L145+24	@ tmp156,
 2222 0096 1B68     		ldr	r3, [r3]	@ pxOverflowDelayedTaskList.68_27, pxOverflowDelayedTaskList
 2223 0098 1B68     		ldr	r3, [r3]	@ _28, pxOverflowDelayedTaskList.68_27->uxNumberOfItems
 2224 009a 002B     		cmp	r3, #0	@ _28,
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 64


 2225 009c 06D0     		beq	.L142	@,
1327:RtosV611/Source/tasks.c **** 			{
1328:RtosV611/Source/tasks.c **** 				prvGenerateRunTimeStatsForTasksInList( pcWriteBuffer, ( xList * ) pxOverflowDelayedTaskList, ul
 2226              		.loc 1 1328 0
 2227 009e 154B     		ldr	r3, .L145+24	@ tmp157,
 2228 00a0 1B68     		ldr	r3, [r3]	@ pxOverflowDelayedTaskList.69_29, pxOverflowDelayedTaskList
 2229 00a2 BA68     		ldr	r2, [r7, #8]	@, ulTotalRunTime
 2230 00a4 1946     		mov	r1, r3	@, pxOverflowDelayedTaskList.69_29
 2231 00a6 7868     		ldr	r0, [r7, #4]	@, pcWriteBuffer
 2232 00a8 FFF7FEFF 		bl	prvGenerateRunTimeStatsForTasksInList	@
 2233              	.L142:
1329:RtosV611/Source/tasks.c **** 			}
1330:RtosV611/Source/tasks.c **** 
1331:RtosV611/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1332:RtosV611/Source/tasks.c **** 			{
1333:RtosV611/Source/tasks.c **** 				if( !listLIST_IS_EMPTY( &xTasksWaitingTermination ) )
 2234              		.loc 1 1333 0
 2235 00ac 124B     		ldr	r3, .L145+28	@ tmp158,
 2236 00ae 1B68     		ldr	r3, [r3]	@ _31, xTasksWaitingTermination.uxNumberOfItems
 2237 00b0 002B     		cmp	r3, #0	@ _31,
 2238 00b2 04D0     		beq	.L143	@,
1334:RtosV611/Source/tasks.c **** 				{
1335:RtosV611/Source/tasks.c **** 					prvGenerateRunTimeStatsForTasksInList( pcWriteBuffer, ( xList * ) &xTasksWaitingTermination, u
 2239              		.loc 1 1335 0
 2240 00b4 BA68     		ldr	r2, [r7, #8]	@, ulTotalRunTime
 2241 00b6 1049     		ldr	r1, .L145+28	@,
 2242 00b8 7868     		ldr	r0, [r7, #4]	@, pcWriteBuffer
 2243 00ba FFF7FEFF 		bl	prvGenerateRunTimeStatsForTasksInList	@
 2244              	.L143:
1336:RtosV611/Source/tasks.c **** 				}
1337:RtosV611/Source/tasks.c **** 			}
1338:RtosV611/Source/tasks.c **** 			#endif
1339:RtosV611/Source/tasks.c **** 
1340:RtosV611/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1341:RtosV611/Source/tasks.c **** 			{
1342:RtosV611/Source/tasks.c **** 				if( !listLIST_IS_EMPTY( &xSuspendedTaskList ) )
 2245              		.loc 1 1342 0
 2246 00be 0F4B     		ldr	r3, .L145+32	@ tmp159,
 2247 00c0 1B68     		ldr	r3, [r3]	@ _33, xSuspendedTaskList.uxNumberOfItems
 2248 00c2 002B     		cmp	r3, #0	@ _33,
 2249 00c4 04D0     		beq	.L144	@,
1343:RtosV611/Source/tasks.c **** 				{
1344:RtosV611/Source/tasks.c **** 					prvGenerateRunTimeStatsForTasksInList( pcWriteBuffer, ( xList * ) &xSuspendedTaskList, ulTotal
 2250              		.loc 1 1344 0
 2251 00c6 BA68     		ldr	r2, [r7, #8]	@, ulTotalRunTime
 2252 00c8 0C49     		ldr	r1, .L145+32	@,
 2253 00ca 7868     		ldr	r0, [r7, #4]	@, pcWriteBuffer
 2254 00cc FFF7FEFF 		bl	prvGenerateRunTimeStatsForTasksInList	@
 2255              	.L144:
1345:RtosV611/Source/tasks.c **** 				}
1346:RtosV611/Source/tasks.c **** 			}
1347:RtosV611/Source/tasks.c **** 			#endif
1348:RtosV611/Source/tasks.c **** 		}
1349:RtosV611/Source/tasks.c **** 		xTaskResumeAll();
 2256              		.loc 1 1349 0
 2257 00d0 FFF7FEFF 		bl	xTaskResumeAll	@
1350:RtosV611/Source/tasks.c **** 	}
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 65


 2258              		.loc 1 1350 0
 2259 00d4 00BF     		nop
 2260 00d6 1037     		adds	r7, r7, #16	@,,
 2261              		.cfi_def_cfa_offset 8
 2262 00d8 BD46     		mov	sp, r7	@,
 2263              		.cfi_def_cfa_register 13
 2264              		@ sp needed	@
 2265 00da 80BD     		pop	{r7, pc}	@
 2266              	.L146:
 2267              		.align	2
 2268              	.L145:
 2269 00dc 00000000 		.word	ulHighFrequencyTimerTicks
 2270 00e0 1F85EB51 		.word	1374389535
 2271 00e4 08000000 		.word	.LC1
 2272 00e8 00000000 		.word	uxTopUsedPriority
 2273 00ec 00000000 		.word	pxReadyTasksLists
 2274 00f0 00000000 		.word	pxDelayedTaskList
 2275 00f4 00000000 		.word	pxOverflowDelayedTaskList
 2276 00f8 00000000 		.word	xTasksWaitingTermination
 2277 00fc 00000000 		.word	xSuspendedTaskList
 2278              		.cfi_endproc
 2279              	.LFE19:
 2280              		.size	vTaskGetRunTimeStats, .-vTaskGetRunTimeStats
 2281              		.section	.text.vTaskStartTrace,"ax",%progbits
 2282              		.align	1
 2283              		.global	vTaskStartTrace
 2284              		.syntax unified
 2285              		.thumb
 2286              		.thumb_func
 2287              		.fpu softvfp
 2288              		.type	vTaskStartTrace, %function
 2289              	vTaskStartTrace:
 2290              	.LFB20:
1351:RtosV611/Source/tasks.c **** 
1352:RtosV611/Source/tasks.c **** #endif
1353:RtosV611/Source/tasks.c **** /*----------------------------------------------------------*/
1354:RtosV611/Source/tasks.c **** 
1355:RtosV611/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1356:RtosV611/Source/tasks.c **** 
1357:RtosV611/Source/tasks.c **** 	void vTaskStartTrace( signed char * pcBuffer, unsigned long ulBufferSize )
1358:RtosV611/Source/tasks.c **** 	{
 2291              		.loc 1 1358 0
 2292              		.cfi_startproc
 2293              		@ args = 0, pretend = 0, frame = 8
 2294              		@ frame_needed = 1, uses_anonymous_args = 0
 2295 0000 80B5     		push	{r7, lr}	@
 2296              		.cfi_def_cfa_offset 8
 2297              		.cfi_offset 7, -8
 2298              		.cfi_offset 14, -4
 2299 0002 82B0     		sub	sp, sp, #8	@,,
 2300              		.cfi_def_cfa_offset 16
 2301 0004 00AF     		add	r7, sp, #0	@,,
 2302              		.cfi_def_cfa_register 7
 2303 0006 7860     		str	r0, [r7, #4]	@ pcBuffer, pcBuffer
 2304 0008 3960     		str	r1, [r7]	@ ulBufferSize, ulBufferSize
1359:RtosV611/Source/tasks.c **** 		portENTER_CRITICAL();
 2305              		.loc 1 1359 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 66


 2306 000a FFF7FEFF 		bl	vPortEnterCritical	@
1360:RtosV611/Source/tasks.c **** 		{
1361:RtosV611/Source/tasks.c **** 			pcTraceBuffer = ( signed char * )pcBuffer;
 2307              		.loc 1 1361 0
 2308 000e 0A4A     		ldr	r2, .L148	@ tmp112,
 2309 0010 7B68     		ldr	r3, [r7, #4]	@ tmp113, pcBuffer
 2310 0012 1360     		str	r3, [r2]	@ tmp113, pcTraceBuffer
1362:RtosV611/Source/tasks.c **** 			pcTraceBufferStart = pcBuffer;
 2311              		.loc 1 1362 0
 2312 0014 094A     		ldr	r2, .L148+4	@ tmp114,
 2313 0016 7B68     		ldr	r3, [r7, #4]	@ tmp115, pcBuffer
 2314 0018 1360     		str	r3, [r2]	@ tmp115, pcTraceBufferStart
1363:RtosV611/Source/tasks.c **** 			pcTraceBufferEnd = pcBuffer + ( ulBufferSize - tskSIZE_OF_EACH_TRACE_LINE );
 2315              		.loc 1 1363 0
 2316 001a 3B68     		ldr	r3, [r7]	@ tmp116, ulBufferSize
 2317 001c 083B     		subs	r3, r3, #8	@ _7, tmp116,
 2318 001e 7A68     		ldr	r2, [r7, #4]	@ tmp117, pcBuffer
 2319 0020 1344     		add	r3, r3, r2	@ _8, tmp117
 2320 0022 074A     		ldr	r2, .L148+8	@ tmp118,
 2321 0024 1360     		str	r3, [r2]	@ _8, pcTraceBufferEnd
1364:RtosV611/Source/tasks.c **** 			xTracing = pdTRUE;
 2322              		.loc 1 1364 0
 2323 0026 074B     		ldr	r3, .L148+12	@ tmp119,
 2324 0028 0122     		movs	r2, #1	@ tmp120,
 2325 002a 1A60     		str	r2, [r3]	@ tmp120, xTracing
1365:RtosV611/Source/tasks.c **** 		}
1366:RtosV611/Source/tasks.c **** 		portEXIT_CRITICAL();
 2326              		.loc 1 1366 0
 2327 002c FFF7FEFF 		bl	vPortExitCritical	@
1367:RtosV611/Source/tasks.c **** 	}
 2328              		.loc 1 1367 0
 2329 0030 00BF     		nop
 2330 0032 0837     		adds	r7, r7, #8	@,,
 2331              		.cfi_def_cfa_offset 8
 2332 0034 BD46     		mov	sp, r7	@,
 2333              		.cfi_def_cfa_register 13
 2334              		@ sp needed	@
 2335 0036 80BD     		pop	{r7, pc}	@
 2336              	.L149:
 2337              		.align	2
 2338              	.L148:
 2339 0038 00000000 		.word	pcTraceBuffer
 2340 003c 00000000 		.word	pcTraceBufferStart
 2341 0040 00000000 		.word	pcTraceBufferEnd
 2342 0044 00000000 		.word	xTracing
 2343              		.cfi_endproc
 2344              	.LFE20:
 2345              		.size	vTaskStartTrace, .-vTaskStartTrace
 2346              		.section	.text.ulTaskEndTrace,"ax",%progbits
 2347              		.align	1
 2348              		.global	ulTaskEndTrace
 2349              		.syntax unified
 2350              		.thumb
 2351              		.thumb_func
 2352              		.fpu softvfp
 2353              		.type	ulTaskEndTrace, %function
 2354              	ulTaskEndTrace:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 67


 2355              	.LFB21:
1368:RtosV611/Source/tasks.c **** 
1369:RtosV611/Source/tasks.c **** #endif
1370:RtosV611/Source/tasks.c **** /*----------------------------------------------------------*/
1371:RtosV611/Source/tasks.c **** 
1372:RtosV611/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1373:RtosV611/Source/tasks.c **** 
1374:RtosV611/Source/tasks.c **** 	unsigned long ulTaskEndTrace( void )
1375:RtosV611/Source/tasks.c **** 	{
 2356              		.loc 1 1375 0
 2357              		.cfi_startproc
 2358              		@ args = 0, pretend = 0, frame = 8
 2359              		@ frame_needed = 1, uses_anonymous_args = 0
 2360 0000 80B5     		push	{r7, lr}	@
 2361              		.cfi_def_cfa_offset 8
 2362              		.cfi_offset 7, -8
 2363              		.cfi_offset 14, -4
 2364 0002 82B0     		sub	sp, sp, #8	@,,
 2365              		.cfi_def_cfa_offset 16
 2366 0004 00AF     		add	r7, sp, #0	@,,
 2367              		.cfi_def_cfa_register 7
1376:RtosV611/Source/tasks.c **** 	unsigned long ulBufferLength;
1377:RtosV611/Source/tasks.c **** 
1378:RtosV611/Source/tasks.c **** 		portENTER_CRITICAL();
 2368              		.loc 1 1378 0
 2369 0006 FFF7FEFF 		bl	vPortEnterCritical	@
1379:RtosV611/Source/tasks.c **** 			xTracing = pdFALSE;
 2370              		.loc 1 1379 0
 2371 000a 084B     		ldr	r3, .L152	@ tmp117,
 2372 000c 0022     		movs	r2, #0	@ tmp118,
 2373 000e 1A60     		str	r2, [r3]	@ tmp118, xTracing
1380:RtosV611/Source/tasks.c **** 		portEXIT_CRITICAL();
 2374              		.loc 1 1380 0
 2375 0010 FFF7FEFF 		bl	vPortExitCritical	@
1381:RtosV611/Source/tasks.c **** 
1382:RtosV611/Source/tasks.c **** 		ulBufferLength = ( unsigned long ) ( pcTraceBuffer - pcTraceBufferStart );
 2376              		.loc 1 1382 0
 2377 0014 064B     		ldr	r3, .L152+4	@ tmp119,
 2378 0016 1B68     		ldr	r3, [r3]	@ pcTraceBuffer.70_5, pcTraceBuffer
 2379 0018 1A46     		mov	r2, r3	@ pcTraceBuffer.71_6, pcTraceBuffer.70_5
 2380 001a 064B     		ldr	r3, .L152+8	@ tmp120,
 2381 001c 1B68     		ldr	r3, [r3]	@ pcTraceBufferStart.72_7, pcTraceBufferStart
 2382 001e D31A     		subs	r3, r2, r3	@ _9, pcTraceBuffer.71_6, pcTraceBufferStart.73_8
 2383 0020 7B60     		str	r3, [r7, #4]	@ _9, ulBufferLength
1383:RtosV611/Source/tasks.c **** 
1384:RtosV611/Source/tasks.c **** 		return ulBufferLength;
 2384              		.loc 1 1384 0
 2385 0022 7B68     		ldr	r3, [r7, #4]	@ _11, ulBufferLength
1385:RtosV611/Source/tasks.c **** 	}
 2386              		.loc 1 1385 0
 2387 0024 1846     		mov	r0, r3	@, <retval>
 2388 0026 0837     		adds	r7, r7, #8	@,,
 2389              		.cfi_def_cfa_offset 8
 2390 0028 BD46     		mov	sp, r7	@,
 2391              		.cfi_def_cfa_register 13
 2392              		@ sp needed	@
 2393 002a 80BD     		pop	{r7, pc}	@
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 68


 2394              	.L153:
 2395              		.align	2
 2396              	.L152:
 2397 002c 00000000 		.word	xTracing
 2398 0030 00000000 		.word	pcTraceBuffer
 2399 0034 00000000 		.word	pcTraceBufferStart
 2400              		.cfi_endproc
 2401              	.LFE21:
 2402              		.size	ulTaskEndTrace, .-ulTaskEndTrace
 2403              		.section	.text.vTaskIncrementTick,"ax",%progbits
 2404              		.align	1
 2405              		.global	vTaskIncrementTick
 2406              		.syntax unified
 2407              		.thumb
 2408              		.thumb_func
 2409              		.fpu softvfp
 2410              		.type	vTaskIncrementTick, %function
 2411              	vTaskIncrementTick:
 2412              	.LFB22:
1386:RtosV611/Source/tasks.c **** 
1387:RtosV611/Source/tasks.c **** #endif
1388:RtosV611/Source/tasks.c **** 
1389:RtosV611/Source/tasks.c **** 
1390:RtosV611/Source/tasks.c **** 
1391:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------
1392:RtosV611/Source/tasks.c ****  * SCHEDULER INTERNALS AVAILABLE FOR PORTING PURPOSES
1393:RtosV611/Source/tasks.c ****  * documented in task.h
1394:RtosV611/Source/tasks.c ****  *----------------------------------------------------------*/
1395:RtosV611/Source/tasks.c **** 
1396:RtosV611/Source/tasks.c **** 
1397:RtosV611/Source/tasks.c **** void vTaskIncrementTick( void )
1398:RtosV611/Source/tasks.c **** {
 2413              		.loc 1 1398 0
 2414              		.cfi_startproc
 2415              		@ args = 0, pretend = 0, frame = 8
 2416              		@ frame_needed = 1, uses_anonymous_args = 0
 2417 0000 90B5     		push	{r4, r7, lr}	@
 2418              		.cfi_def_cfa_offset 12
 2419              		.cfi_offset 4, -12
 2420              		.cfi_offset 7, -8
 2421              		.cfi_offset 14, -4
 2422 0002 83B0     		sub	sp, sp, #12	@,,
 2423              		.cfi_def_cfa_offset 24
 2424 0004 00AF     		add	r7, sp, #0	@,,
 2425              		.cfi_def_cfa_register 7
1399:RtosV611/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
1400:RtosV611/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
1401:RtosV611/Source/tasks.c **** 	tasks to be unblocked. */
1402:RtosV611/Source/tasks.c **** 	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
 2426              		.loc 1 1402 0
 2427 0006 2E4B     		ldr	r3, .L169	@ tmp136,
 2428 0008 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.74_8, uxSchedulerSuspended
 2429 000a 002B     		cmp	r3, #0	@ uxSchedulerSuspended.74_8,
 2430 000c 4CD1     		bne	.L155	@,
1403:RtosV611/Source/tasks.c **** 	{
1404:RtosV611/Source/tasks.c **** 		++xTickCount;
 2431              		.loc 1 1404 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 69


 2432 000e 2D4B     		ldr	r3, .L169+4	@ tmp137,
 2433 0010 1B68     		ldr	r3, [r3]	@ xTickCount.75_9, xTickCount
 2434 0012 0133     		adds	r3, r3, #1	@ _10, xTickCount.75_9,
 2435 0014 2B4A     		ldr	r2, .L169+4	@ tmp138,
 2436 0016 1360     		str	r3, [r2]	@ _10, xTickCount
1405:RtosV611/Source/tasks.c **** 		if( xTickCount == ( portTickType ) 0 )
 2437              		.loc 1 1405 0
 2438 0018 2A4B     		ldr	r3, .L169+4	@ tmp139,
 2439 001a 1B68     		ldr	r3, [r3]	@ xTickCount.76_12, xTickCount
 2440 001c 002B     		cmp	r3, #0	@ xTickCount.76_12,
 2441 001e 34D1     		bne	.L157	@,
 2442              	.LBB4:
1406:RtosV611/Source/tasks.c **** 		{
1407:RtosV611/Source/tasks.c **** 			xList *pxTemp;
1408:RtosV611/Source/tasks.c **** 
1409:RtosV611/Source/tasks.c **** 			/* Tick count has overflowed so we need to swap the delay lists.
1410:RtosV611/Source/tasks.c **** 			If there are any items in pxDelayedTaskList here then there is
1411:RtosV611/Source/tasks.c **** 			an error! */
1412:RtosV611/Source/tasks.c **** 			pxTemp = pxDelayedTaskList;
 2443              		.loc 1 1412 0
 2444 0020 294B     		ldr	r3, .L169+8	@ tmp140,
 2445 0022 1B68     		ldr	r3, [r3]	@ tmp141, pxDelayedTaskList
 2446 0024 7B60     		str	r3, [r7, #4]	@ tmp141, pxTemp
1413:RtosV611/Source/tasks.c **** 			pxDelayedTaskList = pxOverflowDelayedTaskList;
 2447              		.loc 1 1413 0
 2448 0026 294B     		ldr	r3, .L169+12	@ tmp142,
 2449 0028 1B68     		ldr	r3, [r3]	@ pxOverflowDelayedTaskList.77_14, pxOverflowDelayedTaskList
 2450 002a 274A     		ldr	r2, .L169+8	@ tmp143,
 2451 002c 1360     		str	r3, [r2]	@ pxOverflowDelayedTaskList.77_14, pxDelayedTaskList
1414:RtosV611/Source/tasks.c **** 			pxOverflowDelayedTaskList = pxTemp;
 2452              		.loc 1 1414 0
 2453 002e 274A     		ldr	r2, .L169+12	@ tmp144,
 2454 0030 7B68     		ldr	r3, [r7, #4]	@ tmp145, pxTemp
 2455 0032 1360     		str	r3, [r2]	@ tmp145, pxOverflowDelayedTaskList
1415:RtosV611/Source/tasks.c **** 			xNumOfOverflows++;
 2456              		.loc 1 1415 0
 2457 0034 264B     		ldr	r3, .L169+16	@ tmp146,
 2458 0036 1B68     		ldr	r3, [r3]	@ xNumOfOverflows.78_17, xNumOfOverflows
 2459 0038 0133     		adds	r3, r3, #1	@ _18, xNumOfOverflows.78_17,
 2460 003a 254A     		ldr	r2, .L169+16	@ tmp147,
 2461 003c 1360     		str	r3, [r2]	@ _18, xNumOfOverflows
 2462              	.LBE4:
 2463              	.LBB5:
1416:RtosV611/Source/tasks.c **** 		}
1417:RtosV611/Source/tasks.c **** 
1418:RtosV611/Source/tasks.c **** 		/* See if this tick has made a timeout expire. */
1419:RtosV611/Source/tasks.c **** 		prvCheckDelayedTasks();
 2464              		.loc 1 1419 0
 2465 003e 24E0     		b	.L157	@
 2466              	.L164:
 2467              		.loc 1 1419 0 is_stmt 0 discriminator 13
 2468 0040 6268     		ldr	r2, [r4, #4]	@ _27, pxTCB_26->xGenericListItem.xItemValue
 2469 0042 204B     		ldr	r3, .L169+4	@ tmp148,
 2470 0044 1B68     		ldr	r3, [r3]	@ xTickCount.79_28, xTickCount
 2471 0046 9A42     		cmp	r2, r3	@ _27, xTickCount.79_28
 2472 0048 34D8     		bhi	.L167	@,
 2473              		.loc 1 1419 0 discriminator 1
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 70


 2474 004a 231D     		adds	r3, r4, #4	@ _29, pxTCB,
 2475 004c 1846     		mov	r0, r3	@, _29
 2476 004e FFF7FEFF 		bl	vListRemove	@
 2477 0052 A36A     		ldr	r3, [r4, #40]	@ _31, pxTCB_26->xEventListItem.pvContainer
 2478 0054 002B     		cmp	r3, #0	@ _31,
 2479 0056 04D0     		beq	.L160	@,
 2480              		.loc 1 1419 0 discriminator 2
 2481 0058 04F11803 		add	r3, r4, #24	@ _32, pxTCB,
 2482 005c 1846     		mov	r0, r3	@, _32
 2483 005e FFF7FEFF 		bl	vListRemove	@
 2484              	.L160:
 2485              		.loc 1 1419 0 discriminator 4
 2486 0062 E26A     		ldr	r2, [r4, #44]	@ _34, pxTCB_26->uxPriority
 2487 0064 1B4B     		ldr	r3, .L169+20	@ tmp149,
 2488 0066 1B68     		ldr	r3, [r3]	@ uxTopReadyPriority.80_35, uxTopReadyPriority
 2489 0068 9A42     		cmp	r2, r3	@ _34, uxTopReadyPriority.80_35
 2490 006a 02D9     		bls	.L161	@,
 2491              		.loc 1 1419 0 discriminator 5
 2492 006c E36A     		ldr	r3, [r4, #44]	@ _36, pxTCB_26->uxPriority
 2493 006e 194A     		ldr	r2, .L169+20	@ tmp150,
 2494 0070 1360     		str	r3, [r2]	@ _36, uxTopReadyPriority
 2495              	.L161:
 2496              		.loc 1 1419 0 discriminator 7
 2497 0072 E26A     		ldr	r2, [r4, #44]	@ _38, pxTCB_26->uxPriority
 2498 0074 1346     		mov	r3, r2	@ tmp151, _38
 2499 0076 9B00     		lsls	r3, r3, #2	@ tmp151, tmp151,
 2500 0078 1344     		add	r3, r3, r2	@ tmp151, _38
 2501 007a 9B00     		lsls	r3, r3, #2	@ tmp152, tmp151,
 2502 007c 164A     		ldr	r2, .L169+24	@ tmp153,
 2503 007e 1344     		add	r3, r3, r2	@ _39, tmp153
 2504 0080 221D     		adds	r2, r4, #4	@ _40, pxTCB,
 2505 0082 1146     		mov	r1, r2	@, _40
 2506 0084 1846     		mov	r0, r3	@, _39
 2507 0086 FFF7FEFF 		bl	vListInsertEnd	@
 2508              	.L157:
 2509              		.loc 1 1419 0 discriminator 8
 2510 008a 0F4B     		ldr	r3, .L169+8	@ tmp154,
 2511 008c 1B68     		ldr	r3, [r3]	@ pxDelayedTaskList.82_20, pxDelayedTaskList
 2512 008e 1B68     		ldr	r3, [r3]	@ _21, pxDelayedTaskList.82_20->uxNumberOfItems
 2513 0090 002B     		cmp	r3, #0	@ _21,
 2514 0092 04D0     		beq	.L162	@,
 2515              		.loc 1 1419 0 discriminator 9
 2516 0094 0C4B     		ldr	r3, .L169+8	@ tmp155,
 2517 0096 1B68     		ldr	r3, [r3]	@ pxDelayedTaskList.83_22, pxDelayedTaskList
 2518 0098 DB68     		ldr	r3, [r3, #12]	@ _23, pxDelayedTaskList.83_22->xListEnd.pxNext
 2519 009a DB68     		ldr	r3, [r3, #12]	@ iftmp.81_1, _23->pvOwner
 2520 009c 00E0     		b	.L163	@
 2521              	.L162:
 2522              		.loc 1 1419 0 discriminator 10
 2523 009e 0023     		movs	r3, #0	@ iftmp.81_1,
 2524              	.L163:
 2525              		.loc 1 1419 0 discriminator 12
 2526 00a0 1C46     		mov	r4, r3	@ pxTCB, iftmp.81_1
 2527 00a2 002C     		cmp	r4, #0	@ pxTCB,
 2528 00a4 CCD1     		bne	.L164	@,
 2529              	.LBE5:
1420:RtosV611/Source/tasks.c **** 	}
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 71


1421:RtosV611/Source/tasks.c **** 	else
1422:RtosV611/Source/tasks.c **** 	{
1423:RtosV611/Source/tasks.c **** 		++uxMissedTicks;
1424:RtosV611/Source/tasks.c **** 
1425:RtosV611/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
1426:RtosV611/Source/tasks.c **** 		scheduler is locked. */
1427:RtosV611/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
1428:RtosV611/Source/tasks.c **** 		{
1429:RtosV611/Source/tasks.c **** 			extern void vApplicationTickHook( void );
1430:RtosV611/Source/tasks.c **** 
1431:RtosV611/Source/tasks.c **** 			vApplicationTickHook();
1432:RtosV611/Source/tasks.c **** 		}
1433:RtosV611/Source/tasks.c **** 		#endif
1434:RtosV611/Source/tasks.c **** 	}
1435:RtosV611/Source/tasks.c **** 
1436:RtosV611/Source/tasks.c **** 	#if ( configUSE_TICK_HOOK == 1 )
1437:RtosV611/Source/tasks.c **** 	{
1438:RtosV611/Source/tasks.c **** 		extern void vApplicationTickHook( void );
1439:RtosV611/Source/tasks.c **** 
1440:RtosV611/Source/tasks.c **** 		/* Guard against the tick hook being called when the missed tick
1441:RtosV611/Source/tasks.c **** 		count is being unwound (when the scheduler is being unlocked. */
1442:RtosV611/Source/tasks.c **** 		if( uxMissedTicks == 0 )
1443:RtosV611/Source/tasks.c **** 		{
1444:RtosV611/Source/tasks.c **** 			vApplicationTickHook();
1445:RtosV611/Source/tasks.c **** 		}
1446:RtosV611/Source/tasks.c **** 	}
1447:RtosV611/Source/tasks.c **** 	#endif
1448:RtosV611/Source/tasks.c **** 
1449:RtosV611/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
1450:RtosV611/Source/tasks.c **** }
 2530              		.loc 1 1450 0 is_stmt 1
 2531 00a6 06E0     		b	.L168	@
 2532              	.L155:
1423:RtosV611/Source/tasks.c **** 
 2533              		.loc 1 1423 0
 2534 00a8 0C4B     		ldr	r3, .L169+28	@ tmp156,
 2535 00aa 1B68     		ldr	r3, [r3]	@ uxMissedTicks.84_42, uxMissedTicks
 2536 00ac 0133     		adds	r3, r3, #1	@ _43, uxMissedTicks.84_42,
 2537 00ae 0B4A     		ldr	r2, .L169+28	@ tmp157,
 2538 00b0 1360     		str	r3, [r2]	@ _43, uxMissedTicks
 2539              		.loc 1 1450 0
 2540 00b2 00E0     		b	.L168	@
 2541              	.L167:
 2542              	.LBB6:
1419:RtosV611/Source/tasks.c **** 	}
 2543              		.loc 1 1419 0
 2544 00b4 00BF     		nop
 2545              	.L168:
 2546              	.LBE6:
 2547              		.loc 1 1450 0
 2548 00b6 00BF     		nop
 2549 00b8 0C37     		adds	r7, r7, #12	@,,
 2550              		.cfi_def_cfa_offset 12
 2551 00ba BD46     		mov	sp, r7	@,
 2552              		.cfi_def_cfa_register 13
 2553              		@ sp needed	@
 2554 00bc 90BD     		pop	{r4, r7, pc}	@
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 72


 2555              	.L170:
 2556 00be 00BF     		.align	2
 2557              	.L169:
 2558 00c0 00000000 		.word	uxSchedulerSuspended
 2559 00c4 00000000 		.word	xTickCount
 2560 00c8 00000000 		.word	pxDelayedTaskList
 2561 00cc 00000000 		.word	pxOverflowDelayedTaskList
 2562 00d0 00000000 		.word	xNumOfOverflows
 2563 00d4 00000000 		.word	uxTopReadyPriority
 2564 00d8 00000000 		.word	pxReadyTasksLists
 2565 00dc 00000000 		.word	uxMissedTicks
 2566              		.cfi_endproc
 2567              	.LFE22:
 2568              		.size	vTaskIncrementTick, .-vTaskIncrementTick
 2569              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2570              		.align	1
 2571              		.global	vTaskSwitchContext
 2572              		.syntax unified
 2573              		.thumb
 2574              		.thumb_func
 2575              		.fpu softvfp
 2576              		.type	vTaskSwitchContext, %function
 2577              	vTaskSwitchContext:
 2578              	.LFB23:
1451:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
1452:RtosV611/Source/tasks.c **** 
1453:RtosV611/Source/tasks.c **** #if ( ( INCLUDE_vTaskCleanUpResources == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1454:RtosV611/Source/tasks.c **** 
1455:RtosV611/Source/tasks.c **** 	void vTaskCleanUpResources( void )
1456:RtosV611/Source/tasks.c **** 	{
1457:RtosV611/Source/tasks.c **** 	unsigned short usQueue;
1458:RtosV611/Source/tasks.c **** 	volatile tskTCB *pxTCB;
1459:RtosV611/Source/tasks.c **** 
1460:RtosV611/Source/tasks.c **** 		usQueue = ( unsigned short ) uxTopUsedPriority + ( unsigned short ) 1;
1461:RtosV611/Source/tasks.c **** 
1462:RtosV611/Source/tasks.c **** 		/* Remove any TCB's from the ready queues. */
1463:RtosV611/Source/tasks.c **** 		do
1464:RtosV611/Source/tasks.c **** 		{
1465:RtosV611/Source/tasks.c **** 			usQueue--;
1466:RtosV611/Source/tasks.c **** 
1467:RtosV611/Source/tasks.c **** 			while( !listLIST_IS_EMPTY( &( pxReadyTasksLists[ usQueue ] ) ) )
1468:RtosV611/Source/tasks.c **** 			{
1469:RtosV611/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxTCB, &( pxReadyTasksLists[ usQueue ] ) );
1470:RtosV611/Source/tasks.c **** 				vListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) );
1471:RtosV611/Source/tasks.c **** 
1472:RtosV611/Source/tasks.c **** 				prvDeleteTCB( ( tskTCB * ) pxTCB );
1473:RtosV611/Source/tasks.c **** 			}
1474:RtosV611/Source/tasks.c **** 		}while( usQueue > ( unsigned short ) tskIDLE_PRIORITY );
1475:RtosV611/Source/tasks.c **** 
1476:RtosV611/Source/tasks.c **** 		/* Remove any TCB's from the delayed queue. */
1477:RtosV611/Source/tasks.c **** 		while( !listLIST_IS_EMPTY( &xDelayedTaskList1 ) )
1478:RtosV611/Source/tasks.c **** 		{
1479:RtosV611/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxTCB, &xDelayedTaskList1 );
1480:RtosV611/Source/tasks.c **** 			vListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) );
1481:RtosV611/Source/tasks.c **** 
1482:RtosV611/Source/tasks.c **** 			prvDeleteTCB( ( tskTCB * ) pxTCB );
1483:RtosV611/Source/tasks.c **** 		}
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 73


1484:RtosV611/Source/tasks.c **** 
1485:RtosV611/Source/tasks.c **** 		/* Remove any TCB's from the overflow delayed queue. */
1486:RtosV611/Source/tasks.c **** 		while( !listLIST_IS_EMPTY( &xDelayedTaskList2 ) )
1487:RtosV611/Source/tasks.c **** 		{
1488:RtosV611/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxTCB, &xDelayedTaskList2 );
1489:RtosV611/Source/tasks.c **** 			vListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) );
1490:RtosV611/Source/tasks.c **** 
1491:RtosV611/Source/tasks.c **** 			prvDeleteTCB( ( tskTCB * ) pxTCB );
1492:RtosV611/Source/tasks.c **** 		}
1493:RtosV611/Source/tasks.c **** 
1494:RtosV611/Source/tasks.c **** 		while( !listLIST_IS_EMPTY( &xSuspendedTaskList ) )
1495:RtosV611/Source/tasks.c **** 		{
1496:RtosV611/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxTCB, &xSuspendedTaskList );
1497:RtosV611/Source/tasks.c **** 			vListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) );
1498:RtosV611/Source/tasks.c **** 
1499:RtosV611/Source/tasks.c **** 			prvDeleteTCB( ( tskTCB * ) pxTCB );
1500:RtosV611/Source/tasks.c **** 		}
1501:RtosV611/Source/tasks.c **** 	}
1502:RtosV611/Source/tasks.c **** 
1503:RtosV611/Source/tasks.c **** #endif
1504:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
1505:RtosV611/Source/tasks.c **** 
1506:RtosV611/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
1507:RtosV611/Source/tasks.c **** 
1508:RtosV611/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( xTaskHandle xTask, pdTASK_HOOK_CODE pxTagValue )
1509:RtosV611/Source/tasks.c **** 	{
1510:RtosV611/Source/tasks.c **** 	tskTCB *xTCB;
1511:RtosV611/Source/tasks.c **** 
1512:RtosV611/Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
1513:RtosV611/Source/tasks.c **** 		if( xTask == NULL )
1514:RtosV611/Source/tasks.c **** 		{
1515:RtosV611/Source/tasks.c **** 			xTCB = ( tskTCB * ) pxCurrentTCB;
1516:RtosV611/Source/tasks.c **** 		}
1517:RtosV611/Source/tasks.c **** 		else
1518:RtosV611/Source/tasks.c **** 		{
1519:RtosV611/Source/tasks.c **** 			xTCB = ( tskTCB * ) xTask;
1520:RtosV611/Source/tasks.c **** 		}
1521:RtosV611/Source/tasks.c **** 
1522:RtosV611/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
1523:RtosV611/Source/tasks.c **** 		the value can be accessed from an interrupt. */
1524:RtosV611/Source/tasks.c **** 		portENTER_CRITICAL();
1525:RtosV611/Source/tasks.c **** 			xTCB->pxTaskTag = pxTagValue;
1526:RtosV611/Source/tasks.c **** 		portEXIT_CRITICAL();
1527:RtosV611/Source/tasks.c **** 	}
1528:RtosV611/Source/tasks.c **** 
1529:RtosV611/Source/tasks.c **** #endif
1530:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
1531:RtosV611/Source/tasks.c **** 
1532:RtosV611/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
1533:RtosV611/Source/tasks.c **** 
1534:RtosV611/Source/tasks.c **** 	pdTASK_HOOK_CODE xTaskGetApplicationTaskTag( xTaskHandle xTask )
1535:RtosV611/Source/tasks.c **** 	{
1536:RtosV611/Source/tasks.c **** 	tskTCB *xTCB;
1537:RtosV611/Source/tasks.c **** 	pdTASK_HOOK_CODE xReturn;
1538:RtosV611/Source/tasks.c **** 
1539:RtosV611/Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
1540:RtosV611/Source/tasks.c **** 		if( xTask == NULL )
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 74


1541:RtosV611/Source/tasks.c **** 		{
1542:RtosV611/Source/tasks.c **** 			xTCB = ( tskTCB * ) pxCurrentTCB;
1543:RtosV611/Source/tasks.c **** 		}
1544:RtosV611/Source/tasks.c **** 		else
1545:RtosV611/Source/tasks.c **** 		{
1546:RtosV611/Source/tasks.c **** 			xTCB = ( tskTCB * ) xTask;
1547:RtosV611/Source/tasks.c **** 		}
1548:RtosV611/Source/tasks.c **** 
1549:RtosV611/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
1550:RtosV611/Source/tasks.c **** 		the value can be accessed from an interrupt. */
1551:RtosV611/Source/tasks.c **** 		portENTER_CRITICAL();
1552:RtosV611/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
1553:RtosV611/Source/tasks.c **** 		portEXIT_CRITICAL();
1554:RtosV611/Source/tasks.c **** 
1555:RtosV611/Source/tasks.c **** 		return xReturn;
1556:RtosV611/Source/tasks.c **** 	}
1557:RtosV611/Source/tasks.c **** 
1558:RtosV611/Source/tasks.c **** #endif
1559:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
1560:RtosV611/Source/tasks.c **** 
1561:RtosV611/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
1562:RtosV611/Source/tasks.c **** 
1563:RtosV611/Source/tasks.c **** 	portBASE_TYPE xTaskCallApplicationTaskHook( xTaskHandle xTask, void *pvParameter )
1564:RtosV611/Source/tasks.c **** 	{
1565:RtosV611/Source/tasks.c **** 	tskTCB *xTCB;
1566:RtosV611/Source/tasks.c **** 	portBASE_TYPE xReturn;
1567:RtosV611/Source/tasks.c **** 
1568:RtosV611/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
1569:RtosV611/Source/tasks.c **** 		if( xTask == NULL )
1570:RtosV611/Source/tasks.c **** 		{
1571:RtosV611/Source/tasks.c **** 			xTCB = ( tskTCB * ) pxCurrentTCB;
1572:RtosV611/Source/tasks.c **** 		}
1573:RtosV611/Source/tasks.c **** 		else
1574:RtosV611/Source/tasks.c **** 		{
1575:RtosV611/Source/tasks.c **** 			xTCB = ( tskTCB * ) xTask;
1576:RtosV611/Source/tasks.c **** 		}
1577:RtosV611/Source/tasks.c **** 
1578:RtosV611/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
1579:RtosV611/Source/tasks.c **** 		{
1580:RtosV611/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
1581:RtosV611/Source/tasks.c **** 		}
1582:RtosV611/Source/tasks.c **** 		else
1583:RtosV611/Source/tasks.c **** 		{
1584:RtosV611/Source/tasks.c **** 			xReturn = pdFAIL;
1585:RtosV611/Source/tasks.c **** 		}
1586:RtosV611/Source/tasks.c **** 
1587:RtosV611/Source/tasks.c **** 		return xReturn;
1588:RtosV611/Source/tasks.c **** 	}
1589:RtosV611/Source/tasks.c **** 
1590:RtosV611/Source/tasks.c **** #endif
1591:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
1592:RtosV611/Source/tasks.c **** 
1593:RtosV611/Source/tasks.c **** void vTaskSwitchContext( void )
1594:RtosV611/Source/tasks.c **** {
 2579              		.loc 1 1594 0
 2580              		.cfi_startproc
 2581              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 75


 2582              		@ frame_needed = 1, uses_anonymous_args = 0
 2583 0000 80B5     		push	{r7, lr}	@
 2584              		.cfi_def_cfa_offset 8
 2585              		.cfi_offset 7, -8
 2586              		.cfi_offset 14, -4
 2587 0002 82B0     		sub	sp, sp, #8	@,,
 2588              		.cfi_def_cfa_offset 16
 2589 0004 00AF     		add	r7, sp, #0	@,,
 2590              		.cfi_def_cfa_register 7
1595:RtosV611/Source/tasks.c **** 	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
 2591              		.loc 1 1595 0
 2592 0006 4F4B     		ldr	r3, .L180	@ tmp159,
 2593 0008 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.85_7, uxSchedulerSuspended
 2594 000a 002B     		cmp	r3, #0	@ uxSchedulerSuspended.85_7,
 2595 000c 03D0     		beq	.L172	@,
1596:RtosV611/Source/tasks.c **** 	{
1597:RtosV611/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
1598:RtosV611/Source/tasks.c **** 		switch. */
1599:RtosV611/Source/tasks.c **** 		xMissedYield = pdTRUE;
 2596              		.loc 1 1599 0
 2597 000e 4E4B     		ldr	r3, .L180+4	@ tmp160,
 2598 0010 0122     		movs	r2, #1	@ tmp161,
 2599 0012 1A60     		str	r2, [r3]	@ tmp161, xMissedYield
1600:RtosV611/Source/tasks.c **** 		return;
 2600              		.loc 1 1600 0
 2601 0014 92E0     		b	.L171	@
 2602              	.L172:
 2603              	.LBB7:
1601:RtosV611/Source/tasks.c **** 	}
1602:RtosV611/Source/tasks.c **** 
1603:RtosV611/Source/tasks.c **** 	traceTASK_SWITCHED_OUT();
1604:RtosV611/Source/tasks.c **** 
1605:RtosV611/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
1606:RtosV611/Source/tasks.c **** 	{
1607:RtosV611/Source/tasks.c **** 		unsigned long ulTempCounter;
1608:RtosV611/Source/tasks.c **** 		
1609:RtosV611/Source/tasks.c **** 			#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
1610:RtosV611/Source/tasks.c **** 				portALT_GET_RUN_TIME_COUNTER_VALUE( ulTempCounter );
1611:RtosV611/Source/tasks.c **** 			#else
1612:RtosV611/Source/tasks.c **** 				ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
 2604              		.loc 1 1612 0
 2605 0016 4D4B     		ldr	r3, .L180+8	@ tmp162,
 2606 0018 1B68     		ldr	r3, [r3]	@ tmp163, ulHighFrequencyTimerTicks
 2607 001a 7B60     		str	r3, [r7, #4]	@ tmp163, ulTempCounter
1613:RtosV611/Source/tasks.c **** 			#endif
1614:RtosV611/Source/tasks.c **** 
1615:RtosV611/Source/tasks.c **** 			/* Add the amount of time the task has been running to the accumulated
1616:RtosV611/Source/tasks.c **** 			time so far.  The time the task started running was stored in
1617:RtosV611/Source/tasks.c **** 			ulTaskSwitchedInTime.  Note that there is no overflow protection here
1618:RtosV611/Source/tasks.c **** 			so count values are only valid until the timer overflows.  Generally
1619:RtosV611/Source/tasks.c **** 			this will be about 1 hour assuming a 1uS timer increment. */
1620:RtosV611/Source/tasks.c **** 			pxCurrentTCB->ulRunTimeCounter += ( ulTempCounter - ulTaskSwitchedInTime );
 2608              		.loc 1 1620 0
 2609 001c 4C4B     		ldr	r3, .L180+12	@ tmp164,
 2610 001e 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.86_10, pxCurrentTCB
 2611 0020 D96C     		ldr	r1, [r3, #76]	@ _11, pxCurrentTCB.86_10->ulRunTimeCounter
 2612 0022 4C4A     		ldr	r2, .L180+16	@ tmp165,
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 76


 2613 0024 1268     		ldr	r2, [r2]	@ ulTaskSwitchedInTime.87_12, ulTaskSwitchedInTime
 2614 0026 7868     		ldr	r0, [r7, #4]	@ tmp166, ulTempCounter
 2615 0028 821A     		subs	r2, r0, r2	@ _13, tmp166, ulTaskSwitchedInTime.87_12
 2616 002a 0A44     		add	r2, r2, r1	@ _14, _11
 2617 002c DA64     		str	r2, [r3, #76]	@ _14, pxCurrentTCB.86_10->ulRunTimeCounter
1621:RtosV611/Source/tasks.c **** 			ulTaskSwitchedInTime = ulTempCounter;
 2618              		.loc 1 1621 0
 2619 002e 494A     		ldr	r2, .L180+16	@ tmp167,
 2620 0030 7B68     		ldr	r3, [r7, #4]	@ tmp168, ulTempCounter
 2621 0032 1360     		str	r3, [r2]	@ tmp168, ulTaskSwitchedInTime
 2622              	.LBE7:
 2623              	.LBB8:
1622:RtosV611/Source/tasks.c **** 	}
1623:RtosV611/Source/tasks.c **** 	#endif
1624:RtosV611/Source/tasks.c **** 
1625:RtosV611/Source/tasks.c **** 	taskFIRST_CHECK_FOR_STACK_OVERFLOW();
 2624              		.loc 1 1625 0
 2625 0034 464B     		ldr	r3, .L180+12	@ tmp169,
 2626 0036 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.88_17, pxCurrentTCB
 2627 0038 1A68     		ldr	r2, [r3]	@ _18, pxCurrentTCB.88_17->pxTopOfStack
 2628 003a 454B     		ldr	r3, .L180+12	@ tmp170,
 2629 003c 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.89_19, pxCurrentTCB
 2630 003e 1B6B     		ldr	r3, [r3, #48]	@ _20, pxCurrentTCB.89_19->pxStack
 2631 0040 9A42     		cmp	r2, r3	@ _18, _20
 2632 0042 08D8     		bhi	.L174	@,
 2633              		.loc 1 1625 0 is_stmt 0 discriminator 1
 2634 0044 424B     		ldr	r3, .L180+12	@ tmp171,
 2635 0046 1A68     		ldr	r2, [r3]	@ pxCurrentTCB.90_21, pxCurrentTCB
 2636 0048 414B     		ldr	r3, .L180+12	@ tmp172,
 2637 004a 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.91_22, pxCurrentTCB
 2638 004c 3433     		adds	r3, r3, #52	@ _23, pxCurrentTCB.91_22,
 2639 004e 1946     		mov	r1, r3	@, _23
 2640 0050 1046     		mov	r0, r2	@, pxCurrentTCB.90_21
 2641 0052 FFF7FEFF 		bl	vApplicationStackOverflowHook	@
 2642              	.L174:
 2643              	.LBE8:
 2644              	.LBB9:
1626:RtosV611/Source/tasks.c **** 	taskSECOND_CHECK_FOR_STACK_OVERFLOW();
 2645              		.loc 1 1626 0 is_stmt 1
 2646 0056 3E4B     		ldr	r3, .L180+12	@ tmp173,
 2647 0058 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.92_25, pxCurrentTCB
 2648 005a 1B6B     		ldr	r3, [r3, #48]	@ _26, pxCurrentTCB.92_25->pxStack
 2649 005c 1422     		movs	r2, #20	@,
 2650 005e 3E49     		ldr	r1, .L180+20	@,
 2651 0060 1846     		mov	r0, r3	@, _26
 2652 0062 FFF7FEFF 		bl	memcmp	@
 2653 0066 0346     		mov	r3, r0	@ _27,
 2654 0068 002B     		cmp	r3, #0	@ _27,
 2655 006a 0ED0     		beq	.L176	@,
 2656              		.loc 1 1626 0 is_stmt 0 discriminator 1
 2657 006c 384B     		ldr	r3, .L180+12	@ tmp174,
 2658 006e 1A68     		ldr	r2, [r3]	@ pxCurrentTCB.93_28, pxCurrentTCB
 2659 0070 374B     		ldr	r3, .L180+12	@ tmp175,
 2660 0072 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.94_29, pxCurrentTCB
 2661 0074 3433     		adds	r3, r3, #52	@ _30, pxCurrentTCB.94_29,
 2662 0076 1946     		mov	r1, r3	@, _30
 2663 0078 1046     		mov	r0, r2	@, pxCurrentTCB.93_28
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 77


 2664 007a FFF7FEFF 		bl	vApplicationStackOverflowHook	@
 2665              	.LBE9:
1627:RtosV611/Source/tasks.c **** 
1628:RtosV611/Source/tasks.c **** 	/* Find the highest priority queue that contains ready tasks. */
1629:RtosV611/Source/tasks.c **** 	while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
 2666              		.loc 1 1629 0 is_stmt 1 discriminator 1
 2667 007e 04E0     		b	.L176	@
 2668              	.L177:
1630:RtosV611/Source/tasks.c **** 	{
1631:RtosV611/Source/tasks.c **** 		--uxTopReadyPriority;
 2669              		.loc 1 1631 0
 2670 0080 364B     		ldr	r3, .L180+24	@ tmp176,
 2671 0082 1B68     		ldr	r3, [r3]	@ uxTopReadyPriority.95_34, uxTopReadyPriority
 2672 0084 013B     		subs	r3, r3, #1	@ _35, uxTopReadyPriority.95_34,
 2673 0086 354A     		ldr	r2, .L180+24	@ tmp177,
 2674 0088 1360     		str	r3, [r2]	@ _35, uxTopReadyPriority
 2675              	.L176:
1629:RtosV611/Source/tasks.c **** 	{
 2676              		.loc 1 1629 0
 2677 008a 344B     		ldr	r3, .L180+24	@ tmp178,
 2678 008c 1A68     		ldr	r2, [r3]	@ uxTopReadyPriority.96_32, uxTopReadyPriority
 2679 008e 3449     		ldr	r1, .L180+28	@ tmp179,
 2680 0090 1346     		mov	r3, r2	@ tmp180, uxTopReadyPriority.96_32
 2681 0092 9B00     		lsls	r3, r3, #2	@ tmp180, tmp180,
 2682 0094 1344     		add	r3, r3, r2	@ tmp180, uxTopReadyPriority.96_32
 2683 0096 9B00     		lsls	r3, r3, #2	@ tmp181, tmp180,
 2684 0098 0B44     		add	r3, r3, r1	@ tmp182, tmp179
 2685 009a 1B68     		ldr	r3, [r3]	@ _33, pxReadyTasksLists[uxTopReadyPriority.96_32].uxNumberOfItems
 2686 009c 002B     		cmp	r3, #0	@ _33,
 2687 009e EFD0     		beq	.L177	@,
 2688              	.LBB10:
1632:RtosV611/Source/tasks.c **** 	}
1633:RtosV611/Source/tasks.c **** 
1634:RtosV611/Source/tasks.c **** 	/* listGET_OWNER_OF_NEXT_ENTRY walks through the list, so the tasks of the
1635:RtosV611/Source/tasks.c **** 	same priority get an equal share of the processor time. */
1636:RtosV611/Source/tasks.c **** 	listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopReadyPriority ] ) );
 2689              		.loc 1 1636 0
 2690 00a0 2E4B     		ldr	r3, .L180+24	@ tmp183,
 2691 00a2 1A68     		ldr	r2, [r3]	@ uxTopReadyPriority.97_37, uxTopReadyPriority
 2692 00a4 1346     		mov	r3, r2	@ tmp184, uxTopReadyPriority.97_37
 2693 00a6 9B00     		lsls	r3, r3, #2	@ tmp184, tmp184,
 2694 00a8 1344     		add	r3, r3, r2	@ tmp184, uxTopReadyPriority.97_37
 2695 00aa 9B00     		lsls	r3, r3, #2	@ tmp185, tmp184,
 2696 00ac 2C4A     		ldr	r2, .L180+28	@ tmp187,
 2697 00ae 1344     		add	r3, r3, r2	@ tmp186, tmp187
 2698 00b0 3B60     		str	r3, [r7]	@ tmp186, pxConstList
 2699 00b2 3B68     		ldr	r3, [r7]	@ tmp188, pxConstList
 2700 00b4 5B68     		ldr	r3, [r3, #4]	@ _39, pxConstList_38->pxIndex
 2701 00b6 5A68     		ldr	r2, [r3, #4]	@ _40, _39->pxNext
 2702 00b8 3B68     		ldr	r3, [r7]	@ tmp189, pxConstList
 2703 00ba 5A60     		str	r2, [r3, #4]	@ _40, pxConstList_38->pxIndex
 2704 00bc 3B68     		ldr	r3, [r7]	@ tmp190, pxConstList
 2705 00be 5A68     		ldr	r2, [r3, #4]	@ _42, pxConstList_38->pxIndex
 2706 00c0 3B68     		ldr	r3, [r7]	@ tmp191, pxConstList
 2707 00c2 0833     		adds	r3, r3, #8	@ _43, tmp191,
 2708 00c4 9A42     		cmp	r2, r3	@ _42, _43
 2709 00c6 04D1     		bne	.L178	@,
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 78


 2710              		.loc 1 1636 0 is_stmt 0 discriminator 1
 2711 00c8 3B68     		ldr	r3, [r7]	@ tmp192, pxConstList
 2712 00ca 5B68     		ldr	r3, [r3, #4]	@ _44, pxConstList_38->pxIndex
 2713 00cc 5A68     		ldr	r2, [r3, #4]	@ _45, _44->pxNext
 2714 00ce 3B68     		ldr	r3, [r7]	@ tmp193, pxConstList
 2715 00d0 5A60     		str	r2, [r3, #4]	@ _45, pxConstList_38->pxIndex
 2716              	.L178:
 2717              		.loc 1 1636 0 discriminator 3
 2718 00d2 3B68     		ldr	r3, [r7]	@ tmp194, pxConstList
 2719 00d4 5B68     		ldr	r3, [r3, #4]	@ _47, pxConstList_38->pxIndex
 2720 00d6 DB68     		ldr	r3, [r3, #12]	@ _48, _47->pvOwner
 2721 00d8 1D4A     		ldr	r2, .L180+12	@ tmp195,
 2722 00da 1360     		str	r3, [r2]	@ _48, pxCurrentTCB
 2723              	.LBE10:
1637:RtosV611/Source/tasks.c **** 
1638:RtosV611/Source/tasks.c **** 	traceTASK_SWITCHED_IN();
1639:RtosV611/Source/tasks.c **** 	vWriteTraceToBuffer();
 2724              		.loc 1 1639 0 is_stmt 1 discriminator 3
 2725 00dc 214B     		ldr	r3, .L180+32	@ tmp196,
 2726 00de 1B68     		ldr	r3, [r3]	@ xTracing.98_50, xTracing
 2727 00e0 002B     		cmp	r3, #0	@ xTracing.98_50,
 2728 00e2 2BD0     		beq	.L171	@,
 2729              		.loc 1 1639 0 is_stmt 0 discriminator 1
 2730 00e4 1A4B     		ldr	r3, .L180+12	@ tmp197,
 2731 00e6 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.99_51, pxCurrentTCB
 2732 00e8 5A6C     		ldr	r2, [r3, #68]	@ _52, pxCurrentTCB.99_51->uxTCBNumber
 2733 00ea 1F4B     		ldr	r3, .L180+36	@ tmp198,
 2734 00ec 1B68     		ldr	r3, [r3]	@ uxPreviousTask.100_53, uxPreviousTask
 2735 00ee 9A42     		cmp	r2, r3	@ _52, uxPreviousTask.100_53
 2736 00f0 24D0     		beq	.L171	@,
 2737              		.loc 1 1639 0 discriminator 2
 2738 00f2 1E4B     		ldr	r3, .L180+40	@ tmp199,
 2739 00f4 1B68     		ldr	r3, [r3]	@ pcTraceBuffer.101_54, pcTraceBuffer
 2740 00f6 03F10802 		add	r2, r3, #8	@ _55, pcTraceBuffer.101_54,
 2741 00fa 1D4B     		ldr	r3, .L180+44	@ tmp200,
 2742 00fc 1B68     		ldr	r3, [r3]	@ pcTraceBufferEnd.102_56, pcTraceBufferEnd
 2743 00fe 9A42     		cmp	r2, r3	@ _55, pcTraceBufferEnd.102_56
 2744 0100 19D2     		bcs	.L179	@,
 2745              		.loc 1 1639 0 discriminator 3
 2746 0102 134B     		ldr	r3, .L180+12	@ tmp201,
 2747 0104 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.103_57, pxCurrentTCB
 2748 0106 5B6C     		ldr	r3, [r3, #68]	@ _58, pxCurrentTCB.103_57->uxTCBNumber
 2749 0108 174A     		ldr	r2, .L180+36	@ tmp202,
 2750 010a 1360     		str	r3, [r2]	@ _58, uxPreviousTask
 2751 010c 174B     		ldr	r3, .L180+40	@ tmp203,
 2752 010e 1B68     		ldr	r3, [r3]	@ pcTraceBuffer.104_60, pcTraceBuffer
 2753 0110 184A     		ldr	r2, .L180+48	@ tmp204,
 2754 0112 1268     		ldr	r2, [r2]	@ xTickCount.105_61, xTickCount
 2755 0114 1A60     		str	r2, [r3]	@ xTickCount.105_61, MEM[(long unsigned int *)pcTraceBuffer.104_60]
 2756 0116 154B     		ldr	r3, .L180+40	@ tmp205,
 2757 0118 1B68     		ldr	r3, [r3]	@ pcTraceBuffer.106_63, pcTraceBuffer
 2758 011a 0433     		adds	r3, r3, #4	@ _64, pcTraceBuffer.106_63,
 2759 011c 134A     		ldr	r2, .L180+40	@ tmp206,
 2760 011e 1360     		str	r3, [r2]	@ _64, pcTraceBuffer
 2761 0120 124B     		ldr	r3, .L180+40	@ tmp207,
 2762 0122 1B68     		ldr	r3, [r3]	@ pcTraceBuffer.107_66, pcTraceBuffer
 2763 0124 104A     		ldr	r2, .L180+36	@ tmp208,
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 79


 2764 0126 1268     		ldr	r2, [r2]	@ uxPreviousTask.108_67, uxPreviousTask
 2765 0128 1A60     		str	r2, [r3]	@ uxPreviousTask.108_67, MEM[(long unsigned int *)pcTraceBuffer.107_66]
 2766 012a 104B     		ldr	r3, .L180+40	@ tmp209,
 2767 012c 1B68     		ldr	r3, [r3]	@ pcTraceBuffer.109_69, pcTraceBuffer
 2768 012e 0433     		adds	r3, r3, #4	@ _70, pcTraceBuffer.109_69,
 2769 0130 0E4A     		ldr	r2, .L180+40	@ tmp210,
 2770 0132 1360     		str	r3, [r2]	@ _70, pcTraceBuffer
 2771 0134 02E0     		b	.L171	@
 2772              	.L179:
 2773              		.loc 1 1639 0 discriminator 4
 2774 0136 0B4B     		ldr	r3, .L180+32	@ tmp211,
 2775 0138 0022     		movs	r2, #0	@ tmp212,
 2776 013a 1A60     		str	r2, [r3]	@ tmp212, xTracing
 2777              	.L171:
1640:RtosV611/Source/tasks.c **** }
 2778              		.loc 1 1640 0 is_stmt 1
 2779 013c 0837     		adds	r7, r7, #8	@,,
 2780              		.cfi_def_cfa_offset 8
 2781 013e BD46     		mov	sp, r7	@,
 2782              		.cfi_def_cfa_register 13
 2783              		@ sp needed	@
 2784 0140 80BD     		pop	{r7, pc}	@
 2785              	.L181:
 2786 0142 00BF     		.align	2
 2787              	.L180:
 2788 0144 00000000 		.word	uxSchedulerSuspended
 2789 0148 00000000 		.word	xMissedYield
 2790 014c 00000000 		.word	ulHighFrequencyTimerTicks
 2791 0150 00000000 		.word	pxCurrentTCB
 2792 0154 00000000 		.word	ulTaskSwitchedInTime
 2793 0158 00000000 		.word	ucExpectedStackBytes.6029
 2794 015c 00000000 		.word	uxTopReadyPriority
 2795 0160 00000000 		.word	pxReadyTasksLists
 2796 0164 00000000 		.word	xTracing
 2797 0168 00000000 		.word	uxPreviousTask
 2798 016c 00000000 		.word	pcTraceBuffer
 2799 0170 00000000 		.word	pcTraceBufferEnd
 2800 0174 00000000 		.word	xTickCount
 2801              		.cfi_endproc
 2802              	.LFE23:
 2803              		.size	vTaskSwitchContext, .-vTaskSwitchContext
 2804              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2805              		.align	1
 2806              		.global	vTaskPlaceOnEventList
 2807              		.syntax unified
 2808              		.thumb
 2809              		.thumb_func
 2810              		.fpu softvfp
 2811              		.type	vTaskPlaceOnEventList, %function
 2812              	vTaskPlaceOnEventList:
 2813              	.LFB24:
1641:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
1642:RtosV611/Source/tasks.c **** 
1643:RtosV611/Source/tasks.c **** void vTaskPlaceOnEventList( const xList * const pxEventList, portTickType xTicksToWait )
1644:RtosV611/Source/tasks.c **** {
 2814              		.loc 1 1644 0
 2815              		.cfi_startproc
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 80


 2816              		@ args = 0, pretend = 0, frame = 16
 2817              		@ frame_needed = 1, uses_anonymous_args = 0
 2818 0000 80B5     		push	{r7, lr}	@
 2819              		.cfi_def_cfa_offset 8
 2820              		.cfi_offset 7, -8
 2821              		.cfi_offset 14, -4
 2822 0002 84B0     		sub	sp, sp, #16	@,,
 2823              		.cfi_def_cfa_offset 24
 2824 0004 00AF     		add	r7, sp, #0	@,,
 2825              		.cfi_def_cfa_register 7
 2826 0006 7860     		str	r0, [r7, #4]	@ pxEventList, pxEventList
 2827 0008 3960     		str	r1, [r7]	@ xTicksToWait, xTicksToWait
1645:RtosV611/Source/tasks.c **** portTickType xTimeToWake;
1646:RtosV611/Source/tasks.c **** 
1647:RtosV611/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH INTERRUPTS DISABLED OR THE
1648:RtosV611/Source/tasks.c **** 	SCHEDULER SUSPENDED. */
1649:RtosV611/Source/tasks.c **** 
1650:RtosV611/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
1651:RtosV611/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
1652:RtosV611/Source/tasks.c **** 	is the first to be woken by the event. */
1653:RtosV611/Source/tasks.c **** 	vListInsert( ( xList * ) pxEventList, ( xListItem * ) &( pxCurrentTCB->xEventListItem ) );
 2828              		.loc 1 1653 0
 2829 000a 1F4B     		ldr	r3, .L187	@ tmp125,
 2830 000c 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.110_3, pxCurrentTCB
 2831 000e 1833     		adds	r3, r3, #24	@ _4, pxCurrentTCB.110_3,
 2832 0010 1946     		mov	r1, r3	@, _4
 2833 0012 7868     		ldr	r0, [r7, #4]	@, pxEventList
 2834 0014 FFF7FEFF 		bl	vListInsert	@
1654:RtosV611/Source/tasks.c **** 
1655:RtosV611/Source/tasks.c **** 	/* We must remove ourselves from the ready list before adding ourselves
1656:RtosV611/Source/tasks.c **** 	to the blocked list as the same list item is used for both lists.  We have
1657:RtosV611/Source/tasks.c **** 	exclusive access to the ready lists as the scheduler is locked. */
1658:RtosV611/Source/tasks.c **** 	vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
 2835              		.loc 1 1658 0
 2836 0018 1B4B     		ldr	r3, .L187	@ tmp126,
 2837 001a 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.111_7, pxCurrentTCB
 2838 001c 0433     		adds	r3, r3, #4	@ _8, pxCurrentTCB.111_7,
 2839 001e 1846     		mov	r0, r3	@, _8
 2840 0020 FFF7FEFF 		bl	vListRemove	@
1659:RtosV611/Source/tasks.c **** 
1660:RtosV611/Source/tasks.c **** 
1661:RtosV611/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
1662:RtosV611/Source/tasks.c **** 	{
1663:RtosV611/Source/tasks.c **** 		if( xTicksToWait == portMAX_DELAY )
 2841              		.loc 1 1663 0
 2842 0024 3B68     		ldr	r3, [r7]	@ tmp127, xTicksToWait
 2843 0026 B3F1FF3F 		cmp	r3, #-1	@ tmp127,
 2844 002a 07D1     		bne	.L183	@,
1664:RtosV611/Source/tasks.c **** 		{
1665:RtosV611/Source/tasks.c **** 			/* Add ourselves to the suspended task list instead of a delayed task
1666:RtosV611/Source/tasks.c **** 			list to ensure we are not woken by a timing event.  We will block
1667:RtosV611/Source/tasks.c **** 			indefinitely. */
1668:RtosV611/Source/tasks.c **** 			vListInsertEnd( ( xList * ) &xSuspendedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListIt
 2845              		.loc 1 1668 0
 2846 002c 164B     		ldr	r3, .L187	@ tmp128,
 2847 002e 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.112_11, pxCurrentTCB
 2848 0030 0433     		adds	r3, r3, #4	@ _12, pxCurrentTCB.112_11,
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 81


 2849 0032 1946     		mov	r1, r3	@, _12
 2850 0034 1548     		ldr	r0, .L187+4	@,
 2851 0036 FFF7FEFF 		bl	vListInsertEnd	@
1669:RtosV611/Source/tasks.c **** 		}
1670:RtosV611/Source/tasks.c **** 		else
1671:RtosV611/Source/tasks.c **** 		{
1672:RtosV611/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event does
1673:RtosV611/Source/tasks.c **** 			not occur.  This may overflow but this doesn't matter. */
1674:RtosV611/Source/tasks.c **** 			xTimeToWake = xTickCount + xTicksToWait;
1675:RtosV611/Source/tasks.c **** 
1676:RtosV611/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
1677:RtosV611/Source/tasks.c **** 
1678:RtosV611/Source/tasks.c **** 			if( xTimeToWake < xTickCount )
1679:RtosV611/Source/tasks.c **** 			{
1680:RtosV611/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow list. */
1681:RtosV611/Source/tasks.c **** 				vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericLi
1682:RtosV611/Source/tasks.c **** 			}
1683:RtosV611/Source/tasks.c **** 			else
1684:RtosV611/Source/tasks.c **** 			{
1685:RtosV611/Source/tasks.c **** 				/* The wake time has not overflowed, so we can use the current block list. */
1686:RtosV611/Source/tasks.c **** 				vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem )
1687:RtosV611/Source/tasks.c **** 			}
1688:RtosV611/Source/tasks.c **** 		}
1689:RtosV611/Source/tasks.c **** 	}
1690:RtosV611/Source/tasks.c **** 	#else
1691:RtosV611/Source/tasks.c **** 	{
1692:RtosV611/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event does
1693:RtosV611/Source/tasks.c **** 			not occur.  This may overflow but this doesn't matter. */
1694:RtosV611/Source/tasks.c **** 			xTimeToWake = xTickCount + xTicksToWait;
1695:RtosV611/Source/tasks.c **** 
1696:RtosV611/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
1697:RtosV611/Source/tasks.c **** 
1698:RtosV611/Source/tasks.c **** 			if( xTimeToWake < xTickCount )
1699:RtosV611/Source/tasks.c **** 			{
1700:RtosV611/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow list. */
1701:RtosV611/Source/tasks.c **** 				vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericLi
1702:RtosV611/Source/tasks.c **** 			}
1703:RtosV611/Source/tasks.c **** 			else
1704:RtosV611/Source/tasks.c **** 			{
1705:RtosV611/Source/tasks.c **** 				/* The wake time has not overflowed, so we can use the current block list. */
1706:RtosV611/Source/tasks.c **** 				vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem )
1707:RtosV611/Source/tasks.c **** 			}
1708:RtosV611/Source/tasks.c **** 	}
1709:RtosV611/Source/tasks.c **** 	#endif
1710:RtosV611/Source/tasks.c **** }
 2852              		.loc 1 1710 0
 2853 003a 20E0     		b	.L186	@
 2854              	.L183:
1674:RtosV611/Source/tasks.c **** 
 2855              		.loc 1 1674 0
 2856 003c 144B     		ldr	r3, .L187+8	@ tmp129,
 2857 003e 1A68     		ldr	r2, [r3]	@ xTickCount.113_14, xTickCount
 2858 0040 3B68     		ldr	r3, [r7]	@ tmp131, xTicksToWait
 2859 0042 1344     		add	r3, r3, r2	@ tmp130, xTickCount.113_14
 2860 0044 FB60     		str	r3, [r7, #12]	@ tmp130, xTimeToWake
1676:RtosV611/Source/tasks.c **** 
 2861              		.loc 1 1676 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 82


 2862 0046 104B     		ldr	r3, .L187	@ tmp132,
 2863 0048 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.114_16, pxCurrentTCB
 2864 004a FA68     		ldr	r2, [r7, #12]	@ tmp133, xTimeToWake
 2865 004c 5A60     		str	r2, [r3, #4]	@ tmp133, pxCurrentTCB.114_16->xGenericListItem.xItemValue
1678:RtosV611/Source/tasks.c **** 			{
 2866              		.loc 1 1678 0
 2867 004e 104B     		ldr	r3, .L187+8	@ tmp134,
 2868 0050 1B68     		ldr	r3, [r3]	@ xTickCount.115_18, xTickCount
 2869 0052 FA68     		ldr	r2, [r7, #12]	@ tmp135, xTimeToWake
 2870 0054 9A42     		cmp	r2, r3	@ tmp135, xTickCount.115_18
 2871 0056 09D2     		bcs	.L185	@,
1681:RtosV611/Source/tasks.c **** 			}
 2872              		.loc 1 1681 0
 2873 0058 0E4B     		ldr	r3, .L187+12	@ tmp136,
 2874 005a 1A68     		ldr	r2, [r3]	@ pxOverflowDelayedTaskList.116_19, pxOverflowDelayedTaskList
 2875 005c 0A4B     		ldr	r3, .L187	@ tmp137,
 2876 005e 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.117_20, pxCurrentTCB
 2877 0060 0433     		adds	r3, r3, #4	@ _21, pxCurrentTCB.117_20,
 2878 0062 1946     		mov	r1, r3	@, _21
 2879 0064 1046     		mov	r0, r2	@, pxOverflowDelayedTaskList.116_19
 2880 0066 FFF7FEFF 		bl	vListInsert	@
 2881              		.loc 1 1710 0
 2882 006a 08E0     		b	.L186	@
 2883              	.L185:
1686:RtosV611/Source/tasks.c **** 			}
 2884              		.loc 1 1686 0
 2885 006c 0A4B     		ldr	r3, .L187+16	@ tmp138,
 2886 006e 1A68     		ldr	r2, [r3]	@ pxDelayedTaskList.118_23, pxDelayedTaskList
 2887 0070 054B     		ldr	r3, .L187	@ tmp139,
 2888 0072 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.119_24, pxCurrentTCB
 2889 0074 0433     		adds	r3, r3, #4	@ _25, pxCurrentTCB.119_24,
 2890 0076 1946     		mov	r1, r3	@, _25
 2891 0078 1046     		mov	r0, r2	@, pxDelayedTaskList.118_23
 2892 007a FFF7FEFF 		bl	vListInsert	@
 2893              	.L186:
 2894              		.loc 1 1710 0
 2895 007e 00BF     		nop
 2896 0080 1037     		adds	r7, r7, #16	@,,
 2897              		.cfi_def_cfa_offset 8
 2898 0082 BD46     		mov	sp, r7	@,
 2899              		.cfi_def_cfa_register 13
 2900              		@ sp needed	@
 2901 0084 80BD     		pop	{r7, pc}	@
 2902              	.L188:
 2903 0086 00BF     		.align	2
 2904              	.L187:
 2905 0088 00000000 		.word	pxCurrentTCB
 2906 008c 00000000 		.word	xSuspendedTaskList
 2907 0090 00000000 		.word	xTickCount
 2908 0094 00000000 		.word	pxOverflowDelayedTaskList
 2909 0098 00000000 		.word	pxDelayedTaskList
 2910              		.cfi_endproc
 2911              	.LFE24:
 2912              		.size	vTaskPlaceOnEventList, .-vTaskPlaceOnEventList
 2913              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 2914              		.align	1
 2915              		.global	xTaskRemoveFromEventList
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 83


 2916              		.syntax unified
 2917              		.thumb
 2918              		.thumb_func
 2919              		.fpu softvfp
 2920              		.type	xTaskRemoveFromEventList, %function
 2921              	xTaskRemoveFromEventList:
 2922              	.LFB25:
1711:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
1712:RtosV611/Source/tasks.c **** 
1713:RtosV611/Source/tasks.c **** signed portBASE_TYPE xTaskRemoveFromEventList( const xList * const pxEventList )
1714:RtosV611/Source/tasks.c **** {
 2923              		.loc 1 1714 0
 2924              		.cfi_startproc
 2925              		@ args = 0, pretend = 0, frame = 16
 2926              		@ frame_needed = 1, uses_anonymous_args = 0
 2927 0000 80B5     		push	{r7, lr}	@
 2928              		.cfi_def_cfa_offset 8
 2929              		.cfi_offset 7, -8
 2930              		.cfi_offset 14, -4
 2931 0002 84B0     		sub	sp, sp, #16	@,,
 2932              		.cfi_def_cfa_offset 24
 2933 0004 00AF     		add	r7, sp, #0	@,,
 2934              		.cfi_def_cfa_register 7
 2935 0006 7860     		str	r0, [r7, #4]	@ pxEventList, pxEventList
1715:RtosV611/Source/tasks.c **** tskTCB *pxUnblockedTCB;
1716:RtosV611/Source/tasks.c **** portBASE_TYPE xReturn;
1717:RtosV611/Source/tasks.c **** 
1718:RtosV611/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH INTERRUPTS DISABLED OR THE
1719:RtosV611/Source/tasks.c **** 	SCHEDULER SUSPENDED.  It can also be called from within an ISR. */
1720:RtosV611/Source/tasks.c **** 
1721:RtosV611/Source/tasks.c **** 	/* The event list is sorted in priority order, so we can remove the
1722:RtosV611/Source/tasks.c **** 	first in the list, remove the TCB from the delayed list, and add
1723:RtosV611/Source/tasks.c **** 	it to the ready list.
1724:RtosV611/Source/tasks.c **** 
1725:RtosV611/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
1726:RtosV611/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
1727:RtosV611/Source/tasks.c **** 	means we can always expect exclusive access to the event list here. */
1728:RtosV611/Source/tasks.c **** 	pxUnblockedTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
 2936              		.loc 1 1728 0
 2937 0008 7B68     		ldr	r3, [r7, #4]	@ tmp128, pxEventList
 2938 000a 1B68     		ldr	r3, [r3]	@ _7, pxEventList_6(D)->uxNumberOfItems
 2939 000c 002B     		cmp	r3, #0	@ _7,
 2940 000e 03D0     		beq	.L190	@,
 2941              		.loc 1 1728 0 is_stmt 0 discriminator 1
 2942 0010 7B68     		ldr	r3, [r7, #4]	@ tmp129, pxEventList
 2943 0012 DB68     		ldr	r3, [r3, #12]	@ _8, pxEventList_6(D)->xListEnd.pxNext
 2944 0014 DB68     		ldr	r3, [r3, #12]	@ iftmp.120_2, _8->pvOwner
 2945 0016 00E0     		b	.L191	@
 2946              	.L190:
 2947              		.loc 1 1728 0 discriminator 2
 2948 0018 0023     		movs	r3, #0	@ iftmp.120_2,
 2949              	.L191:
 2950              		.loc 1 1728 0 discriminator 4
 2951 001a BB60     		str	r3, [r7, #8]	@ iftmp.120_2, pxUnblockedTCB
1729:RtosV611/Source/tasks.c **** 	vListRemove( &( pxUnblockedTCB->xEventListItem ) );
 2952              		.loc 1 1729 0 is_stmt 1 discriminator 4
 2953 001c BB68     		ldr	r3, [r7, #8]	@ tmp130, pxUnblockedTCB
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 84


 2954 001e 1833     		adds	r3, r3, #24	@ _12, tmp130,
 2955 0020 1846     		mov	r0, r3	@, _12
 2956 0022 FFF7FEFF 		bl	vListRemove	@
1730:RtosV611/Source/tasks.c **** 
1731:RtosV611/Source/tasks.c **** 	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
 2957              		.loc 1 1731 0 discriminator 4
 2958 0026 1C4B     		ldr	r3, .L198	@ tmp131,
 2959 0028 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.121_14, uxSchedulerSuspended
 2960 002a 002B     		cmp	r3, #0	@ uxSchedulerSuspended.121_14,
 2961 002c 1DD1     		bne	.L192	@,
1732:RtosV611/Source/tasks.c **** 	{
1733:RtosV611/Source/tasks.c **** 		vListRemove( &( pxUnblockedTCB->xGenericListItem ) );
 2962              		.loc 1 1733 0
 2963 002e BB68     		ldr	r3, [r7, #8]	@ tmp132, pxUnblockedTCB
 2964 0030 0433     		adds	r3, r3, #4	@ _15, tmp132,
 2965 0032 1846     		mov	r0, r3	@, _15
 2966 0034 FFF7FEFF 		bl	vListRemove	@
1734:RtosV611/Source/tasks.c **** 		prvAddTaskToReadyQueue( pxUnblockedTCB );
 2967              		.loc 1 1734 0
 2968 0038 BB68     		ldr	r3, [r7, #8]	@ tmp133, pxUnblockedTCB
 2969 003a DA6A     		ldr	r2, [r3, #44]	@ _17, pxUnblockedTCB_11->uxPriority
 2970 003c 174B     		ldr	r3, .L198+4	@ tmp134,
 2971 003e 1B68     		ldr	r3, [r3]	@ uxTopReadyPriority.122_18, uxTopReadyPriority
 2972 0040 9A42     		cmp	r2, r3	@ _17, uxTopReadyPriority.122_18
 2973 0042 03D9     		bls	.L193	@,
 2974              		.loc 1 1734 0 is_stmt 0 discriminator 1
 2975 0044 BB68     		ldr	r3, [r7, #8]	@ tmp135, pxUnblockedTCB
 2976 0046 DB6A     		ldr	r3, [r3, #44]	@ _19, pxUnblockedTCB_11->uxPriority
 2977 0048 144A     		ldr	r2, .L198+4	@ tmp136,
 2978 004a 1360     		str	r3, [r2]	@ _19, uxTopReadyPriority
 2979              	.L193:
 2980              		.loc 1 1734 0 discriminator 3
 2981 004c BB68     		ldr	r3, [r7, #8]	@ tmp137, pxUnblockedTCB
 2982 004e DA6A     		ldr	r2, [r3, #44]	@ _21, pxUnblockedTCB_11->uxPriority
 2983 0050 1346     		mov	r3, r2	@ tmp138, _21
 2984 0052 9B00     		lsls	r3, r3, #2	@ tmp138, tmp138,
 2985 0054 1344     		add	r3, r3, r2	@ tmp138, _21
 2986 0056 9B00     		lsls	r3, r3, #2	@ tmp139, tmp138,
 2987 0058 114A     		ldr	r2, .L198+8	@ tmp140,
 2988 005a 1A44     		add	r2, r2, r3	@ _22, tmp138
 2989 005c BB68     		ldr	r3, [r7, #8]	@ tmp141, pxUnblockedTCB
 2990 005e 0433     		adds	r3, r3, #4	@ _23, tmp141,
 2991 0060 1946     		mov	r1, r3	@, _23
 2992 0062 1046     		mov	r0, r2	@, _22
 2993 0064 FFF7FEFF 		bl	vListInsertEnd	@
 2994 0068 05E0     		b	.L194	@
 2995              	.L192:
1735:RtosV611/Source/tasks.c **** 	}
1736:RtosV611/Source/tasks.c **** 	else
1737:RtosV611/Source/tasks.c **** 	{
1738:RtosV611/Source/tasks.c **** 		/* We cannot access the delayed or ready lists, so will hold this
1739:RtosV611/Source/tasks.c **** 		task pending until the scheduler is resumed. */
1740:RtosV611/Source/tasks.c **** 		vListInsertEnd( ( xList * ) &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 2996              		.loc 1 1740 0 is_stmt 1
 2997 006a BB68     		ldr	r3, [r7, #8]	@ tmp142, pxUnblockedTCB
 2998 006c 1833     		adds	r3, r3, #24	@ _25, tmp142,
 2999 006e 1946     		mov	r1, r3	@, _25
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 85


 3000 0070 0C48     		ldr	r0, .L198+12	@,
 3001 0072 FFF7FEFF 		bl	vListInsertEnd	@
 3002              	.L194:
1741:RtosV611/Source/tasks.c **** 	}
1742:RtosV611/Source/tasks.c **** 
1743:RtosV611/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority >= pxCurrentTCB->uxPriority )
 3003              		.loc 1 1743 0
 3004 0076 BB68     		ldr	r3, [r7, #8]	@ tmp143, pxUnblockedTCB
 3005 0078 DA6A     		ldr	r2, [r3, #44]	@ _27, pxUnblockedTCB_11->uxPriority
 3006 007a 0B4B     		ldr	r3, .L198+16	@ tmp144,
 3007 007c 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.123_28, pxCurrentTCB
 3008 007e DB6A     		ldr	r3, [r3, #44]	@ _29, pxCurrentTCB.123_28->uxPriority
 3009 0080 9A42     		cmp	r2, r3	@ _27, _29
 3010 0082 02D3     		bcc	.L195	@,
1744:RtosV611/Source/tasks.c **** 	{
1745:RtosV611/Source/tasks.c **** 		/* Return true if the task removed from the event list has
1746:RtosV611/Source/tasks.c **** 		a higher priority than the calling task.  This allows
1747:RtosV611/Source/tasks.c **** 		the calling task to know if it should force a context
1748:RtosV611/Source/tasks.c **** 		switch now. */
1749:RtosV611/Source/tasks.c **** 		xReturn = pdTRUE;
 3011              		.loc 1 1749 0
 3012 0084 0123     		movs	r3, #1	@ tmp145,
 3013 0086 FB60     		str	r3, [r7, #12]	@ tmp145, xReturn
 3014 0088 01E0     		b	.L196	@
 3015              	.L195:
1750:RtosV611/Source/tasks.c **** 	}
1751:RtosV611/Source/tasks.c **** 	else
1752:RtosV611/Source/tasks.c **** 	{
1753:RtosV611/Source/tasks.c **** 		xReturn = pdFALSE;
 3016              		.loc 1 1753 0
 3017 008a 0023     		movs	r3, #0	@ tmp146,
 3018 008c FB60     		str	r3, [r7, #12]	@ tmp146, xReturn
 3019              	.L196:
1754:RtosV611/Source/tasks.c **** 	}
1755:RtosV611/Source/tasks.c **** 
1756:RtosV611/Source/tasks.c **** 	return xReturn;
 3020              		.loc 1 1756 0
 3021 008e FB68     		ldr	r3, [r7, #12]	@ _32, xReturn
1757:RtosV611/Source/tasks.c **** }
 3022              		.loc 1 1757 0
 3023 0090 1846     		mov	r0, r3	@, <retval>
 3024 0092 1037     		adds	r7, r7, #16	@,,
 3025              		.cfi_def_cfa_offset 8
 3026 0094 BD46     		mov	sp, r7	@,
 3027              		.cfi_def_cfa_register 13
 3028              		@ sp needed	@
 3029 0096 80BD     		pop	{r7, pc}	@
 3030              	.L199:
 3031              		.align	2
 3032              	.L198:
 3033 0098 00000000 		.word	uxSchedulerSuspended
 3034 009c 00000000 		.word	uxTopReadyPriority
 3035 00a0 00000000 		.word	pxReadyTasksLists
 3036 00a4 00000000 		.word	xPendingReadyList
 3037 00a8 00000000 		.word	pxCurrentTCB
 3038              		.cfi_endproc
 3039              	.LFE25:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 86


 3040              		.size	xTaskRemoveFromEventList, .-xTaskRemoveFromEventList
 3041              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3042              		.align	1
 3043              		.global	vTaskSetTimeOutState
 3044              		.syntax unified
 3045              		.thumb
 3046              		.thumb_func
 3047              		.fpu softvfp
 3048              		.type	vTaskSetTimeOutState, %function
 3049              	vTaskSetTimeOutState:
 3050              	.LFB26:
1758:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
1759:RtosV611/Source/tasks.c **** 
1760:RtosV611/Source/tasks.c **** void vTaskSetTimeOutState( xTimeOutType * const pxTimeOut )
1761:RtosV611/Source/tasks.c **** {
 3051              		.loc 1 1761 0
 3052              		.cfi_startproc
 3053              		@ args = 0, pretend = 0, frame = 8
 3054              		@ frame_needed = 1, uses_anonymous_args = 0
 3055              		@ link register save eliminated.
 3056 0000 80B4     		push	{r7}	@
 3057              		.cfi_def_cfa_offset 4
 3058              		.cfi_offset 7, -4
 3059 0002 83B0     		sub	sp, sp, #12	@,,
 3060              		.cfi_def_cfa_offset 16
 3061 0004 00AF     		add	r7, sp, #0	@,,
 3062              		.cfi_def_cfa_register 7
 3063 0006 7860     		str	r0, [r7, #4]	@ pxTimeOut, pxTimeOut
1762:RtosV611/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3064              		.loc 1 1762 0
 3065 0008 064B     		ldr	r3, .L201	@ tmp112,
 3066 000a 1A68     		ldr	r2, [r3]	@ xNumOfOverflows.124_2, xNumOfOverflows
 3067 000c 7B68     		ldr	r3, [r7, #4]	@ tmp113, pxTimeOut
 3068 000e 1A60     		str	r2, [r3]	@ xNumOfOverflows.124_2, pxTimeOut_3(D)->xOverflowCount
1763:RtosV611/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3069              		.loc 1 1763 0
 3070 0010 054B     		ldr	r3, .L201+4	@ tmp114,
 3071 0012 1A68     		ldr	r2, [r3]	@ xTickCount.125_5, xTickCount
 3072 0014 7B68     		ldr	r3, [r7, #4]	@ tmp115, pxTimeOut
 3073 0016 5A60     		str	r2, [r3, #4]	@ xTickCount.125_5, pxTimeOut_3(D)->xTimeOnEntering
1764:RtosV611/Source/tasks.c **** }
 3074              		.loc 1 1764 0
 3075 0018 00BF     		nop
 3076 001a 0C37     		adds	r7, r7, #12	@,,
 3077              		.cfi_def_cfa_offset 4
 3078 001c BD46     		mov	sp, r7	@,
 3079              		.cfi_def_cfa_register 13
 3080              		@ sp needed	@
 3081 001e 80BC     		pop	{r7}	@
 3082              		.cfi_restore 7
 3083              		.cfi_def_cfa_offset 0
 3084 0020 7047     		bx	lr	@
 3085              	.L202:
 3086 0022 00BF     		.align	2
 3087              	.L201:
 3088 0024 00000000 		.word	xNumOfOverflows
 3089 0028 00000000 		.word	xTickCount
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 87


 3090              		.cfi_endproc
 3091              	.LFE26:
 3092              		.size	vTaskSetTimeOutState, .-vTaskSetTimeOutState
 3093              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3094              		.align	1
 3095              		.global	xTaskCheckForTimeOut
 3096              		.syntax unified
 3097              		.thumb
 3098              		.thumb_func
 3099              		.fpu softvfp
 3100              		.type	xTaskCheckForTimeOut, %function
 3101              	xTaskCheckForTimeOut:
 3102              	.LFB27:
1765:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
1766:RtosV611/Source/tasks.c **** 
1767:RtosV611/Source/tasks.c **** portBASE_TYPE xTaskCheckForTimeOut( xTimeOutType * const pxTimeOut, portTickType * const pxTicksToW
1768:RtosV611/Source/tasks.c **** {
 3103              		.loc 1 1768 0
 3104              		.cfi_startproc
 3105              		@ args = 0, pretend = 0, frame = 16
 3106              		@ frame_needed = 1, uses_anonymous_args = 0
 3107 0000 80B5     		push	{r7, lr}	@
 3108              		.cfi_def_cfa_offset 8
 3109              		.cfi_offset 7, -8
 3110              		.cfi_offset 14, -4
 3111 0002 84B0     		sub	sp, sp, #16	@,,
 3112              		.cfi_def_cfa_offset 24
 3113 0004 00AF     		add	r7, sp, #0	@,,
 3114              		.cfi_def_cfa_register 7
 3115 0006 7860     		str	r0, [r7, #4]	@ pxTimeOut, pxTimeOut
 3116 0008 3960     		str	r1, [r7]	@ pxTicksToWait, pxTicksToWait
1769:RtosV611/Source/tasks.c **** portBASE_TYPE xReturn;
1770:RtosV611/Source/tasks.c **** 
1771:RtosV611/Source/tasks.c **** 	portENTER_CRITICAL();
 3117              		.loc 1 1771 0
 3118 000a FFF7FEFF 		bl	vPortEnterCritical	@
1772:RtosV611/Source/tasks.c **** 	{
1773:RtosV611/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
1774:RtosV611/Source/tasks.c **** 			/* If INCLUDE_vTaskSuspend is set to 1 and the block time specified is
1775:RtosV611/Source/tasks.c **** 			the maximum block time then the task should block indefinitely, and
1776:RtosV611/Source/tasks.c **** 			therefore never time out. */
1777:RtosV611/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
 3119              		.loc 1 1777 0
 3120 000e 3B68     		ldr	r3, [r7]	@ tmp126, pxTicksToWait
 3121 0010 1B68     		ldr	r3, [r3]	@ _6, *pxTicksToWait_5(D)
 3122 0012 B3F1FF3F 		cmp	r3, #-1	@ _6,
 3123 0016 02D1     		bne	.L204	@,
1778:RtosV611/Source/tasks.c **** 			{
1779:RtosV611/Source/tasks.c **** 				xReturn = pdFALSE;
 3124              		.loc 1 1779 0
 3125 0018 0023     		movs	r3, #0	@ tmp127,
 3126 001a FB60     		str	r3, [r7, #12]	@ tmp127, xReturn
 3127 001c 29E0     		b	.L205	@
 3128              	.L204:
1780:RtosV611/Source/tasks.c **** 			}
1781:RtosV611/Source/tasks.c **** 			else /* We are not blocking indefinitely, perform the checks below. */
1782:RtosV611/Source/tasks.c **** 		#endif
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 88


1783:RtosV611/Source/tasks.c **** 
1784:RtosV611/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( ( portTickType ) xTickCount >= ( portTi
 3129              		.loc 1 1784 0
 3130 001e 7B68     		ldr	r3, [r7, #4]	@ tmp128, pxTimeOut
 3131 0020 1A68     		ldr	r2, [r3]	@ _9, pxTimeOut_8(D)->xOverflowCount
 3132 0022 174B     		ldr	r3, .L209	@ tmp129,
 3133 0024 1B68     		ldr	r3, [r3]	@ xNumOfOverflows.126_10, xNumOfOverflows
 3134 0026 9A42     		cmp	r2, r3	@ _9, xNumOfOverflows.126_10
 3135 0028 08D0     		beq	.L206	@,
 3136              		.loc 1 1784 0 is_stmt 0 discriminator 1
 3137 002a 7B68     		ldr	r3, [r7, #4]	@ tmp130, pxTimeOut
 3138 002c 5A68     		ldr	r2, [r3, #4]	@ _11, pxTimeOut_8(D)->xTimeOnEntering
 3139 002e 154B     		ldr	r3, .L209+4	@ tmp131,
 3140 0030 1B68     		ldr	r3, [r3]	@ xTickCount.127_12, xTickCount
 3141 0032 9A42     		cmp	r2, r3	@ _11, xTickCount.127_12
 3142 0034 02D8     		bhi	.L206	@,
1785:RtosV611/Source/tasks.c **** 		{
1786:RtosV611/Source/tasks.c **** 			/* The tick count is greater than the time at which vTaskSetTimeout()
1787:RtosV611/Source/tasks.c **** 			was called, but has also overflowed since vTaskSetTimeOut() was called.
1788:RtosV611/Source/tasks.c **** 			It must have wrapped all the way around and gone past us again. This
1789:RtosV611/Source/tasks.c **** 			passed since vTaskSetTimeout() was called. */
1790:RtosV611/Source/tasks.c **** 			xReturn = pdTRUE;
 3143              		.loc 1 1790 0 is_stmt 1
 3144 0036 0123     		movs	r3, #1	@ tmp132,
 3145 0038 FB60     		str	r3, [r7, #12]	@ tmp132, xReturn
 3146 003a 1AE0     		b	.L205	@
 3147              	.L206:
1791:RtosV611/Source/tasks.c **** 		}
1792:RtosV611/Source/tasks.c **** 		else if( ( ( portTickType ) ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEn
 3148              		.loc 1 1792 0
 3149 003c 114B     		ldr	r3, .L209+4	@ tmp133,
 3150 003e 1A68     		ldr	r2, [r3]	@ xTickCount.128_14, xTickCount
 3151 0040 7B68     		ldr	r3, [r7, #4]	@ tmp134, pxTimeOut
 3152 0042 5B68     		ldr	r3, [r3, #4]	@ _15, pxTimeOut_8(D)->xTimeOnEntering
 3153 0044 D21A     		subs	r2, r2, r3	@ _16, xTickCount.128_14, _15
 3154 0046 3B68     		ldr	r3, [r7]	@ tmp135, pxTicksToWait
 3155 0048 1B68     		ldr	r3, [r3]	@ _17, *pxTicksToWait_5(D)
 3156 004a 9A42     		cmp	r2, r3	@ _16, _17
 3157 004c 0FD2     		bcs	.L207	@,
1793:RtosV611/Source/tasks.c **** 		{
1794:RtosV611/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
1795:RtosV611/Source/tasks.c **** 			*pxTicksToWait -= ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEntering );
 3158              		.loc 1 1795 0
 3159 004e 0D4B     		ldr	r3, .L209+4	@ tmp136,
 3160 0050 1A68     		ldr	r2, [r3]	@ xTickCount.129_18, xTickCount
 3161 0052 7B68     		ldr	r3, [r7, #4]	@ tmp137, pxTimeOut
 3162 0054 5B68     		ldr	r3, [r3, #4]	@ _19, pxTimeOut_8(D)->xTimeOnEntering
 3163 0056 D31A     		subs	r3, r2, r3	@ _20, xTickCount.129_18, _19
 3164 0058 3A68     		ldr	r2, [r7]	@ tmp138, pxTicksToWait
 3165 005a 1268     		ldr	r2, [r2]	@ _21, *pxTicksToWait_5(D)
 3166 005c D21A     		subs	r2, r2, r3	@ _22, _21, _20
 3167 005e 3B68     		ldr	r3, [r7]	@ tmp139, pxTicksToWait
 3168 0060 1A60     		str	r2, [r3]	@ _22, *pxTicksToWait_5(D)
1796:RtosV611/Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
 3169              		.loc 1 1796 0
 3170 0062 7868     		ldr	r0, [r7, #4]	@, pxTimeOut
 3171 0064 FFF7FEFF 		bl	vTaskSetTimeOutState	@
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 89


1797:RtosV611/Source/tasks.c **** 			xReturn = pdFALSE;
 3172              		.loc 1 1797 0
 3173 0068 0023     		movs	r3, #0	@ tmp140,
 3174 006a FB60     		str	r3, [r7, #12]	@ tmp140, xReturn
 3175 006c 01E0     		b	.L205	@
 3176              	.L207:
1798:RtosV611/Source/tasks.c **** 		}
1799:RtosV611/Source/tasks.c **** 		else
1800:RtosV611/Source/tasks.c **** 		{
1801:RtosV611/Source/tasks.c **** 			xReturn = pdTRUE;
 3177              		.loc 1 1801 0
 3178 006e 0123     		movs	r3, #1	@ tmp141,
 3179 0070 FB60     		str	r3, [r7, #12]	@ tmp141, xReturn
 3180              	.L205:
1802:RtosV611/Source/tasks.c **** 		}
1803:RtosV611/Source/tasks.c **** 	}
1804:RtosV611/Source/tasks.c **** 	portEXIT_CRITICAL();
 3181              		.loc 1 1804 0
 3182 0072 FFF7FEFF 		bl	vPortExitCritical	@
1805:RtosV611/Source/tasks.c **** 
1806:RtosV611/Source/tasks.c **** 	return xReturn;
 3183              		.loc 1 1806 0
 3184 0076 FB68     		ldr	r3, [r7, #12]	@ _28, xReturn
1807:RtosV611/Source/tasks.c **** }
 3185              		.loc 1 1807 0
 3186 0078 1846     		mov	r0, r3	@, <retval>
 3187 007a 1037     		adds	r7, r7, #16	@,,
 3188              		.cfi_def_cfa_offset 8
 3189 007c BD46     		mov	sp, r7	@,
 3190              		.cfi_def_cfa_register 13
 3191              		@ sp needed	@
 3192 007e 80BD     		pop	{r7, pc}	@
 3193              	.L210:
 3194              		.align	2
 3195              	.L209:
 3196 0080 00000000 		.word	xNumOfOverflows
 3197 0084 00000000 		.word	xTickCount
 3198              		.cfi_endproc
 3199              	.LFE27:
 3200              		.size	xTaskCheckForTimeOut, .-xTaskCheckForTimeOut
 3201              		.section	.text.vTaskMissedYield,"ax",%progbits
 3202              		.align	1
 3203              		.global	vTaskMissedYield
 3204              		.syntax unified
 3205              		.thumb
 3206              		.thumb_func
 3207              		.fpu softvfp
 3208              		.type	vTaskMissedYield, %function
 3209              	vTaskMissedYield:
 3210              	.LFB28:
1808:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
1809:RtosV611/Source/tasks.c **** 
1810:RtosV611/Source/tasks.c **** void vTaskMissedYield( void )
1811:RtosV611/Source/tasks.c **** {
 3211              		.loc 1 1811 0
 3212              		.cfi_startproc
 3213              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 90


 3214              		@ frame_needed = 1, uses_anonymous_args = 0
 3215              		@ link register save eliminated.
 3216 0000 80B4     		push	{r7}	@
 3217              		.cfi_def_cfa_offset 4
 3218              		.cfi_offset 7, -4
 3219 0002 00AF     		add	r7, sp, #0	@,,
 3220              		.cfi_def_cfa_register 7
1812:RtosV611/Source/tasks.c **** 	xMissedYield = pdTRUE;
 3221              		.loc 1 1812 0
 3222 0004 034B     		ldr	r3, .L212	@ tmp110,
 3223 0006 0122     		movs	r2, #1	@ tmp111,
 3224 0008 1A60     		str	r2, [r3]	@ tmp111, xMissedYield
1813:RtosV611/Source/tasks.c **** }
 3225              		.loc 1 1813 0
 3226 000a 00BF     		nop
 3227 000c BD46     		mov	sp, r7	@,
 3228              		.cfi_def_cfa_register 13
 3229              		@ sp needed	@
 3230 000e 80BC     		pop	{r7}	@
 3231              		.cfi_restore 7
 3232              		.cfi_def_cfa_offset 0
 3233 0010 7047     		bx	lr	@
 3234              	.L213:
 3235 0012 00BF     		.align	2
 3236              	.L212:
 3237 0014 00000000 		.word	xMissedYield
 3238              		.cfi_endproc
 3239              	.LFE28:
 3240              		.size	vTaskMissedYield, .-vTaskMissedYield
 3241              		.section	.text.prvIdleTask,"ax",%progbits
 3242              		.align	1
 3243              		.syntax unified
 3244              		.thumb
 3245              		.thumb_func
 3246              		.fpu softvfp
 3247              		.type	prvIdleTask, %function
 3248              	prvIdleTask:
 3249              	.LFB29:
1814:RtosV611/Source/tasks.c **** 
1815:RtosV611/Source/tasks.c **** /*
1816:RtosV611/Source/tasks.c ****  * -----------------------------------------------------------
1817:RtosV611/Source/tasks.c ****  * The Idle task.
1818:RtosV611/Source/tasks.c ****  * ----------------------------------------------------------
1819:RtosV611/Source/tasks.c ****  *
1820:RtosV611/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
1821:RtosV611/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
1822:RtosV611/Source/tasks.c ****  *
1823:RtosV611/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
1824:RtosV611/Source/tasks.c ****  *
1825:RtosV611/Source/tasks.c ****  */
1826:RtosV611/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
1827:RtosV611/Source/tasks.c **** {
 3250              		.loc 1 1827 0
 3251              		.cfi_startproc
 3252              		@ args = 0, pretend = 0, frame = 8
 3253              		@ frame_needed = 1, uses_anonymous_args = 0
 3254 0000 80B5     		push	{r7, lr}	@
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 91


 3255              		.cfi_def_cfa_offset 8
 3256              		.cfi_offset 7, -8
 3257              		.cfi_offset 14, -4
 3258 0002 82B0     		sub	sp, sp, #8	@,,
 3259              		.cfi_def_cfa_offset 16
 3260 0004 00AF     		add	r7, sp, #0	@,,
 3261              		.cfi_def_cfa_register 7
 3262 0006 7860     		str	r0, [r7, #4]	@ pvParameters, pvParameters
 3263              	.L216:
1828:RtosV611/Source/tasks.c **** 	/* Stop warnings. */
1829:RtosV611/Source/tasks.c **** 	( void ) pvParameters;
1830:RtosV611/Source/tasks.c **** 
1831:RtosV611/Source/tasks.c **** 	for( ;; )
1832:RtosV611/Source/tasks.c **** 	{
1833:RtosV611/Source/tasks.c **** 		/* See if any tasks have been deleted. */
1834:RtosV611/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
 3264              		.loc 1 1834 0
 3265 0008 FFF7FEFF 		bl	prvCheckTasksWaitingTermination	@
1835:RtosV611/Source/tasks.c **** 
1836:RtosV611/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
1837:RtosV611/Source/tasks.c **** 		{
1838:RtosV611/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
1839:RtosV611/Source/tasks.c **** 			see if any other task has become available.  If we are using
1840:RtosV611/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
1841:RtosV611/Source/tasks.c **** 			will automatically get the processor anyway. */
1842:RtosV611/Source/tasks.c **** 			taskYIELD();
1843:RtosV611/Source/tasks.c **** 		}
1844:RtosV611/Source/tasks.c **** 		#endif
1845:RtosV611/Source/tasks.c **** 
1846:RtosV611/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
1847:RtosV611/Source/tasks.c **** 		{
1848:RtosV611/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
1849:RtosV611/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
1850:RtosV611/Source/tasks.c **** 			to run then the idle task should yield before the end of the
1851:RtosV611/Source/tasks.c **** 			timeslice.
1852:RtosV611/Source/tasks.c **** 
1853:RtosV611/Source/tasks.c **** 			A critical region is not required here as we are just reading from
1854:RtosV611/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
1855:RtosV611/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
1856:RtosV611/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
1857:RtosV611/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( unsigned portBASE_
 3266              		.loc 1 1857 0
 3267 000c 034B     		ldr	r3, .L217	@ tmp111,
 3268 000e 1B68     		ldr	r3, [r3]	@ _5, pxReadyTasksLists[0].uxNumberOfItems
 3269 0010 012B     		cmp	r3, #1	@ _5,
 3270 0012 F9D9     		bls	.L216	@,
1858:RtosV611/Source/tasks.c **** 			{
1859:RtosV611/Source/tasks.c **** 				taskYIELD();
 3271              		.loc 1 1859 0
 3272 0014 FFF7FEFF 		bl	vPortYieldFromISR	@
1834:RtosV611/Source/tasks.c **** 
 3273              		.loc 1 1834 0
 3274 0018 F6E7     		b	.L216	@
 3275              	.L218:
 3276 001a 00BF     		.align	2
 3277              	.L217:
 3278 001c 00000000 		.word	pxReadyTasksLists
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 92


 3279              		.cfi_endproc
 3280              	.LFE29:
 3281              		.size	prvIdleTask, .-prvIdleTask
 3282              		.section	.text.prvInitialiseTCBVariables,"ax",%progbits
 3283              		.align	1
 3284              		.syntax unified
 3285              		.thumb
 3286              		.thumb_func
 3287              		.fpu softvfp
 3288              		.type	prvInitialiseTCBVariables, %function
 3289              	prvInitialiseTCBVariables:
 3290              	.LFB30:
1860:RtosV611/Source/tasks.c **** 			}
1861:RtosV611/Source/tasks.c **** 		}
1862:RtosV611/Source/tasks.c **** 		#endif
1863:RtosV611/Source/tasks.c **** 
1864:RtosV611/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
1865:RtosV611/Source/tasks.c **** 		{
1866:RtosV611/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
1867:RtosV611/Source/tasks.c **** 
1868:RtosV611/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
1869:RtosV611/Source/tasks.c **** 			allows the application designer to add background functionality
1870:RtosV611/Source/tasks.c **** 			without the overhead of a separate task.
1871:RtosV611/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
1872:RtosV611/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
1873:RtosV611/Source/tasks.c **** 			vApplicationIdleHook();
1874:RtosV611/Source/tasks.c **** 		}
1875:RtosV611/Source/tasks.c **** 		#endif
1876:RtosV611/Source/tasks.c **** 	}
1877:RtosV611/Source/tasks.c **** } /*lint !e715 pvParameters is not accessed but all task functions require the same prototype. */
1878:RtosV611/Source/tasks.c **** 
1879:RtosV611/Source/tasks.c **** 
1880:RtosV611/Source/tasks.c **** 
1881:RtosV611/Source/tasks.c **** 
1882:RtosV611/Source/tasks.c **** 
1883:RtosV611/Source/tasks.c **** 
1884:RtosV611/Source/tasks.c **** 
1885:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------
1886:RtosV611/Source/tasks.c ****  * File private functions documented at the top of the file.
1887:RtosV611/Source/tasks.c ****  *----------------------------------------------------------*/
1888:RtosV611/Source/tasks.c **** 
1889:RtosV611/Source/tasks.c **** 
1890:RtosV611/Source/tasks.c **** 
1891:RtosV611/Source/tasks.c **** static void prvInitialiseTCBVariables( tskTCB *pxTCB, const signed char * const pcName, unsigned po
1892:RtosV611/Source/tasks.c **** {
 3291              		.loc 1 1892 0
 3292              		.cfi_startproc
 3293              		@ args = 4, pretend = 0, frame = 16
 3294              		@ frame_needed = 1, uses_anonymous_args = 0
 3295 0000 80B5     		push	{r7, lr}	@
 3296              		.cfi_def_cfa_offset 8
 3297              		.cfi_offset 7, -8
 3298              		.cfi_offset 14, -4
 3299 0002 84B0     		sub	sp, sp, #16	@,,
 3300              		.cfi_def_cfa_offset 24
 3301 0004 00AF     		add	r7, sp, #0	@,,
 3302              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 93


 3303 0006 F860     		str	r0, [r7, #12]	@ pxTCB, pxTCB
 3304 0008 B960     		str	r1, [r7, #8]	@ pcName, pcName
 3305 000a 7A60     		str	r2, [r7, #4]	@ uxPriority, uxPriority
 3306 000c 3B60     		str	r3, [r7]	@ xRegions, xRegions
1893:RtosV611/Source/tasks.c **** 	/* Store the function name in the TCB. */
1894:RtosV611/Source/tasks.c **** 	#if configMAX_TASK_NAME_LEN > 1
1895:RtosV611/Source/tasks.c **** 	{
1896:RtosV611/Source/tasks.c **** 		/* Don't bring strncpy into the build unnecessarily. */
1897:RtosV611/Source/tasks.c **** 		strncpy( ( char * ) pxTCB->pcTaskName, ( const char * ) pcName, ( unsigned short ) configMAX_TASK
 3307              		.loc 1 1897 0
 3308 000e FB68     		ldr	r3, [r7, #12]	@ tmp114, pxTCB
 3309 0010 3433     		adds	r3, r3, #52	@ _3, tmp114,
 3310 0012 1022     		movs	r2, #16	@,
 3311 0014 B968     		ldr	r1, [r7, #8]	@, pcName
 3312 0016 1846     		mov	r0, r3	@, _3
 3313 0018 FFF7FEFF 		bl	strncpy	@
1898:RtosV611/Source/tasks.c **** 	}
1899:RtosV611/Source/tasks.c **** 	#endif
1900:RtosV611/Source/tasks.c **** 	pxTCB->pcTaskName[ ( unsigned short ) configMAX_TASK_NAME_LEN - ( unsigned short ) 1 ] = '\0';
 3314              		.loc 1 1900 0
 3315 001c FB68     		ldr	r3, [r7, #12]	@ tmp115, pxTCB
 3316 001e 0022     		movs	r2, #0	@ tmp116,
 3317 0020 83F84320 		strb	r2, [r3, #67]	@ tmp117, pxTCB_2(D)->pcTaskName
1901:RtosV611/Source/tasks.c **** 
1902:RtosV611/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
1903:RtosV611/Source/tasks.c **** 	remove the privilege bit if one is present. */
1904:RtosV611/Source/tasks.c **** 	if( uxPriority >= configMAX_PRIORITIES )
 3318              		.loc 1 1904 0
 3319 0024 7B68     		ldr	r3, [r7, #4]	@ tmp118, uxPriority
 3320 0026 052B     		cmp	r3, #5	@ tmp118,
 3321 0028 01D9     		bls	.L220	@,
1905:RtosV611/Source/tasks.c **** 	{
1906:RtosV611/Source/tasks.c **** 		uxPriority = configMAX_PRIORITIES - 1;
 3322              		.loc 1 1906 0
 3323 002a 0523     		movs	r3, #5	@ tmp119,
 3324 002c 7B60     		str	r3, [r7, #4]	@ tmp119, uxPriority
 3325              	.L220:
1907:RtosV611/Source/tasks.c **** 	}
1908:RtosV611/Source/tasks.c **** 
1909:RtosV611/Source/tasks.c **** 	pxTCB->uxPriority = uxPriority;
 3326              		.loc 1 1909 0
 3327 002e FB68     		ldr	r3, [r7, #12]	@ tmp120, pxTCB
 3328 0030 7A68     		ldr	r2, [r7, #4]	@ tmp121, uxPriority
 3329 0032 DA62     		str	r2, [r3, #44]	@ tmp121, pxTCB_2(D)->uxPriority
1910:RtosV611/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
1911:RtosV611/Source/tasks.c **** 	{
1912:RtosV611/Source/tasks.c **** 		pxTCB->uxBasePriority = uxPriority;
 3330              		.loc 1 1912 0
 3331 0034 FB68     		ldr	r3, [r7, #12]	@ tmp122, pxTCB
 3332 0036 7A68     		ldr	r2, [r7, #4]	@ tmp123, uxPriority
 3333 0038 9A64     		str	r2, [r3, #72]	@ tmp123, pxTCB_2(D)->uxBasePriority
1913:RtosV611/Source/tasks.c **** 	}
1914:RtosV611/Source/tasks.c **** 	#endif
1915:RtosV611/Source/tasks.c **** 
1916:RtosV611/Source/tasks.c **** 	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
 3334              		.loc 1 1916 0
 3335 003a FB68     		ldr	r3, [r7, #12]	@ tmp124, pxTCB
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 94


 3336 003c 0433     		adds	r3, r3, #4	@ _12, tmp124,
 3337 003e 1846     		mov	r0, r3	@, _12
 3338 0040 FFF7FEFF 		bl	vListInitialiseItem	@
1917:RtosV611/Source/tasks.c **** 	vListInitialiseItem( &( pxTCB->xEventListItem ) );
 3339              		.loc 1 1917 0
 3340 0044 FB68     		ldr	r3, [r7, #12]	@ tmp125, pxTCB
 3341 0046 1833     		adds	r3, r3, #24	@ _14, tmp125,
 3342 0048 1846     		mov	r0, r3	@, _14
 3343 004a FFF7FEFF 		bl	vListInitialiseItem	@
1918:RtosV611/Source/tasks.c **** 
1919:RtosV611/Source/tasks.c **** 	/* Set the pxTCB as a link back from the xListItem.  This is so we can get
1920:RtosV611/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
1921:RtosV611/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxTCB->xGenericListItem ), pxTCB );
 3344              		.loc 1 1921 0
 3345 004e FB68     		ldr	r3, [r7, #12]	@ tmp126, pxTCB
 3346 0050 FA68     		ldr	r2, [r7, #12]	@ tmp127, pxTCB
 3347 0052 1A61     		str	r2, [r3, #16]	@ tmp127, pxTCB_2(D)->xGenericListItem.pvOwner
1922:RtosV611/Source/tasks.c **** 
1923:RtosV611/Source/tasks.c **** 	/* Event lists are always in priority order. */
1924:RtosV611/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) uxPri
 3348              		.loc 1 1924 0
 3349 0054 7B68     		ldr	r3, [r7, #4]	@ tmp128, uxPriority
 3350 0056 C3F10602 		rsb	r2, r3, #6	@ _17, tmp128,
 3351 005a FB68     		ldr	r3, [r7, #12]	@ tmp129, pxTCB
 3352 005c 9A61     		str	r2, [r3, #24]	@ _17, pxTCB_2(D)->xEventListItem.xItemValue
1925:RtosV611/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxTCB->xEventListItem ), pxTCB );
 3353              		.loc 1 1925 0
 3354 005e FB68     		ldr	r3, [r7, #12]	@ tmp130, pxTCB
 3355 0060 FA68     		ldr	r2, [r7, #12]	@ tmp131, pxTCB
 3356 0062 5A62     		str	r2, [r3, #36]	@ tmp131, pxTCB_2(D)->xEventListItem.pvOwner
1926:RtosV611/Source/tasks.c **** 
1927:RtosV611/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
1928:RtosV611/Source/tasks.c **** 	{
1929:RtosV611/Source/tasks.c **** 		pxTCB->uxCriticalNesting = ( unsigned portBASE_TYPE ) 0;
1930:RtosV611/Source/tasks.c **** 	}
1931:RtosV611/Source/tasks.c **** 	#endif
1932:RtosV611/Source/tasks.c **** 
1933:RtosV611/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
1934:RtosV611/Source/tasks.c **** 	{
1935:RtosV611/Source/tasks.c **** 		pxTCB->pxTaskTag = NULL;
1936:RtosV611/Source/tasks.c **** 	}
1937:RtosV611/Source/tasks.c **** 	#endif
1938:RtosV611/Source/tasks.c **** 
1939:RtosV611/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
1940:RtosV611/Source/tasks.c **** 	{
1941:RtosV611/Source/tasks.c **** 		pxTCB->ulRunTimeCounter = 0UL;
 3357              		.loc 1 1941 0
 3358 0064 FB68     		ldr	r3, [r7, #12]	@ tmp132, pxTCB
 3359 0066 0022     		movs	r2, #0	@ tmp133,
 3360 0068 DA64     		str	r2, [r3, #76]	@ tmp133, pxTCB_2(D)->ulRunTimeCounter
1942:RtosV611/Source/tasks.c **** 	}
1943:RtosV611/Source/tasks.c **** 	#endif
1944:RtosV611/Source/tasks.c **** 
1945:RtosV611/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
1946:RtosV611/Source/tasks.c **** 	{
1947:RtosV611/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, pxTCB->pxStack, usStackDepth );
1948:RtosV611/Source/tasks.c **** 	}
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 95


1949:RtosV611/Source/tasks.c **** 	#else
1950:RtosV611/Source/tasks.c **** 	{
1951:RtosV611/Source/tasks.c **** 		( void ) xRegions;
1952:RtosV611/Source/tasks.c **** 		( void ) usStackDepth;
1953:RtosV611/Source/tasks.c **** 	}
1954:RtosV611/Source/tasks.c **** 	#endif
1955:RtosV611/Source/tasks.c **** }
 3361              		.loc 1 1955 0
 3362 006a 00BF     		nop
 3363 006c 1037     		adds	r7, r7, #16	@,,
 3364              		.cfi_def_cfa_offset 8
 3365 006e BD46     		mov	sp, r7	@,
 3366              		.cfi_def_cfa_register 13
 3367              		@ sp needed	@
 3368 0070 80BD     		pop	{r7, pc}	@
 3369              		.cfi_endproc
 3370              	.LFE30:
 3371              		.size	prvInitialiseTCBVariables, .-prvInitialiseTCBVariables
 3372              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 3373              		.align	1
 3374              		.syntax unified
 3375              		.thumb
 3376              		.thumb_func
 3377              		.fpu softvfp
 3378              		.type	prvInitialiseTaskLists, %function
 3379              	prvInitialiseTaskLists:
 3380              	.LFB31:
1956:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
1957:RtosV611/Source/tasks.c **** 
1958:RtosV611/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
1959:RtosV611/Source/tasks.c **** 
1960:RtosV611/Source/tasks.c **** 	void vTaskAllocateMPURegions( xTaskHandle xTaskToModify, const xMemoryRegion * const xRegions )
1961:RtosV611/Source/tasks.c **** 	{
1962:RtosV611/Source/tasks.c **** 	tskTCB *pxTCB;
1963:RtosV611/Source/tasks.c **** 	
1964:RtosV611/Source/tasks.c **** 		if( xTaskToModify == pxCurrentTCB )
1965:RtosV611/Source/tasks.c **** 		{
1966:RtosV611/Source/tasks.c **** 			xTaskToModify = NULL;
1967:RtosV611/Source/tasks.c **** 		}
1968:RtosV611/Source/tasks.c **** 
1969:RtosV611/Source/tasks.c **** 		/* If null is passed in here then we are deleting ourselves. */
1970:RtosV611/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
1971:RtosV611/Source/tasks.c **** 
1972:RtosV611/Source/tasks.c ****         vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
1973:RtosV611/Source/tasks.c **** 	}
1974:RtosV611/Source/tasks.c **** 	/*-----------------------------------------------------------*/
1975:RtosV611/Source/tasks.c **** #endif
1976:RtosV611/Source/tasks.c **** 
1977:RtosV611/Source/tasks.c **** static void prvInitialiseTaskLists( void )
1978:RtosV611/Source/tasks.c **** {
 3381              		.loc 1 1978 0
 3382              		.cfi_startproc
 3383              		@ args = 0, pretend = 0, frame = 8
 3384              		@ frame_needed = 1, uses_anonymous_args = 0
 3385 0000 80B5     		push	{r7, lr}	@
 3386              		.cfi_def_cfa_offset 8
 3387              		.cfi_offset 7, -8
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 96


 3388              		.cfi_offset 14, -4
 3389 0002 82B0     		sub	sp, sp, #8	@,,
 3390              		.cfi_def_cfa_offset 16
 3391 0004 00AF     		add	r7, sp, #0	@,,
 3392              		.cfi_def_cfa_register 7
1979:RtosV611/Source/tasks.c **** unsigned portBASE_TYPE uxPriority;
1980:RtosV611/Source/tasks.c **** 
1981:RtosV611/Source/tasks.c **** 	for( uxPriority = 0; uxPriority < configMAX_PRIORITIES; uxPriority++ )
 3393              		.loc 1 1981 0
 3394 0006 0023     		movs	r3, #0	@ tmp111,
 3395 0008 7B60     		str	r3, [r7, #4]	@ tmp111, uxPriority
 3396 000a 0CE0     		b	.L222	@
 3397              	.L223:
1982:RtosV611/Source/tasks.c **** 	{
1983:RtosV611/Source/tasks.c **** 		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
 3398              		.loc 1 1983 0 discriminator 3
 3399 000c 7A68     		ldr	r2, [r7, #4]	@ tmp112, uxPriority
 3400 000e 1346     		mov	r3, r2	@ tmp113, tmp112
 3401 0010 9B00     		lsls	r3, r3, #2	@ tmp113, tmp113,
 3402 0012 1344     		add	r3, r3, r2	@ tmp113, tmp112
 3403 0014 9B00     		lsls	r3, r3, #2	@ tmp114, tmp113,
 3404 0016 124A     		ldr	r2, .L224	@ tmp115,
 3405 0018 1344     		add	r3, r3, r2	@ _5, tmp115
 3406 001a 1846     		mov	r0, r3	@, _5
 3407 001c FFF7FEFF 		bl	vListInitialise	@
1981:RtosV611/Source/tasks.c **** 	{
 3408              		.loc 1 1981 0 discriminator 3
 3409 0020 7B68     		ldr	r3, [r7, #4]	@ tmp117, uxPriority
 3410 0022 0133     		adds	r3, r3, #1	@ tmp116, tmp117,
 3411 0024 7B60     		str	r3, [r7, #4]	@ tmp116, uxPriority
 3412              	.L222:
1981:RtosV611/Source/tasks.c **** 	{
 3413              		.loc 1 1981 0 is_stmt 0 discriminator 1
 3414 0026 7B68     		ldr	r3, [r7, #4]	@ tmp118, uxPriority
 3415 0028 052B     		cmp	r3, #5	@ tmp118,
 3416 002a EFD9     		bls	.L223	@,
1984:RtosV611/Source/tasks.c **** 	}
1985:RtosV611/Source/tasks.c **** 
1986:RtosV611/Source/tasks.c **** 	vListInitialise( ( xList * ) &xDelayedTaskList1 );
 3417              		.loc 1 1986 0 is_stmt 1
 3418 002c 0D48     		ldr	r0, .L224+4	@,
 3419 002e FFF7FEFF 		bl	vListInitialise	@
1987:RtosV611/Source/tasks.c **** 	vListInitialise( ( xList * ) &xDelayedTaskList2 );
 3420              		.loc 1 1987 0
 3421 0032 0D48     		ldr	r0, .L224+8	@,
 3422 0034 FFF7FEFF 		bl	vListInitialise	@
1988:RtosV611/Source/tasks.c **** 	vListInitialise( ( xList * ) &xPendingReadyList );
 3423              		.loc 1 1988 0
 3424 0038 0C48     		ldr	r0, .L224+12	@,
 3425 003a FFF7FEFF 		bl	vListInitialise	@
1989:RtosV611/Source/tasks.c **** 
1990:RtosV611/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
1991:RtosV611/Source/tasks.c **** 	{
1992:RtosV611/Source/tasks.c **** 		vListInitialise( ( xList * ) &xTasksWaitingTermination );
 3426              		.loc 1 1992 0
 3427 003e 0C48     		ldr	r0, .L224+16	@,
 3428 0040 FFF7FEFF 		bl	vListInitialise	@
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 97


1993:RtosV611/Source/tasks.c **** 	}
1994:RtosV611/Source/tasks.c **** 	#endif
1995:RtosV611/Source/tasks.c **** 
1996:RtosV611/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
1997:RtosV611/Source/tasks.c **** 	{
1998:RtosV611/Source/tasks.c **** 		vListInitialise( ( xList * ) &xSuspendedTaskList );
 3429              		.loc 1 1998 0
 3430 0044 0B48     		ldr	r0, .L224+20	@,
 3431 0046 FFF7FEFF 		bl	vListInitialise	@
1999:RtosV611/Source/tasks.c **** 	}
2000:RtosV611/Source/tasks.c **** 	#endif
2001:RtosV611/Source/tasks.c **** 
2002:RtosV611/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
2003:RtosV611/Source/tasks.c **** 	using list2. */
2004:RtosV611/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
 3432              		.loc 1 2004 0
 3433 004a 0B4B     		ldr	r3, .L224+24	@ tmp119,
 3434 004c 054A     		ldr	r2, .L224+4	@ tmp120,
 3435 004e 1A60     		str	r2, [r3]	@ tmp120, pxDelayedTaskList
2005:RtosV611/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 3436              		.loc 1 2005 0
 3437 0050 0A4B     		ldr	r3, .L224+28	@ tmp121,
 3438 0052 054A     		ldr	r2, .L224+8	@ tmp122,
 3439 0054 1A60     		str	r2, [r3]	@ tmp122, pxOverflowDelayedTaskList
2006:RtosV611/Source/tasks.c **** }
 3440              		.loc 1 2006 0
 3441 0056 00BF     		nop
 3442 0058 0837     		adds	r7, r7, #8	@,,
 3443              		.cfi_def_cfa_offset 8
 3444 005a BD46     		mov	sp, r7	@,
 3445              		.cfi_def_cfa_register 13
 3446              		@ sp needed	@
 3447 005c 80BD     		pop	{r7, pc}	@
 3448              	.L225:
 3449 005e 00BF     		.align	2
 3450              	.L224:
 3451 0060 00000000 		.word	pxReadyTasksLists
 3452 0064 00000000 		.word	xDelayedTaskList1
 3453 0068 00000000 		.word	xDelayedTaskList2
 3454 006c 00000000 		.word	xPendingReadyList
 3455 0070 00000000 		.word	xTasksWaitingTermination
 3456 0074 00000000 		.word	xSuspendedTaskList
 3457 0078 00000000 		.word	pxDelayedTaskList
 3458 007c 00000000 		.word	pxOverflowDelayedTaskList
 3459              		.cfi_endproc
 3460              	.LFE31:
 3461              		.size	prvInitialiseTaskLists, .-prvInitialiseTaskLists
 3462              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 3463              		.align	1
 3464              		.syntax unified
 3465              		.thumb
 3466              		.thumb_func
 3467              		.fpu softvfp
 3468              		.type	prvCheckTasksWaitingTermination, %function
 3469              	prvCheckTasksWaitingTermination:
 3470              	.LFB32:
2007:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 98


2008:RtosV611/Source/tasks.c **** 
2009:RtosV611/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
2010:RtosV611/Source/tasks.c **** {
 3471              		.loc 1 2010 0
 3472              		.cfi_startproc
 3473              		@ args = 0, pretend = 0, frame = 8
 3474              		@ frame_needed = 1, uses_anonymous_args = 0
 3475 0000 80B5     		push	{r7, lr}	@
 3476              		.cfi_def_cfa_offset 8
 3477              		.cfi_offset 7, -8
 3478              		.cfi_offset 14, -4
 3479 0002 82B0     		sub	sp, sp, #8	@,,
 3480              		.cfi_def_cfa_offset 16
 3481 0004 00AF     		add	r7, sp, #0	@,,
 3482              		.cfi_def_cfa_register 7
 3483              	.LBB11:
2011:RtosV611/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
2012:RtosV611/Source/tasks.c **** 	{
2013:RtosV611/Source/tasks.c **** 		portBASE_TYPE xListIsEmpty;
2014:RtosV611/Source/tasks.c **** 
2015:RtosV611/Source/tasks.c **** 		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
2016:RtosV611/Source/tasks.c **** 		too often in the idle task. */
2017:RtosV611/Source/tasks.c **** 		if( uxTasksDeleted > ( unsigned portBASE_TYPE ) 0 )
 3484              		.loc 1 2017 0
 3485 0006 1B4B     		ldr	r3, .L231	@ tmp123,
 3486 0008 1B68     		ldr	r3, [r3]	@ uxTasksDeleted.130_4, uxTasksDeleted
 3487 000a 002B     		cmp	r3, #0	@ uxTasksDeleted.130_4,
 3488 000c 2ED0     		beq	.L230	@,
2018:RtosV611/Source/tasks.c **** 		{
2019:RtosV611/Source/tasks.c **** 			vTaskSuspendAll();
 3489              		.loc 1 2019 0
 3490 000e FFF7FEFF 		bl	vTaskSuspendAll	@
2020:RtosV611/Source/tasks.c **** 				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
 3491              		.loc 1 2020 0
 3492 0012 194B     		ldr	r3, .L231+4	@ tmp124,
 3493 0014 1B68     		ldr	r3, [r3]	@ _6, xTasksWaitingTermination.uxNumberOfItems
 3494 0016 002B     		cmp	r3, #0	@ _6,
 3495 0018 0CBF     		ite	eq
 3496 001a 0123     		moveq	r3, #1	@ tmp126,
 3497 001c 0023     		movne	r3, #0	@ tmp126,
 3498 001e DBB2     		uxtb	r3, r3	@ _7, tmp125
 3499 0020 7B60     		str	r3, [r7, #4]	@ _7, xListIsEmpty
2021:RtosV611/Source/tasks.c **** 			xTaskResumeAll();
 3500              		.loc 1 2021 0
 3501 0022 FFF7FEFF 		bl	xTaskResumeAll	@
2022:RtosV611/Source/tasks.c **** 
2023:RtosV611/Source/tasks.c **** 			if( !xListIsEmpty )
 3502              		.loc 1 2023 0
 3503 0026 7B68     		ldr	r3, [r7, #4]	@ tmp127, xListIsEmpty
 3504 0028 002B     		cmp	r3, #0	@ tmp127,
 3505 002a 1FD1     		bne	.L230	@,
 3506              	.LBB12:
2024:RtosV611/Source/tasks.c **** 			{
2025:RtosV611/Source/tasks.c **** 				tskTCB *pxTCB;
2026:RtosV611/Source/tasks.c **** 
2027:RtosV611/Source/tasks.c **** 				portENTER_CRITICAL();
 3507              		.loc 1 2027 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 99


 3508 002c FFF7FEFF 		bl	vPortEnterCritical	@
2028:RtosV611/Source/tasks.c **** 				{
2029:RtosV611/Source/tasks.c **** 					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( ( ( xList * ) &xTasksWaitingTermination ) );
 3509              		.loc 1 2029 0
 3510 0030 114B     		ldr	r3, .L231+4	@ xTasksWaitingTermination.132_11,
 3511 0032 1B68     		ldr	r3, [r3]	@ _12, MEM[(struct xList *)xTasksWaitingTermination.132_11].uxNumberOfItems
 3512 0034 002B     		cmp	r3, #0	@ _12,
 3513 0036 03D0     		beq	.L228	@,
 3514              		.loc 1 2029 0 is_stmt 0 discriminator 1
 3515 0038 104B     		ldr	r3, .L231+8	@ _13,
 3516 003a 5B68     		ldr	r3, [r3, #4]	@ _14, _13->pxNext
 3517 003c DB68     		ldr	r3, [r3, #12]	@ iftmp.131_1, _14->pvOwner
 3518 003e 00E0     		b	.L229	@
 3519              	.L228:
 3520              		.loc 1 2029 0 discriminator 2
 3521 0040 0023     		movs	r3, #0	@ iftmp.131_1,
 3522              	.L229:
 3523              		.loc 1 2029 0 discriminator 4
 3524 0042 3B60     		str	r3, [r7]	@ iftmp.131_1, pxTCB
2030:RtosV611/Source/tasks.c **** 					vListRemove( &( pxTCB->xGenericListItem ) );
 3525              		.loc 1 2030 0 is_stmt 1 discriminator 4
 3526 0044 3B68     		ldr	r3, [r7]	@ tmp128, pxTCB
 3527 0046 0433     		adds	r3, r3, #4	@ _18, tmp128,
 3528 0048 1846     		mov	r0, r3	@, _18
 3529 004a FFF7FEFF 		bl	vListRemove	@
2031:RtosV611/Source/tasks.c **** 					--uxCurrentNumberOfTasks;
 3530              		.loc 1 2031 0 discriminator 4
 3531 004e 0C4B     		ldr	r3, .L231+12	@ tmp129,
 3532 0050 1B68     		ldr	r3, [r3]	@ uxCurrentNumberOfTasks.133_20, uxCurrentNumberOfTasks
 3533 0052 013B     		subs	r3, r3, #1	@ _21, uxCurrentNumberOfTasks.133_20,
 3534 0054 0A4A     		ldr	r2, .L231+12	@ tmp130,
 3535 0056 1360     		str	r3, [r2]	@ _21, uxCurrentNumberOfTasks
2032:RtosV611/Source/tasks.c **** 					--uxTasksDeleted;
 3536              		.loc 1 2032 0 discriminator 4
 3537 0058 064B     		ldr	r3, .L231	@ tmp131,
 3538 005a 1B68     		ldr	r3, [r3]	@ uxTasksDeleted.134_23, uxTasksDeleted
 3539 005c 013B     		subs	r3, r3, #1	@ _24, uxTasksDeleted.134_23,
 3540 005e 054A     		ldr	r2, .L231	@ tmp132,
 3541 0060 1360     		str	r3, [r2]	@ _24, uxTasksDeleted
2033:RtosV611/Source/tasks.c **** 				}
2034:RtosV611/Source/tasks.c **** 				portEXIT_CRITICAL();
 3542              		.loc 1 2034 0 discriminator 4
 3543 0062 FFF7FEFF 		bl	vPortExitCritical	@
2035:RtosV611/Source/tasks.c **** 
2036:RtosV611/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 3544              		.loc 1 2036 0 discriminator 4
 3545 0066 3868     		ldr	r0, [r7]	@, pxTCB
 3546 0068 FFF7FEFF 		bl	prvDeleteTCB	@
 3547              	.L230:
 3548              	.LBE12:
 3549              	.LBE11:
2037:RtosV611/Source/tasks.c **** 			}
2038:RtosV611/Source/tasks.c **** 		}
2039:RtosV611/Source/tasks.c **** 	}
2040:RtosV611/Source/tasks.c **** 	#endif
2041:RtosV611/Source/tasks.c **** }
 3550              		.loc 1 2041 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 100


 3551 006c 00BF     		nop
 3552 006e 0837     		adds	r7, r7, #8	@,,
 3553              		.cfi_def_cfa_offset 8
 3554 0070 BD46     		mov	sp, r7	@,
 3555              		.cfi_def_cfa_register 13
 3556              		@ sp needed	@
 3557 0072 80BD     		pop	{r7, pc}	@
 3558              	.L232:
 3559              		.align	2
 3560              	.L231:
 3561 0074 00000000 		.word	uxTasksDeleted
 3562 0078 00000000 		.word	xTasksWaitingTermination
 3563 007c 08000000 		.word	xTasksWaitingTermination+8
 3564 0080 00000000 		.word	uxCurrentNumberOfTasks
 3565              		.cfi_endproc
 3566              	.LFE32:
 3567              		.size	prvCheckTasksWaitingTermination, .-prvCheckTasksWaitingTermination
 3568              		.section	.text.prvAllocateTCBAndStack,"ax",%progbits
 3569              		.align	1
 3570              		.syntax unified
 3571              		.thumb
 3572              		.thumb_func
 3573              		.fpu softvfp
 3574              		.type	prvAllocateTCBAndStack, %function
 3575              	prvAllocateTCBAndStack:
 3576              	.LFB33:
2042:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
2043:RtosV611/Source/tasks.c **** 
2044:RtosV611/Source/tasks.c **** static tskTCB *prvAllocateTCBAndStack( unsigned short usStackDepth, portSTACK_TYPE *puxStackBuffer 
2045:RtosV611/Source/tasks.c **** {
 3577              		.loc 1 2045 0
 3578              		.cfi_startproc
 3579              		@ args = 0, pretend = 0, frame = 16
 3580              		@ frame_needed = 1, uses_anonymous_args = 0
 3581 0000 80B5     		push	{r7, lr}	@
 3582              		.cfi_def_cfa_offset 8
 3583              		.cfi_offset 7, -8
 3584              		.cfi_offset 14, -4
 3585 0002 84B0     		sub	sp, sp, #16	@,,
 3586              		.cfi_def_cfa_offset 24
 3587 0004 00AF     		add	r7, sp, #0	@,,
 3588              		.cfi_def_cfa_register 7
 3589 0006 0346     		mov	r3, r0	@ tmp119, usStackDepth
 3590 0008 3960     		str	r1, [r7]	@ puxStackBuffer, puxStackBuffer
 3591 000a FB80     		strh	r3, [r7, #6]	@ movhi	@ tmp120, usStackDepth
2046:RtosV611/Source/tasks.c **** tskTCB *pxNewTCB;
2047:RtosV611/Source/tasks.c **** 
2048:RtosV611/Source/tasks.c **** 	/* Allocate space for the TCB.  Where the memory comes from depends on
2049:RtosV611/Source/tasks.c **** 	the implementation of the port malloc function. */
2050:RtosV611/Source/tasks.c **** 	pxNewTCB = ( tskTCB * ) pvPortMalloc( sizeof( tskTCB ) );
 3592              		.loc 1 2050 0
 3593 000c 5020     		movs	r0, #80	@,
 3594 000e FFF7FEFF 		bl	pvPortMalloc	@
 3595 0012 F860     		str	r0, [r7, #12]	@, pxNewTCB
2051:RtosV611/Source/tasks.c **** 
2052:RtosV611/Source/tasks.c **** 	if( pxNewTCB != NULL )
 3596              		.loc 1 2052 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 101


 3597 0014 FB68     		ldr	r3, [r7, #12]	@ tmp121, pxNewTCB
 3598 0016 002B     		cmp	r3, #0	@ tmp121,
 3599 0018 1ED0     		beq	.L234	@,
2053:RtosV611/Source/tasks.c **** 	{
2054:RtosV611/Source/tasks.c **** 		/* Allocate space for the stack used by the task being created.
2055:RtosV611/Source/tasks.c **** 		The base of the stack memory stored in the TCB so the task can
2056:RtosV611/Source/tasks.c **** 		be deleted later if required. */
2057:RtosV611/Source/tasks.c **** 		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * size
 3600              		.loc 1 2057 0
 3601 001a 3B68     		ldr	r3, [r7]	@ tmp122, puxStackBuffer
 3602 001c 002B     		cmp	r3, #0	@ tmp122,
 3603 001e 06D1     		bne	.L235	@,
 3604              		.loc 1 2057 0 is_stmt 0 discriminator 1
 3605 0020 FB88     		ldrh	r3, [r7, #6]	@ _10, usStackDepth
 3606 0022 9B00     		lsls	r3, r3, #2	@ _11, _10,
 3607 0024 1846     		mov	r0, r3	@, _11
 3608 0026 FFF7FEFF 		bl	pvPortMalloc	@
 3609 002a 0346     		mov	r3, r0	@ iftmp.135_2,
 3610 002c 00E0     		b	.L236	@
 3611              	.L235:
 3612              		.loc 1 2057 0 discriminator 2
 3613 002e 3B68     		ldr	r3, [r7]	@ iftmp.135_2, puxStackBuffer
 3614              	.L236:
 3615              		.loc 1 2057 0 discriminator 4
 3616 0030 FA68     		ldr	r2, [r7, #12]	@ tmp123, pxNewTCB
 3617 0032 1363     		str	r3, [r2, #48]	@ iftmp.135_2, pxNewTCB_7->pxStack
2058:RtosV611/Source/tasks.c **** 
2059:RtosV611/Source/tasks.c **** 		if( pxNewTCB->pxStack == NULL )
 3618              		.loc 1 2059 0 is_stmt 1 discriminator 4
 3619 0034 FB68     		ldr	r3, [r7, #12]	@ tmp124, pxNewTCB
 3620 0036 1B6B     		ldr	r3, [r3, #48]	@ _16, pxNewTCB_7->pxStack
 3621 0038 002B     		cmp	r3, #0	@ _16,
 3622 003a 05D1     		bne	.L237	@,
2060:RtosV611/Source/tasks.c **** 		{
2061:RtosV611/Source/tasks.c **** 			/* Could not allocate the stack.  Delete the allocated TCB. */
2062:RtosV611/Source/tasks.c **** 			vPortFree( pxNewTCB );
 3623              		.loc 1 2062 0
 3624 003c F868     		ldr	r0, [r7, #12]	@, pxNewTCB
 3625 003e FFF7FEFF 		bl	vPortFree	@
2063:RtosV611/Source/tasks.c **** 			pxNewTCB = NULL;
 3626              		.loc 1 2063 0
 3627 0042 0023     		movs	r3, #0	@ tmp125,
 3628 0044 FB60     		str	r3, [r7, #12]	@ tmp125, pxNewTCB
 3629 0046 07E0     		b	.L234	@
 3630              	.L237:
2064:RtosV611/Source/tasks.c **** 		}
2065:RtosV611/Source/tasks.c **** 		else
2066:RtosV611/Source/tasks.c **** 		{
2067:RtosV611/Source/tasks.c **** 			/* Just to help debugging. */
2068:RtosV611/Source/tasks.c **** 			memset( pxNewTCB->pxStack, tskSTACK_FILL_BYTE, usStackDepth * sizeof( portSTACK_TYPE ) );
 3631              		.loc 1 2068 0
 3632 0048 FB68     		ldr	r3, [r7, #12]	@ tmp126, pxNewTCB
 3633 004a 186B     		ldr	r0, [r3, #48]	@ _19, pxNewTCB_7->pxStack
 3634 004c FB88     		ldrh	r3, [r7, #6]	@ _20, usStackDepth
 3635 004e 9B00     		lsls	r3, r3, #2	@ _21, _20,
 3636 0050 1A46     		mov	r2, r3	@, _21
 3637 0052 A521     		movs	r1, #165	@,
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 102


 3638 0054 FFF7FEFF 		bl	memset	@
 3639              	.L234:
2069:RtosV611/Source/tasks.c **** 		}
2070:RtosV611/Source/tasks.c **** 	}
2071:RtosV611/Source/tasks.c **** 
2072:RtosV611/Source/tasks.c **** 	return pxNewTCB;
 3640              		.loc 1 2072 0
 3641 0058 FB68     		ldr	r3, [r7, #12]	@ _23, pxNewTCB
2073:RtosV611/Source/tasks.c **** }
 3642              		.loc 1 2073 0
 3643 005a 1846     		mov	r0, r3	@, <retval>
 3644 005c 1037     		adds	r7, r7, #16	@,,
 3645              		.cfi_def_cfa_offset 8
 3646 005e BD46     		mov	sp, r7	@,
 3647              		.cfi_def_cfa_register 13
 3648              		@ sp needed	@
 3649 0060 80BD     		pop	{r7, pc}	@
 3650              		.cfi_endproc
 3651              	.LFE33:
 3652              		.size	prvAllocateTCBAndStack, .-prvAllocateTCBAndStack
 3653              		.section	.rodata
 3654 000b 00       		.align	2
 3655              	.LC2:
 3656 000c 25730909 		.ascii	"%s\011\011%c\011%u\011%u\011%u\015\012\000"
 3656      25630925 
 3656      75092575 
 3656      0925750D 
 3656      0A00
 3657              		.section	.text.prvListTaskWithinSingleList,"ax",%progbits
 3658              		.align	1
 3659              		.syntax unified
 3660              		.thumb
 3661              		.thumb_func
 3662              		.fpu softvfp
 3663              		.type	prvListTaskWithinSingleList, %function
 3664              	prvListTaskWithinSingleList:
 3665              	.LFB34:
2074:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
2075:RtosV611/Source/tasks.c **** 
2076:RtosV611/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2077:RtosV611/Source/tasks.c **** 
2078:RtosV611/Source/tasks.c **** 	static void prvListTaskWithinSingleList( const signed char *pcWriteBuffer, xList *pxList, signed c
2079:RtosV611/Source/tasks.c **** 	{
 3666              		.loc 1 2079 0
 3667              		.cfi_startproc
 3668              		@ args = 0, pretend = 0, frame = 40
 3669              		@ frame_needed = 1, uses_anonymous_args = 0
 3670 0000 90B5     		push	{r4, r7, lr}	@
 3671              		.cfi_def_cfa_offset 12
 3672              		.cfi_offset 4, -12
 3673              		.cfi_offset 7, -8
 3674              		.cfi_offset 14, -4
 3675 0002 8FB0     		sub	sp, sp, #60	@,,
 3676              		.cfi_def_cfa_offset 72
 3677 0004 04AF     		add	r7, sp, #16	@,,
 3678              		.cfi_def_cfa 7, 56
 3679 0006 F860     		str	r0, [r7, #12]	@ pcWriteBuffer, pcWriteBuffer
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 103


 3680 0008 B960     		str	r1, [r7, #8]	@ pxList, pxList
 3681 000a 1346     		mov	r3, r2	@ tmp130, cStatus
 3682 000c FB71     		strb	r3, [r7, #7]	@ tmp131, cStatus
 3683              	.LBB13:
2080:RtosV611/Source/tasks.c **** 	volatile tskTCB *pxNextTCB, *pxFirstTCB;
2081:RtosV611/Source/tasks.c **** 	unsigned short usStackRemaining;
2082:RtosV611/Source/tasks.c **** 
2083:RtosV611/Source/tasks.c **** 		/* Write the details of all the TCB's in pxList into the buffer. */
2084:RtosV611/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
 3684              		.loc 1 2084 0
 3685 000e BB68     		ldr	r3, [r7, #8]	@ tmp132, pxList
 3686 0010 7B62     		str	r3, [r7, #36]	@ tmp132, pxConstList
 3687 0012 7B6A     		ldr	r3, [r7, #36]	@ tmp133, pxConstList
 3688 0014 5B68     		ldr	r3, [r3, #4]	@ _7, pxConstList_5->pxIndex
 3689 0016 5A68     		ldr	r2, [r3, #4]	@ _8, _7->pxNext
 3690 0018 7B6A     		ldr	r3, [r7, #36]	@ tmp134, pxConstList
 3691 001a 5A60     		str	r2, [r3, #4]	@ _8, pxConstList_5->pxIndex
 3692 001c 7B6A     		ldr	r3, [r7, #36]	@ tmp135, pxConstList
 3693 001e 5A68     		ldr	r2, [r3, #4]	@ _10, pxConstList_5->pxIndex
 3694 0020 7B6A     		ldr	r3, [r7, #36]	@ tmp136, pxConstList
 3695 0022 0833     		adds	r3, r3, #8	@ _11, tmp136,
 3696 0024 9A42     		cmp	r2, r3	@ _10, _11
 3697 0026 04D1     		bne	.L240	@,
 3698              		.loc 1 2084 0 is_stmt 0 discriminator 1
 3699 0028 7B6A     		ldr	r3, [r7, #36]	@ tmp137, pxConstList
 3700 002a 5B68     		ldr	r3, [r3, #4]	@ _12, pxConstList_5->pxIndex
 3701 002c 5A68     		ldr	r2, [r3, #4]	@ _13, _12->pxNext
 3702 002e 7B6A     		ldr	r3, [r7, #36]	@ tmp138, pxConstList
 3703 0030 5A60     		str	r2, [r3, #4]	@ _13, pxConstList_5->pxIndex
 3704              	.L240:
 3705              		.loc 1 2084 0 discriminator 3
 3706 0032 7B6A     		ldr	r3, [r7, #36]	@ tmp139, pxConstList
 3707 0034 5B68     		ldr	r3, [r3, #4]	@ _15, pxConstList_5->pxIndex
 3708 0036 DB68     		ldr	r3, [r3, #12]	@ tmp140, _15->pvOwner
 3709 0038 3B62     		str	r3, [r7, #32]	@ tmp140, pxFirstTCB
 3710              	.L242:
 3711              	.LBE13:
 3712              	.LBB14:
2085:RtosV611/Source/tasks.c **** 		do
2086:RtosV611/Source/tasks.c **** 		{
2087:RtosV611/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
 3713              		.loc 1 2087 0 is_stmt 1
 3714 003a BB68     		ldr	r3, [r7, #8]	@ tmp141, pxList
 3715 003c FB61     		str	r3, [r7, #28]	@ tmp141, pxConstList
 3716 003e FB69     		ldr	r3, [r7, #28]	@ tmp142, pxConstList
 3717 0040 5B68     		ldr	r3, [r3, #4]	@ _18, pxConstList_17->pxIndex
 3718 0042 5A68     		ldr	r2, [r3, #4]	@ _19, _18->pxNext
 3719 0044 FB69     		ldr	r3, [r7, #28]	@ tmp143, pxConstList
 3720 0046 5A60     		str	r2, [r3, #4]	@ _19, pxConstList_17->pxIndex
 3721 0048 FB69     		ldr	r3, [r7, #28]	@ tmp144, pxConstList
 3722 004a 5A68     		ldr	r2, [r3, #4]	@ _21, pxConstList_17->pxIndex
 3723 004c FB69     		ldr	r3, [r7, #28]	@ tmp145, pxConstList
 3724 004e 0833     		adds	r3, r3, #8	@ _22, tmp145,
 3725 0050 9A42     		cmp	r2, r3	@ _21, _22
 3726 0052 04D1     		bne	.L241	@,
 3727              		.loc 1 2087 0 is_stmt 0 discriminator 1
 3728 0054 FB69     		ldr	r3, [r7, #28]	@ tmp146, pxConstList
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 104


 3729 0056 5B68     		ldr	r3, [r3, #4]	@ _23, pxConstList_17->pxIndex
 3730 0058 5A68     		ldr	r2, [r3, #4]	@ _24, _23->pxNext
 3731 005a FB69     		ldr	r3, [r7, #28]	@ tmp147, pxConstList
 3732 005c 5A60     		str	r2, [r3, #4]	@ _24, pxConstList_17->pxIndex
 3733              	.L241:
 3734              		.loc 1 2087 0 discriminator 3
 3735 005e FB69     		ldr	r3, [r7, #28]	@ tmp148, pxConstList
 3736 0060 5B68     		ldr	r3, [r3, #4]	@ _26, pxConstList_17->pxIndex
 3737 0062 DB68     		ldr	r3, [r3, #12]	@ tmp149, _26->pvOwner
 3738 0064 BB61     		str	r3, [r7, #24]	@ tmp149, pxNextTCB
 3739              	.LBE14:
2088:RtosV611/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
2089:RtosV611/Source/tasks.c **** 			{
2090:RtosV611/Source/tasks.c **** 				usStackRemaining = usTaskCheckFreeStackSpace( ( unsigned char * ) pxNextTCB->pxEndOfStack );
2091:RtosV611/Source/tasks.c **** 			}
2092:RtosV611/Source/tasks.c **** 			#else
2093:RtosV611/Source/tasks.c **** 			{
2094:RtosV611/Source/tasks.c **** 				usStackRemaining = usTaskCheckFreeStackSpace( ( unsigned char * ) pxNextTCB->pxStack );
 3740              		.loc 1 2094 0 is_stmt 1 discriminator 3
 3741 0066 BB69     		ldr	r3, [r7, #24]	@ tmp150, pxNextTCB
 3742 0068 1B6B     		ldr	r3, [r3, #48]	@ _28, pxNextTCB_27->pxStack
 3743 006a 1846     		mov	r0, r3	@, _28
 3744 006c FFF7FEFF 		bl	usTaskCheckFreeStackSpace	@
 3745 0070 0346     		mov	r3, r0	@ tmp151,
 3746 0072 FB82     		strh	r3, [r7, #22]	@ movhi	@ tmp152, usStackRemaining
2095:RtosV611/Source/tasks.c **** 			}
2096:RtosV611/Source/tasks.c **** 			#endif			
2097:RtosV611/Source/tasks.c **** 			
2098:RtosV611/Source/tasks.c **** 			sprintf( pcStatusString, ( char * ) "%s\t\t%c\t%u\t%u\t%u\r\n", pxNextTCB->pcTaskName, cStatus, 
 3747              		.loc 1 2098 0 discriminator 3
 3748 0074 BB69     		ldr	r3, [r7, #24]	@ tmp153, pxNextTCB
 3749 0076 03F13400 		add	r0, r3, #52	@ _31, tmp153,
 3750 007a 97F90740 		ldrsb	r4, [r7, #7]	@ _33, cStatus
 3751 007e BB69     		ldr	r3, [r7, #24]	@ tmp154, pxNextTCB
 3752 0080 DB6A     		ldr	r3, [r3, #44]	@ _34, pxNextTCB_27->uxPriority
 3753 0082 FA8A     		ldrh	r2, [r7, #22]	@ _35, usStackRemaining
 3754 0084 B969     		ldr	r1, [r7, #24]	@ tmp155, pxNextTCB
 3755 0086 496C     		ldr	r1, [r1, #68]	@ _36, pxNextTCB_27->uxTCBNumber
 3756 0088 0291     		str	r1, [sp, #8]	@ _36,
 3757 008a 0192     		str	r2, [sp, #4]	@ _35,
 3758 008c 0093     		str	r3, [sp]	@ _34,
 3759 008e 2346     		mov	r3, r4	@, _33
 3760 0090 0246     		mov	r2, r0	@, _31
 3761 0092 0849     		ldr	r1, .L243	@,
 3762 0094 0848     		ldr	r0, .L243+4	@,
 3763 0096 FFF7FEFF 		bl	sprintf	@
2099:RtosV611/Source/tasks.c **** 			strcat( ( char * ) pcWriteBuffer, ( char * ) pcStatusString );
 3764              		.loc 1 2099 0 discriminator 3
 3765 009a 0749     		ldr	r1, .L243+4	@,
 3766 009c F868     		ldr	r0, [r7, #12]	@, pcWriteBuffer
 3767 009e FFF7FEFF 		bl	strcat	@
2100:RtosV611/Source/tasks.c **** 
2101:RtosV611/Source/tasks.c **** 		} while( pxNextTCB != pxFirstTCB );
 3768              		.loc 1 2101 0 discriminator 3
 3769 00a2 BA69     		ldr	r2, [r7, #24]	@ tmp156, pxNextTCB
 3770 00a4 3B6A     		ldr	r3, [r7, #32]	@ tmp157, pxFirstTCB
 3771 00a6 9A42     		cmp	r2, r3	@ tmp156, tmp157
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 105


 3772 00a8 C7D1     		bne	.L242	@,
2102:RtosV611/Source/tasks.c **** 	}
 3773              		.loc 1 2102 0
 3774 00aa 00BF     		nop
 3775 00ac 2C37     		adds	r7, r7, #44	@,,
 3776              		.cfi_def_cfa_offset 12
 3777 00ae BD46     		mov	sp, r7	@,
 3778              		.cfi_def_cfa_register 13
 3779              		@ sp needed	@
 3780 00b0 90BD     		pop	{r4, r7, pc}	@
 3781              	.L244:
 3782 00b2 00BF     		.align	2
 3783              	.L243:
 3784 00b4 0C000000 		.word	.LC2
 3785 00b8 00000000 		.word	pcStatusString
 3786              		.cfi_endproc
 3787              	.LFE34:
 3788              		.size	prvListTaskWithinSingleList, .-prvListTaskWithinSingleList
 3789              		.section	.rodata
 3790 001e 0000     		.align	2
 3791              	.LC3:
 3792 0020 25730909 		.ascii	"%s\011\0110\011\0110%%\015\012\000"
 3792      30090930 
 3792      25250D0A 
 3792      00
 3793 002d 000000   		.align	2
 3794              	.LC4:
 3795 0030 25730909 		.ascii	"%s\011\011%u\011\011%u%%\015\012\000"
 3795      25750909 
 3795      25752525 
 3795      0D0A00
 3796 003f 00       		.align	2
 3797              	.LC5:
 3798 0040 25730909 		.ascii	"%s\011\011%u\011\011<1%%\015\012\000"
 3798      25750909 
 3798      3C312525 
 3798      0D0A00
 3799              		.section	.text.prvGenerateRunTimeStatsForTasksInList,"ax",%progbits
 3800              		.align	1
 3801              		.syntax unified
 3802              		.thumb
 3803              		.thumb_func
 3804              		.fpu softvfp
 3805              		.type	prvGenerateRunTimeStatsForTasksInList, %function
 3806              	prvGenerateRunTimeStatsForTasksInList:
 3807              	.LFB35:
2103:RtosV611/Source/tasks.c **** 
2104:RtosV611/Source/tasks.c **** #endif
2105:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
2106:RtosV611/Source/tasks.c **** 
2107:RtosV611/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
2108:RtosV611/Source/tasks.c **** 
2109:RtosV611/Source/tasks.c **** 	static void prvGenerateRunTimeStatsForTasksInList( const signed char *pcWriteBuffer, xList *pxList
2110:RtosV611/Source/tasks.c **** 	{
 3808              		.loc 1 2110 0
 3809              		.cfi_startproc
 3810              		@ args = 0, pretend = 0, frame = 40
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 106


 3811              		@ frame_needed = 1, uses_anonymous_args = 0
 3812 0000 80B5     		push	{r7, lr}	@
 3813              		.cfi_def_cfa_offset 8
 3814              		.cfi_offset 7, -8
 3815              		.cfi_offset 14, -4
 3816 0002 8CB0     		sub	sp, sp, #48	@,,
 3817              		.cfi_def_cfa_offset 56
 3818 0004 02AF     		add	r7, sp, #8	@,,
 3819              		.cfi_def_cfa 7, 48
 3820 0006 F860     		str	r0, [r7, #12]	@ pcWriteBuffer, pcWriteBuffer
 3821 0008 B960     		str	r1, [r7, #8]	@ pxList, pxList
 3822 000a 7A60     		str	r2, [r7, #4]	@ ulTotalRunTime, ulTotalRunTime
 3823              	.LBB15:
2111:RtosV611/Source/tasks.c **** 	volatile tskTCB *pxNextTCB, *pxFirstTCB;
2112:RtosV611/Source/tasks.c **** 	unsigned long ulStatsAsPercentage;
2113:RtosV611/Source/tasks.c **** 
2114:RtosV611/Source/tasks.c **** 		/* Write the run time stats of all the TCB's in pxList into the buffer. */
2115:RtosV611/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
 3824              		.loc 1 2115 0
 3825 000c BB68     		ldr	r3, [r7, #8]	@ tmp131, pxList
 3826 000e 7B62     		str	r3, [r7, #36]	@ tmp131, pxConstList
 3827 0010 7B6A     		ldr	r3, [r7, #36]	@ tmp132, pxConstList
 3828 0012 5B68     		ldr	r3, [r3, #4]	@ _9, pxConstList_7->pxIndex
 3829 0014 5A68     		ldr	r2, [r3, #4]	@ _10, _9->pxNext
 3830 0016 7B6A     		ldr	r3, [r7, #36]	@ tmp133, pxConstList
 3831 0018 5A60     		str	r2, [r3, #4]	@ _10, pxConstList_7->pxIndex
 3832 001a 7B6A     		ldr	r3, [r7, #36]	@ tmp134, pxConstList
 3833 001c 5A68     		ldr	r2, [r3, #4]	@ _12, pxConstList_7->pxIndex
 3834 001e 7B6A     		ldr	r3, [r7, #36]	@ tmp135, pxConstList
 3835 0020 0833     		adds	r3, r3, #8	@ _13, tmp135,
 3836 0022 9A42     		cmp	r2, r3	@ _12, _13
 3837 0024 04D1     		bne	.L246	@,
 3838              		.loc 1 2115 0 is_stmt 0 discriminator 1
 3839 0026 7B6A     		ldr	r3, [r7, #36]	@ tmp136, pxConstList
 3840 0028 5B68     		ldr	r3, [r3, #4]	@ _14, pxConstList_7->pxIndex
 3841 002a 5A68     		ldr	r2, [r3, #4]	@ _15, _14->pxNext
 3842 002c 7B6A     		ldr	r3, [r7, #36]	@ tmp137, pxConstList
 3843 002e 5A60     		str	r2, [r3, #4]	@ _15, pxConstList_7->pxIndex
 3844              	.L246:
 3845              		.loc 1 2115 0 discriminator 3
 3846 0030 7B6A     		ldr	r3, [r7, #36]	@ tmp138, pxConstList
 3847 0032 5B68     		ldr	r3, [r3, #4]	@ _17, pxConstList_7->pxIndex
 3848 0034 DB68     		ldr	r3, [r3, #12]	@ tmp139, _17->pvOwner
 3849 0036 3B62     		str	r3, [r7, #32]	@ tmp139, pxFirstTCB
 3850              	.L252:
 3851              	.LBE15:
 3852              	.LBB16:
2116:RtosV611/Source/tasks.c **** 		do
2117:RtosV611/Source/tasks.c **** 		{
2118:RtosV611/Source/tasks.c **** 			/* Get next TCB in from the list. */
2119:RtosV611/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
 3853              		.loc 1 2119 0 is_stmt 1
 3854 0038 BB68     		ldr	r3, [r7, #8]	@ tmp140, pxList
 3855 003a FB61     		str	r3, [r7, #28]	@ tmp140, pxConstList
 3856 003c FB69     		ldr	r3, [r7, #28]	@ tmp141, pxConstList
 3857 003e 5B68     		ldr	r3, [r3, #4]	@ _20, pxConstList_19->pxIndex
 3858 0040 5A68     		ldr	r2, [r3, #4]	@ _21, _20->pxNext
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 107


 3859 0042 FB69     		ldr	r3, [r7, #28]	@ tmp142, pxConstList
 3860 0044 5A60     		str	r2, [r3, #4]	@ _21, pxConstList_19->pxIndex
 3861 0046 FB69     		ldr	r3, [r7, #28]	@ tmp143, pxConstList
 3862 0048 5A68     		ldr	r2, [r3, #4]	@ _23, pxConstList_19->pxIndex
 3863 004a FB69     		ldr	r3, [r7, #28]	@ tmp144, pxConstList
 3864 004c 0833     		adds	r3, r3, #8	@ _24, tmp144,
 3865 004e 9A42     		cmp	r2, r3	@ _23, _24
 3866 0050 04D1     		bne	.L247	@,
 3867              		.loc 1 2119 0 is_stmt 0 discriminator 1
 3868 0052 FB69     		ldr	r3, [r7, #28]	@ tmp145, pxConstList
 3869 0054 5B68     		ldr	r3, [r3, #4]	@ _25, pxConstList_19->pxIndex
 3870 0056 5A68     		ldr	r2, [r3, #4]	@ _26, _25->pxNext
 3871 0058 FB69     		ldr	r3, [r7, #28]	@ tmp146, pxConstList
 3872 005a 5A60     		str	r2, [r3, #4]	@ _26, pxConstList_19->pxIndex
 3873              	.L247:
 3874              		.loc 1 2119 0 discriminator 3
 3875 005c FB69     		ldr	r3, [r7, #28]	@ tmp147, pxConstList
 3876 005e 5B68     		ldr	r3, [r3, #4]	@ _28, pxConstList_19->pxIndex
 3877 0060 DB68     		ldr	r3, [r3, #12]	@ tmp148, _28->pvOwner
 3878 0062 BB61     		str	r3, [r7, #24]	@ tmp148, pxNextTCB
 3879              	.LBE16:
2120:RtosV611/Source/tasks.c **** 
2121:RtosV611/Source/tasks.c **** 			/* Divide by zero check. */
2122:RtosV611/Source/tasks.c **** 			if( ulTotalRunTime > 0UL )
 3880              		.loc 1 2122 0 is_stmt 1 discriminator 3
 3881 0064 7B68     		ldr	r3, [r7, #4]	@ tmp149, ulTotalRunTime
 3882 0066 002B     		cmp	r3, #0	@ tmp149,
 3883 0068 2ED0     		beq	.L248	@,
2123:RtosV611/Source/tasks.c **** 			{
2124:RtosV611/Source/tasks.c **** 				/* Has the task run at all? */
2125:RtosV611/Source/tasks.c **** 				if( pxNextTCB->ulRunTimeCounter == 0 )
 3884              		.loc 1 2125 0
 3885 006a BB69     		ldr	r3, [r7, #24]	@ tmp150, pxNextTCB
 3886 006c DB6C     		ldr	r3, [r3, #76]	@ _31, pxNextTCB_29->ulRunTimeCounter
 3887 006e 002B     		cmp	r3, #0	@ _31,
 3888 0070 07D1     		bne	.L249	@,
2126:RtosV611/Source/tasks.c **** 				{
2127:RtosV611/Source/tasks.c **** 					/* The task has used no CPU time at all. */
2128:RtosV611/Source/tasks.c **** 					sprintf( pcStatsString, ( char * ) "%s\t\t0\t\t0%%\r\n", pxNextTCB->pcTaskName );
 3889              		.loc 1 2128 0
 3890 0072 BB69     		ldr	r3, [r7, #24]	@ tmp151, pxNextTCB
 3891 0074 3433     		adds	r3, r3, #52	@ _32, tmp151,
 3892 0076 1A46     		mov	r2, r3	@, _32
 3893 0078 1749     		ldr	r1, .L253	@,
 3894 007a 1848     		ldr	r0, .L253+4	@,
 3895 007c FFF7FEFF 		bl	sprintf	@
 3896 0080 1EE0     		b	.L250	@
 3897              	.L249:
2129:RtosV611/Source/tasks.c **** 				}
2130:RtosV611/Source/tasks.c **** 				else
2131:RtosV611/Source/tasks.c **** 				{
2132:RtosV611/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
2133:RtosV611/Source/tasks.c **** 					This will always be rounded down to the nearest integer. 
2134:RtosV611/Source/tasks.c **** 					ulTotalRunTime has already been divided by 100. */
2135:RtosV611/Source/tasks.c **** 					ulStatsAsPercentage = pxNextTCB->ulRunTimeCounter / ulTotalRunTime;
 3898              		.loc 1 2135 0
 3899 0082 BB69     		ldr	r3, [r7, #24]	@ tmp152, pxNextTCB
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 108


 3900 0084 DA6C     		ldr	r2, [r3, #76]	@ _34, pxNextTCB_29->ulRunTimeCounter
 3901 0086 7B68     		ldr	r3, [r7, #4]	@ tmp155, ulTotalRunTime
 3902 0088 B2FBF3F3 		udiv	r3, r2, r3	@ tmp154, _34, tmp155
 3903 008c 7B61     		str	r3, [r7, #20]	@ tmp154, ulStatsAsPercentage
2136:RtosV611/Source/tasks.c **** 
2137:RtosV611/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
 3904              		.loc 1 2137 0
 3905 008e 7B69     		ldr	r3, [r7, #20]	@ tmp156, ulStatsAsPercentage
 3906 0090 002B     		cmp	r3, #0	@ tmp156,
 3907 0092 0CD0     		beq	.L251	@,
2138:RtosV611/Source/tasks.c **** 					{
2139:RtosV611/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
2140:RtosV611/Source/tasks.c **** 						{
2141:RtosV611/Source/tasks.c **** 							sprintf( pcStatsString, ( char * ) "%s\t\t%lu\t\t%lu%%\r\n", pxNextTCB->pcTaskName, pxNextTC
2142:RtosV611/Source/tasks.c **** 						}
2143:RtosV611/Source/tasks.c **** 						#else
2144:RtosV611/Source/tasks.c **** 						{
2145:RtosV611/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
2146:RtosV611/Source/tasks.c **** 							printf() library can be used. */
2147:RtosV611/Source/tasks.c **** 							sprintf( pcStatsString, ( char * ) "%s\t\t%u\t\t%u%%\r\n", pxNextTCB->pcTaskName, ( unsigned
 3908              		.loc 1 2147 0
 3909 0094 BB69     		ldr	r3, [r7, #24]	@ tmp157, pxNextTCB
 3910 0096 03F13402 		add	r2, r3, #52	@ _36, tmp157,
 3911 009a BB69     		ldr	r3, [r7, #24]	@ tmp158, pxNextTCB
 3912 009c D96C     		ldr	r1, [r3, #76]	@ _37, pxNextTCB_29->ulRunTimeCounter
 3913 009e 7B69     		ldr	r3, [r7, #20]	@ tmp159, ulStatsAsPercentage
 3914 00a0 0093     		str	r3, [sp]	@ tmp159,
 3915 00a2 0B46     		mov	r3, r1	@, _37
 3916 00a4 0E49     		ldr	r1, .L253+8	@,
 3917 00a6 0D48     		ldr	r0, .L253+4	@,
 3918 00a8 FFF7FEFF 		bl	sprintf	@
 3919 00ac 08E0     		b	.L250	@
 3920              	.L251:
2148:RtosV611/Source/tasks.c **** 						}
2149:RtosV611/Source/tasks.c **** 						#endif
2150:RtosV611/Source/tasks.c **** 					}
2151:RtosV611/Source/tasks.c **** 					else
2152:RtosV611/Source/tasks.c **** 					{
2153:RtosV611/Source/tasks.c **** 						/* If the percentage is zero here then the task has
2154:RtosV611/Source/tasks.c **** 						consumed less than 1% of the total run time. */
2155:RtosV611/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
2156:RtosV611/Source/tasks.c **** 						{
2157:RtosV611/Source/tasks.c **** 							sprintf( pcStatsString, ( char * ) "%s\t\t%lu\t\t<1%%\r\n", pxNextTCB->pcTaskName, pxNextTCB
2158:RtosV611/Source/tasks.c **** 						}
2159:RtosV611/Source/tasks.c **** 						#else
2160:RtosV611/Source/tasks.c **** 						{
2161:RtosV611/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
2162:RtosV611/Source/tasks.c **** 							printf() library can be used. */
2163:RtosV611/Source/tasks.c **** 							sprintf( pcStatsString, ( char * ) "%s\t\t%u\t\t<1%%\r\n", pxNextTCB->pcTaskName, ( unsigned
 3921              		.loc 1 2163 0
 3922 00ae BB69     		ldr	r3, [r7, #24]	@ tmp160, pxNextTCB
 3923 00b0 03F13402 		add	r2, r3, #52	@ _39, tmp160,
 3924 00b4 BB69     		ldr	r3, [r7, #24]	@ tmp161, pxNextTCB
 3925 00b6 DB6C     		ldr	r3, [r3, #76]	@ _40, pxNextTCB_29->ulRunTimeCounter
 3926 00b8 0A49     		ldr	r1, .L253+12	@,
 3927 00ba 0848     		ldr	r0, .L253+4	@,
 3928 00bc FFF7FEFF 		bl	sprintf	@
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 109


 3929              	.L250:
2164:RtosV611/Source/tasks.c **** 						}
2165:RtosV611/Source/tasks.c **** 						#endif
2166:RtosV611/Source/tasks.c **** 					}
2167:RtosV611/Source/tasks.c **** 				}
2168:RtosV611/Source/tasks.c **** 
2169:RtosV611/Source/tasks.c **** 				strcat( ( char * ) pcWriteBuffer, ( char * ) pcStatsString );
 3930              		.loc 1 2169 0
 3931 00c0 0649     		ldr	r1, .L253+4	@,
 3932 00c2 F868     		ldr	r0, [r7, #12]	@, pcWriteBuffer
 3933 00c4 FFF7FEFF 		bl	strcat	@
 3934              	.L248:
2170:RtosV611/Source/tasks.c **** 			}
2171:RtosV611/Source/tasks.c **** 
2172:RtosV611/Source/tasks.c **** 		} while( pxNextTCB != pxFirstTCB );
 3935              		.loc 1 2172 0
 3936 00c8 BA69     		ldr	r2, [r7, #24]	@ tmp162, pxNextTCB
 3937 00ca 3B6A     		ldr	r3, [r7, #32]	@ tmp163, pxFirstTCB
 3938 00cc 9A42     		cmp	r2, r3	@ tmp162, tmp163
 3939 00ce B3D1     		bne	.L252	@,
2173:RtosV611/Source/tasks.c **** 	}
 3940              		.loc 1 2173 0
 3941 00d0 00BF     		nop
 3942 00d2 2837     		adds	r7, r7, #40	@,,
 3943              		.cfi_def_cfa_offset 8
 3944 00d4 BD46     		mov	sp, r7	@,
 3945              		.cfi_def_cfa_register 13
 3946              		@ sp needed	@
 3947 00d6 80BD     		pop	{r7, pc}	@
 3948              	.L254:
 3949              		.align	2
 3950              	.L253:
 3951 00d8 20000000 		.word	.LC3
 3952 00dc 00000000 		.word	pcStatsString
 3953 00e0 30000000 		.word	.LC4
 3954 00e4 40000000 		.word	.LC5
 3955              		.cfi_endproc
 3956              	.LFE35:
 3957              		.size	prvGenerateRunTimeStatsForTasksInList, .-prvGenerateRunTimeStatsForTasksInList
 3958              		.section	.text.usTaskCheckFreeStackSpace,"ax",%progbits
 3959              		.align	1
 3960              		.syntax unified
 3961              		.thumb
 3962              		.thumb_func
 3963              		.fpu softvfp
 3964              		.type	usTaskCheckFreeStackSpace, %function
 3965              	usTaskCheckFreeStackSpace:
 3966              	.LFB36:
2174:RtosV611/Source/tasks.c **** 
2175:RtosV611/Source/tasks.c **** #endif
2176:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
2177:RtosV611/Source/tasks.c **** 
2178:RtosV611/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
2179:RtosV611/Source/tasks.c **** 
2180:RtosV611/Source/tasks.c **** 	static unsigned short usTaskCheckFreeStackSpace( const unsigned char * pucStackByte )
2181:RtosV611/Source/tasks.c **** 	{
 3967              		.loc 1 2181 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 110


 3968              		.cfi_startproc
 3969              		@ args = 0, pretend = 0, frame = 8
 3970              		@ frame_needed = 1, uses_anonymous_args = 0
 3971              		@ link register save eliminated.
 3972 0000 90B4     		push	{r4, r7}	@
 3973              		.cfi_def_cfa_offset 8
 3974              		.cfi_offset 4, -8
 3975              		.cfi_offset 7, -4
 3976 0002 82B0     		sub	sp, sp, #8	@,,
 3977              		.cfi_def_cfa_offset 16
 3978 0004 00AF     		add	r7, sp, #0	@,,
 3979              		.cfi_def_cfa_register 7
 3980 0006 7860     		str	r0, [r7, #4]	@ pucStackByte, pucStackByte
2182:RtosV611/Source/tasks.c **** 	register unsigned short usCount = 0;
 3981              		.loc 1 2182 0
 3982 0008 0024     		movs	r4, #0	@ usCount,
2183:RtosV611/Source/tasks.c **** 
2184:RtosV611/Source/tasks.c **** 		while( *pucStackByte == tskSTACK_FILL_BYTE )
 3983              		.loc 1 2184 0
 3984 000a 05E0     		b	.L256	@
 3985              	.L257:
2185:RtosV611/Source/tasks.c **** 		{
2186:RtosV611/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
 3986              		.loc 1 2186 0
 3987 000c 7B68     		ldr	r3, [r7, #4]	@ tmp116, pucStackByte
 3988 000e 0133     		adds	r3, r3, #1	@ tmp115, tmp116,
 3989 0010 7B60     		str	r3, [r7, #4]	@ tmp115, pucStackByte
2187:RtosV611/Source/tasks.c **** 			usCount++;
 3990              		.loc 1 2187 0
 3991 0012 2346     		mov	r3, r4	@ usCount.136_8, usCount
 3992 0014 0133     		adds	r3, r3, #1	@ tmp117, usCount.136_8,
 3993 0016 9CB2     		uxth	r4, r3	@ usCount, tmp117
 3994              	.L256:
2184:RtosV611/Source/tasks.c **** 		{
 3995              		.loc 1 2184 0
 3996 0018 7B68     		ldr	r3, [r7, #4]	@ tmp118, pucStackByte
 3997 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2	@ _6, *pucStackByte_1
 3998 001c A52B     		cmp	r3, #165	@ _6,
 3999 001e F5D0     		beq	.L257	@,
2188:RtosV611/Source/tasks.c **** 		}
2189:RtosV611/Source/tasks.c **** 
2190:RtosV611/Source/tasks.c **** 		usCount /= sizeof( portSTACK_TYPE );
 4000              		.loc 1 2190 0
 4001 0020 A308     		lsrs	r3, r4, #2	@ tmp119, usCount,
 4002 0022 9CB2     		uxth	r4, r3	@ usCount, tmp119
2191:RtosV611/Source/tasks.c **** 
2192:RtosV611/Source/tasks.c **** 		return usCount;
 4003              		.loc 1 2192 0
 4004 0024 2346     		mov	r3, r4	@ _11, usCount
2193:RtosV611/Source/tasks.c **** 	}
 4005              		.loc 1 2193 0
 4006 0026 1846     		mov	r0, r3	@, <retval>
 4007 0028 0837     		adds	r7, r7, #8	@,,
 4008              		.cfi_def_cfa_offset 8
 4009 002a BD46     		mov	sp, r7	@,
 4010              		.cfi_def_cfa_register 13
 4011              		@ sp needed	@
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 111


 4012 002c 90BC     		pop	{r4, r7}	@
 4013              		.cfi_restore 7
 4014              		.cfi_restore 4
 4015              		.cfi_def_cfa_offset 0
 4016 002e 7047     		bx	lr	@
 4017              		.cfi_endproc
 4018              	.LFE36:
 4019              		.size	usTaskCheckFreeStackSpace, .-usTaskCheckFreeStackSpace
 4020              		.section	.text.uxTaskGetStackHighWaterMark,"ax",%progbits
 4021              		.align	1
 4022              		.global	uxTaskGetStackHighWaterMark
 4023              		.syntax unified
 4024              		.thumb
 4025              		.thumb_func
 4026              		.fpu softvfp
 4027              		.type	uxTaskGetStackHighWaterMark, %function
 4028              	uxTaskGetStackHighWaterMark:
 4029              	.LFB37:
2194:RtosV611/Source/tasks.c **** 
2195:RtosV611/Source/tasks.c **** #endif
2196:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
2197:RtosV611/Source/tasks.c **** 
2198:RtosV611/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
2199:RtosV611/Source/tasks.c **** 
2200:RtosV611/Source/tasks.c **** 	unsigned portBASE_TYPE uxTaskGetStackHighWaterMark( xTaskHandle xTask )
2201:RtosV611/Source/tasks.c **** 	{
 4030              		.loc 1 2201 0
 4031              		.cfi_startproc
 4032              		@ args = 0, pretend = 0, frame = 24
 4033              		@ frame_needed = 1, uses_anonymous_args = 0
 4034 0000 80B5     		push	{r7, lr}	@
 4035              		.cfi_def_cfa_offset 8
 4036              		.cfi_offset 7, -8
 4037              		.cfi_offset 14, -4
 4038 0002 86B0     		sub	sp, sp, #24	@,,
 4039              		.cfi_def_cfa_offset 32
 4040 0004 00AF     		add	r7, sp, #0	@,,
 4041              		.cfi_def_cfa_register 7
 4042 0006 7860     		str	r0, [r7, #4]	@ xTask, xTask
2202:RtosV611/Source/tasks.c **** 	tskTCB *pxTCB;
2203:RtosV611/Source/tasks.c **** 	unsigned char *pcEndOfStack;
2204:RtosV611/Source/tasks.c **** 	unsigned portBASE_TYPE uxReturn;
2205:RtosV611/Source/tasks.c **** 
2206:RtosV611/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
 4043              		.loc 1 2206 0
 4044 0008 7B68     		ldr	r3, [r7, #4]	@ tmp114, xTask
 4045 000a 002B     		cmp	r3, #0	@ tmp114,
 4046 000c 02D1     		bne	.L260	@,
 4047              		.loc 1 2206 0 is_stmt 0 discriminator 1
 4048 000e 094B     		ldr	r3, .L263	@ tmp115,
 4049 0010 1B68     		ldr	r3, [r3]	@ iftmp.137_1, pxCurrentTCB
 4050 0012 00E0     		b	.L261	@
 4051              	.L260:
 4052              		.loc 1 2206 0 discriminator 2
 4053 0014 7B68     		ldr	r3, [r7, #4]	@ iftmp.137_1, xTask
 4054              	.L261:
 4055              		.loc 1 2206 0 discriminator 4
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 112


 4056 0016 7B61     		str	r3, [r7, #20]	@ iftmp.137_1, pxTCB
2207:RtosV611/Source/tasks.c **** 
2208:RtosV611/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
2209:RtosV611/Source/tasks.c **** 		{
2210:RtosV611/Source/tasks.c **** 			pcEndOfStack = ( unsigned char * ) pxTCB->pxStack;
 4057              		.loc 1 2210 0 is_stmt 1 discriminator 4
 4058 0018 7B69     		ldr	r3, [r7, #20]	@ tmp116, pxTCB
 4059 001a 1B6B     		ldr	r3, [r3, #48]	@ tmp117, pxTCB_6->pxStack
 4060 001c 3B61     		str	r3, [r7, #16]	@ tmp117, pcEndOfStack
2211:RtosV611/Source/tasks.c **** 		}
2212:RtosV611/Source/tasks.c **** 		#else
2213:RtosV611/Source/tasks.c **** 		{
2214:RtosV611/Source/tasks.c **** 			pcEndOfStack = ( unsigned char * ) pxTCB->pxEndOfStack;
2215:RtosV611/Source/tasks.c **** 		}
2216:RtosV611/Source/tasks.c **** 		#endif
2217:RtosV611/Source/tasks.c **** 
2218:RtosV611/Source/tasks.c **** 		uxReturn = ( unsigned portBASE_TYPE ) usTaskCheckFreeStackSpace( pcEndOfStack );
 4061              		.loc 1 2218 0 discriminator 4
 4062 001e 3869     		ldr	r0, [r7, #16]	@, pcEndOfStack
 4063 0020 FFF7FEFF 		bl	usTaskCheckFreeStackSpace	@
 4064 0024 0346     		mov	r3, r0	@ tmp118,
 4065 0026 FB60     		str	r3, [r7, #12]	@ _9, uxReturn
2219:RtosV611/Source/tasks.c **** 
2220:RtosV611/Source/tasks.c **** 		return uxReturn;
 4066              		.loc 1 2220 0 discriminator 4
 4067 0028 FB68     		ldr	r3, [r7, #12]	@ _11, uxReturn
2221:RtosV611/Source/tasks.c **** 	}
 4068              		.loc 1 2221 0 discriminator 4
 4069 002a 1846     		mov	r0, r3	@, <retval>
 4070 002c 1837     		adds	r7, r7, #24	@,,
 4071              		.cfi_def_cfa_offset 8
 4072 002e BD46     		mov	sp, r7	@,
 4073              		.cfi_def_cfa_register 13
 4074              		@ sp needed	@
 4075 0030 80BD     		pop	{r7, pc}	@
 4076              	.L264:
 4077 0032 00BF     		.align	2
 4078              	.L263:
 4079 0034 00000000 		.word	pxCurrentTCB
 4080              		.cfi_endproc
 4081              	.LFE37:
 4082              		.size	uxTaskGetStackHighWaterMark, .-uxTaskGetStackHighWaterMark
 4083              		.section	.text.prvDeleteTCB,"ax",%progbits
 4084              		.align	1
 4085              		.syntax unified
 4086              		.thumb
 4087              		.thumb_func
 4088              		.fpu softvfp
 4089              		.type	prvDeleteTCB, %function
 4090              	prvDeleteTCB:
 4091              	.LFB38:
2222:RtosV611/Source/tasks.c **** 
2223:RtosV611/Source/tasks.c **** #endif
2224:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
2225:RtosV611/Source/tasks.c **** 
2226:RtosV611/Source/tasks.c **** #if ( ( INCLUDE_vTaskDelete == 1 ) || ( INCLUDE_vTaskCleanUpResources == 1 ) )
2227:RtosV611/Source/tasks.c **** 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 113


2228:RtosV611/Source/tasks.c **** 	static void prvDeleteTCB( tskTCB *pxTCB )
2229:RtosV611/Source/tasks.c **** 	{
 4092              		.loc 1 2229 0
 4093              		.cfi_startproc
 4094              		@ args = 0, pretend = 0, frame = 8
 4095              		@ frame_needed = 1, uses_anonymous_args = 0
 4096 0000 80B5     		push	{r7, lr}	@
 4097              		.cfi_def_cfa_offset 8
 4098              		.cfi_offset 7, -8
 4099              		.cfi_offset 14, -4
 4100 0002 82B0     		sub	sp, sp, #8	@,,
 4101              		.cfi_def_cfa_offset 16
 4102 0004 00AF     		add	r7, sp, #0	@,,
 4103              		.cfi_def_cfa_register 7
 4104 0006 7860     		str	r0, [r7, #4]	@ pxTCB, pxTCB
2230:RtosV611/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up to
2231:RtosV611/Source/tasks.c **** 		the task to free any memory allocated at the application level. */
2232:RtosV611/Source/tasks.c **** 		vPortFreeAligned( pxTCB->pxStack );
 4105              		.loc 1 2232 0
 4106 0008 7B68     		ldr	r3, [r7, #4]	@ tmp111, pxTCB
 4107 000a 1B6B     		ldr	r3, [r3, #48]	@ _3, pxTCB_2(D)->pxStack
 4108 000c 1846     		mov	r0, r3	@, _3
 4109 000e FFF7FEFF 		bl	vPortFree	@
2233:RtosV611/Source/tasks.c **** 		vPortFree( pxTCB );
 4110              		.loc 1 2233 0
 4111 0012 7868     		ldr	r0, [r7, #4]	@, pxTCB
 4112 0014 FFF7FEFF 		bl	vPortFree	@
2234:RtosV611/Source/tasks.c **** 	}
 4113              		.loc 1 2234 0
 4114 0018 00BF     		nop
 4115 001a 0837     		adds	r7, r7, #8	@,,
 4116              		.cfi_def_cfa_offset 8
 4117 001c BD46     		mov	sp, r7	@,
 4118              		.cfi_def_cfa_register 13
 4119              		@ sp needed	@
 4120 001e 80BD     		pop	{r7, pc}	@
 4121              		.cfi_endproc
 4122              	.LFE38:
 4123              		.size	prvDeleteTCB, .-prvDeleteTCB
 4124              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4125              		.align	1
 4126              		.global	xTaskGetCurrentTaskHandle
 4127              		.syntax unified
 4128              		.thumb
 4129              		.thumb_func
 4130              		.fpu softvfp
 4131              		.type	xTaskGetCurrentTaskHandle, %function
 4132              	xTaskGetCurrentTaskHandle:
 4133              	.LFB39:
2235:RtosV611/Source/tasks.c **** 
2236:RtosV611/Source/tasks.c **** #endif
2237:RtosV611/Source/tasks.c **** 
2238:RtosV611/Source/tasks.c **** 
2239:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
2240:RtosV611/Source/tasks.c **** 
2241:RtosV611/Source/tasks.c **** #if ( INCLUDE_xTaskGetCurrentTaskHandle == 1 )
2242:RtosV611/Source/tasks.c **** 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 114


2243:RtosV611/Source/tasks.c **** 	xTaskHandle xTaskGetCurrentTaskHandle( void )
2244:RtosV611/Source/tasks.c **** 	{
 4134              		.loc 1 2244 0
 4135              		.cfi_startproc
 4136              		@ args = 0, pretend = 0, frame = 8
 4137              		@ frame_needed = 1, uses_anonymous_args = 0
 4138              		@ link register save eliminated.
 4139 0000 80B4     		push	{r7}	@
 4140              		.cfi_def_cfa_offset 4
 4141              		.cfi_offset 7, -4
 4142 0002 83B0     		sub	sp, sp, #12	@,,
 4143              		.cfi_def_cfa_offset 16
 4144 0004 00AF     		add	r7, sp, #0	@,,
 4145              		.cfi_def_cfa_register 7
2245:RtosV611/Source/tasks.c **** 	xTaskHandle xReturn;
2246:RtosV611/Source/tasks.c **** 
2247:RtosV611/Source/tasks.c **** 		/* A critical section is not required as this is not called from
2248:RtosV611/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
2249:RtosV611/Source/tasks.c **** 		individual execution thread. */
2250:RtosV611/Source/tasks.c **** 		xReturn = pxCurrentTCB;
 4146              		.loc 1 2250 0
 4147 0006 044B     		ldr	r3, .L268	@ tmp112,
 4148 0008 1B68     		ldr	r3, [r3]	@ tmp113, pxCurrentTCB
 4149 000a 7B60     		str	r3, [r7, #4]	@ tmp113, xReturn
2251:RtosV611/Source/tasks.c **** 
2252:RtosV611/Source/tasks.c **** 		return xReturn;
 4150              		.loc 1 2252 0
 4151 000c 7B68     		ldr	r3, [r7, #4]	@ _3, xReturn
2253:RtosV611/Source/tasks.c **** 	}
 4152              		.loc 1 2253 0
 4153 000e 1846     		mov	r0, r3	@, <retval>
 4154 0010 0C37     		adds	r7, r7, #12	@,,
 4155              		.cfi_def_cfa_offset 4
 4156 0012 BD46     		mov	sp, r7	@,
 4157              		.cfi_def_cfa_register 13
 4158              		@ sp needed	@
 4159 0014 80BC     		pop	{r7}	@
 4160              		.cfi_restore 7
 4161              		.cfi_def_cfa_offset 0
 4162 0016 7047     		bx	lr	@
 4163              	.L269:
 4164              		.align	2
 4165              	.L268:
 4166 0018 00000000 		.word	pxCurrentTCB
 4167              		.cfi_endproc
 4168              	.LFE39:
 4169              		.size	xTaskGetCurrentTaskHandle, .-xTaskGetCurrentTaskHandle
 4170              		.section	.text.vTaskPriorityInherit,"ax",%progbits
 4171              		.align	1
 4172              		.global	vTaskPriorityInherit
 4173              		.syntax unified
 4174              		.thumb
 4175              		.thumb_func
 4176              		.fpu softvfp
 4177              		.type	vTaskPriorityInherit, %function
 4178              	vTaskPriorityInherit:
 4179              	.LFB40:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 115


2254:RtosV611/Source/tasks.c **** 
2255:RtosV611/Source/tasks.c **** #endif
2256:RtosV611/Source/tasks.c **** 
2257:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
2258:RtosV611/Source/tasks.c **** 
2259:RtosV611/Source/tasks.c **** #if ( INCLUDE_xTaskGetSchedulerState == 1 )
2260:RtosV611/Source/tasks.c **** 
2261:RtosV611/Source/tasks.c **** 	portBASE_TYPE xTaskGetSchedulerState( void )
2262:RtosV611/Source/tasks.c **** 	{
2263:RtosV611/Source/tasks.c **** 	portBASE_TYPE xReturn;
2264:RtosV611/Source/tasks.c **** 
2265:RtosV611/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
2266:RtosV611/Source/tasks.c **** 		{
2267:RtosV611/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
2268:RtosV611/Source/tasks.c **** 		}
2269:RtosV611/Source/tasks.c **** 		else
2270:RtosV611/Source/tasks.c **** 		{
2271:RtosV611/Source/tasks.c **** 			if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
2272:RtosV611/Source/tasks.c **** 			{
2273:RtosV611/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
2274:RtosV611/Source/tasks.c **** 			}
2275:RtosV611/Source/tasks.c **** 			else
2276:RtosV611/Source/tasks.c **** 			{
2277:RtosV611/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
2278:RtosV611/Source/tasks.c **** 			}
2279:RtosV611/Source/tasks.c **** 		}
2280:RtosV611/Source/tasks.c **** 
2281:RtosV611/Source/tasks.c **** 		return xReturn;
2282:RtosV611/Source/tasks.c **** 	}
2283:RtosV611/Source/tasks.c **** 
2284:RtosV611/Source/tasks.c **** #endif
2285:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
2286:RtosV611/Source/tasks.c **** 
2287:RtosV611/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
2288:RtosV611/Source/tasks.c **** 
2289:RtosV611/Source/tasks.c **** 	void vTaskPriorityInherit( xTaskHandle * const pxMutexHolder )
2290:RtosV611/Source/tasks.c **** 	{
 4180              		.loc 1 2290 0
 4181              		.cfi_startproc
 4182              		@ args = 0, pretend = 0, frame = 16
 4183              		@ frame_needed = 1, uses_anonymous_args = 0
 4184 0000 80B5     		push	{r7, lr}	@
 4185              		.cfi_def_cfa_offset 8
 4186              		.cfi_offset 7, -8
 4187              		.cfi_offset 14, -4
 4188 0002 84B0     		sub	sp, sp, #16	@,,
 4189              		.cfi_def_cfa_offset 24
 4190 0004 00AF     		add	r7, sp, #0	@,,
 4191              		.cfi_def_cfa_register 7
 4192 0006 7860     		str	r0, [r7, #4]	@ pxMutexHolder, pxMutexHolder
2291:RtosV611/Source/tasks.c **** 	tskTCB * const pxTCB = ( tskTCB * ) pxMutexHolder;
 4193              		.loc 1 2291 0
 4194 0008 7B68     		ldr	r3, [r7, #4]	@ tmp130, pxMutexHolder
 4195 000a FB60     		str	r3, [r7, #12]	@ tmp130, pxTCB
2292:RtosV611/Source/tasks.c **** 
2293:RtosV611/Source/tasks.c **** 		if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
 4196              		.loc 1 2293 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 116


 4197 000c FB68     		ldr	r3, [r7, #12]	@ tmp131, pxTCB
 4198 000e DA6A     		ldr	r2, [r3, #44]	@ _6, pxTCB_4->uxPriority
 4199 0010 214B     		ldr	r3, .L275	@ tmp132,
 4200 0012 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.138_7, pxCurrentTCB
 4201 0014 DB6A     		ldr	r3, [r3, #44]	@ _8, pxCurrentTCB.138_7->uxPriority
 4202 0016 9A42     		cmp	r2, r3	@ _6, _8
 4203 0018 3AD2     		bcs	.L274	@,
2294:RtosV611/Source/tasks.c **** 		{
2295:RtosV611/Source/tasks.c **** 			/* Adjust the mutex holder state to account for its new priority. */
2296:RtosV611/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) pxC
 4204              		.loc 1 2296 0
 4205 001a 1F4B     		ldr	r3, .L275	@ tmp133,
 4206 001c 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.139_9, pxCurrentTCB
 4207 001e DB6A     		ldr	r3, [r3, #44]	@ _10, pxCurrentTCB.139_9->uxPriority
 4208 0020 C3F10602 		rsb	r2, r3, #6	@ _11, _10,
 4209 0024 FB68     		ldr	r3, [r7, #12]	@ tmp134, pxTCB
 4210 0026 9A61     		str	r2, [r3, #24]	@ _11, pxTCB_4->xEventListItem.xItemValue
2297:RtosV611/Source/tasks.c **** 
2298:RtosV611/Source/tasks.c **** 			/* If the task being modified is in the ready state it will need to
2299:RtosV611/Source/tasks.c **** 			be moved in to a new list. */
2300:RtosV611/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xGenericList
 4211              		.loc 1 2300 0
 4212 0028 FB68     		ldr	r3, [r7, #12]	@ tmp135, pxTCB
 4213 002a 5969     		ldr	r1, [r3, #20]	@ _13, pxTCB_4->xGenericListItem.pvContainer
 4214 002c FB68     		ldr	r3, [r7, #12]	@ tmp136, pxTCB
 4215 002e DA6A     		ldr	r2, [r3, #44]	@ _14, pxTCB_4->uxPriority
 4216 0030 1346     		mov	r3, r2	@ tmp137, _14
 4217 0032 9B00     		lsls	r3, r3, #2	@ tmp137, tmp137,
 4218 0034 1344     		add	r3, r3, r2	@ tmp137, _14
 4219 0036 9B00     		lsls	r3, r3, #2	@ tmp138, tmp137,
 4220 0038 184A     		ldr	r2, .L275+4	@ tmp139,
 4221 003a 1344     		add	r3, r3, r2	@ _15, tmp139
 4222 003c 9942     		cmp	r1, r3	@ _13, _15
 4223 003e 22D1     		bne	.L272	@,
2301:RtosV611/Source/tasks.c **** 			{
2302:RtosV611/Source/tasks.c **** 				vListRemove( &( pxTCB->xGenericListItem ) );
 4224              		.loc 1 2302 0
 4225 0040 FB68     		ldr	r3, [r7, #12]	@ tmp140, pxTCB
 4226 0042 0433     		adds	r3, r3, #4	@ _16, tmp140,
 4227 0044 1846     		mov	r0, r3	@, _16
 4228 0046 FFF7FEFF 		bl	vListRemove	@
2303:RtosV611/Source/tasks.c **** 
2304:RtosV611/Source/tasks.c **** 				/* Inherit the priority before being moved into the new list. */
2305:RtosV611/Source/tasks.c **** 				pxTCB->uxPriority = pxCurrentTCB->uxPriority;
 4229              		.loc 1 2305 0
 4230 004a 134B     		ldr	r3, .L275	@ tmp141,
 4231 004c 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.140_18, pxCurrentTCB
 4232 004e DA6A     		ldr	r2, [r3, #44]	@ _19, pxCurrentTCB.140_18->uxPriority
 4233 0050 FB68     		ldr	r3, [r7, #12]	@ tmp142, pxTCB
 4234 0052 DA62     		str	r2, [r3, #44]	@ _19, pxTCB_4->uxPriority
2306:RtosV611/Source/tasks.c **** 				prvAddTaskToReadyQueue( pxTCB );
 4235              		.loc 1 2306 0
 4236 0054 FB68     		ldr	r3, [r7, #12]	@ tmp143, pxTCB
 4237 0056 DA6A     		ldr	r2, [r3, #44]	@ _21, pxTCB_4->uxPriority
 4238 0058 114B     		ldr	r3, .L275+8	@ tmp144,
 4239 005a 1B68     		ldr	r3, [r3]	@ uxTopReadyPriority.141_22, uxTopReadyPriority
 4240 005c 9A42     		cmp	r2, r3	@ _21, uxTopReadyPriority.141_22
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 117


 4241 005e 03D9     		bls	.L273	@,
 4242              		.loc 1 2306 0 is_stmt 0 discriminator 1
 4243 0060 FB68     		ldr	r3, [r7, #12]	@ tmp145, pxTCB
 4244 0062 DB6A     		ldr	r3, [r3, #44]	@ _23, pxTCB_4->uxPriority
 4245 0064 0E4A     		ldr	r2, .L275+8	@ tmp146,
 4246 0066 1360     		str	r3, [r2]	@ _23, uxTopReadyPriority
 4247              	.L273:
 4248              		.loc 1 2306 0 discriminator 3
 4249 0068 FB68     		ldr	r3, [r7, #12]	@ tmp147, pxTCB
 4250 006a DA6A     		ldr	r2, [r3, #44]	@ _25, pxTCB_4->uxPriority
 4251 006c 1346     		mov	r3, r2	@ tmp148, _25
 4252 006e 9B00     		lsls	r3, r3, #2	@ tmp148, tmp148,
 4253 0070 1344     		add	r3, r3, r2	@ tmp148, _25
 4254 0072 9B00     		lsls	r3, r3, #2	@ tmp149, tmp148,
 4255 0074 094A     		ldr	r2, .L275+4	@ tmp150,
 4256 0076 1A44     		add	r2, r2, r3	@ _26, tmp148
 4257 0078 FB68     		ldr	r3, [r7, #12]	@ tmp151, pxTCB
 4258 007a 0433     		adds	r3, r3, #4	@ _27, tmp151,
 4259 007c 1946     		mov	r1, r3	@, _27
 4260 007e 1046     		mov	r0, r2	@, _26
 4261 0080 FFF7FEFF 		bl	vListInsertEnd	@
2307:RtosV611/Source/tasks.c **** 			}
2308:RtosV611/Source/tasks.c **** 			else
2309:RtosV611/Source/tasks.c **** 			{
2310:RtosV611/Source/tasks.c **** 				/* Just inherit the priority. */
2311:RtosV611/Source/tasks.c **** 				pxTCB->uxPriority = pxCurrentTCB->uxPriority;
2312:RtosV611/Source/tasks.c **** 			}
2313:RtosV611/Source/tasks.c **** 		}
2314:RtosV611/Source/tasks.c **** 	}
 4262              		.loc 1 2314 0 is_stmt 1 discriminator 3
 4263 0084 04E0     		b	.L274	@
 4264              	.L272:
2311:RtosV611/Source/tasks.c **** 			}
 4265              		.loc 1 2311 0
 4266 0086 044B     		ldr	r3, .L275	@ tmp152,
 4267 0088 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.142_29, pxCurrentTCB
 4268 008a DA6A     		ldr	r2, [r3, #44]	@ _30, pxCurrentTCB.142_29->uxPriority
 4269 008c FB68     		ldr	r3, [r7, #12]	@ tmp153, pxTCB
 4270 008e DA62     		str	r2, [r3, #44]	@ _30, pxTCB_4->uxPriority
 4271              	.L274:
 4272              		.loc 1 2314 0
 4273 0090 00BF     		nop
 4274 0092 1037     		adds	r7, r7, #16	@,,
 4275              		.cfi_def_cfa_offset 8
 4276 0094 BD46     		mov	sp, r7	@,
 4277              		.cfi_def_cfa_register 13
 4278              		@ sp needed	@
 4279 0096 80BD     		pop	{r7, pc}	@
 4280              	.L276:
 4281              		.align	2
 4282              	.L275:
 4283 0098 00000000 		.word	pxCurrentTCB
 4284 009c 00000000 		.word	pxReadyTasksLists
 4285 00a0 00000000 		.word	uxTopReadyPriority
 4286              		.cfi_endproc
 4287              	.LFE40:
 4288              		.size	vTaskPriorityInherit, .-vTaskPriorityInherit
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 118


 4289              		.section	.text.vTaskPriorityDisinherit,"ax",%progbits
 4290              		.align	1
 4291              		.global	vTaskPriorityDisinherit
 4292              		.syntax unified
 4293              		.thumb
 4294              		.thumb_func
 4295              		.fpu softvfp
 4296              		.type	vTaskPriorityDisinherit, %function
 4297              	vTaskPriorityDisinherit:
 4298              	.LFB41:
2315:RtosV611/Source/tasks.c **** 
2316:RtosV611/Source/tasks.c **** #endif
2317:RtosV611/Source/tasks.c **** /*-----------------------------------------------------------*/
2318:RtosV611/Source/tasks.c **** 
2319:RtosV611/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
2320:RtosV611/Source/tasks.c **** 
2321:RtosV611/Source/tasks.c **** 	void vTaskPriorityDisinherit( xTaskHandle * const pxMutexHolder )
2322:RtosV611/Source/tasks.c **** 	{
 4299              		.loc 1 2322 0
 4300              		.cfi_startproc
 4301              		@ args = 0, pretend = 0, frame = 16
 4302              		@ frame_needed = 1, uses_anonymous_args = 0
 4303 0000 80B5     		push	{r7, lr}	@
 4304              		.cfi_def_cfa_offset 8
 4305              		.cfi_offset 7, -8
 4306              		.cfi_offset 14, -4
 4307 0002 84B0     		sub	sp, sp, #16	@,,
 4308              		.cfi_def_cfa_offset 24
 4309 0004 00AF     		add	r7, sp, #0	@,,
 4310              		.cfi_def_cfa_register 7
 4311 0006 7860     		str	r0, [r7, #4]	@ pxMutexHolder, pxMutexHolder
2323:RtosV611/Source/tasks.c **** 	tskTCB * const pxTCB = ( tskTCB * ) pxMutexHolder;
 4312              		.loc 1 2323 0
 4313 0008 7B68     		ldr	r3, [r7, #4]	@ tmp122, pxMutexHolder
 4314 000a FB60     		str	r3, [r7, #12]	@ tmp122, pxTCB
2324:RtosV611/Source/tasks.c **** 
2325:RtosV611/Source/tasks.c **** 		if( pxMutexHolder != NULL )
 4315              		.loc 1 2325 0
 4316 000c 7B68     		ldr	r3, [r7, #4]	@ tmp123, pxMutexHolder
 4317 000e 002B     		cmp	r3, #0	@ tmp123,
 4318 0010 2CD0     		beq	.L280	@,
2326:RtosV611/Source/tasks.c **** 		{
2327:RtosV611/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 4319              		.loc 1 2327 0
 4320 0012 FB68     		ldr	r3, [r7, #12]	@ tmp124, pxTCB
 4321 0014 DA6A     		ldr	r2, [r3, #44]	@ _6, pxTCB_4->uxPriority
 4322 0016 FB68     		ldr	r3, [r7, #12]	@ tmp125, pxTCB
 4323 0018 9B6C     		ldr	r3, [r3, #72]	@ _7, pxTCB_4->uxBasePriority
 4324 001a 9A42     		cmp	r2, r3	@ _6, _7
 4325 001c 26D0     		beq	.L280	@,
2328:RtosV611/Source/tasks.c **** 			{
2329:RtosV611/Source/tasks.c **** 				/* We must be the running task to be able to give the mutex back.
2330:RtosV611/Source/tasks.c **** 				Remove ourselves from the ready list we currently appear in. */
2331:RtosV611/Source/tasks.c **** 				vListRemove( &( pxTCB->xGenericListItem ) );
 4326              		.loc 1 2331 0
 4327 001e FB68     		ldr	r3, [r7, #12]	@ tmp126, pxTCB
 4328 0020 0433     		adds	r3, r3, #4	@ _8, tmp126,
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 119


 4329 0022 1846     		mov	r0, r3	@, _8
 4330 0024 FFF7FEFF 		bl	vListRemove	@
2332:RtosV611/Source/tasks.c **** 
2333:RtosV611/Source/tasks.c **** 				/* Disinherit the priority before adding ourselves into the new
2334:RtosV611/Source/tasks.c **** 				ready list. */
2335:RtosV611/Source/tasks.c **** 				pxTCB->uxPriority = pxTCB->uxBasePriority;
 4331              		.loc 1 2335 0
 4332 0028 FB68     		ldr	r3, [r7, #12]	@ tmp127, pxTCB
 4333 002a 9A6C     		ldr	r2, [r3, #72]	@ _10, pxTCB_4->uxBasePriority
 4334 002c FB68     		ldr	r3, [r7, #12]	@ tmp128, pxTCB
 4335 002e DA62     		str	r2, [r3, #44]	@ _10, pxTCB_4->uxPriority
2336:RtosV611/Source/tasks.c **** 				listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) px
 4336              		.loc 1 2336 0
 4337 0030 FB68     		ldr	r3, [r7, #12]	@ tmp129, pxTCB
 4338 0032 DB6A     		ldr	r3, [r3, #44]	@ _12, pxTCB_4->uxPriority
 4339 0034 C3F10602 		rsb	r2, r3, #6	@ _13, _12,
 4340 0038 FB68     		ldr	r3, [r7, #12]	@ tmp130, pxTCB
 4341 003a 9A61     		str	r2, [r3, #24]	@ _13, pxTCB_4->xEventListItem.xItemValue
2337:RtosV611/Source/tasks.c **** 				prvAddTaskToReadyQueue( pxTCB );
 4342              		.loc 1 2337 0
 4343 003c FB68     		ldr	r3, [r7, #12]	@ tmp131, pxTCB
 4344 003e DA6A     		ldr	r2, [r3, #44]	@ _15, pxTCB_4->uxPriority
 4345 0040 0C4B     		ldr	r3, .L281	@ tmp132,
 4346 0042 1B68     		ldr	r3, [r3]	@ uxTopReadyPriority.143_16, uxTopReadyPriority
 4347 0044 9A42     		cmp	r2, r3	@ _15, uxTopReadyPriority.143_16
 4348 0046 03D9     		bls	.L279	@,
 4349              		.loc 1 2337 0 is_stmt 0 discriminator 1
 4350 0048 FB68     		ldr	r3, [r7, #12]	@ tmp133, pxTCB
 4351 004a DB6A     		ldr	r3, [r3, #44]	@ _17, pxTCB_4->uxPriority
 4352 004c 094A     		ldr	r2, .L281	@ tmp134,
 4353 004e 1360     		str	r3, [r2]	@ _17, uxTopReadyPriority
 4354              	.L279:
 4355              		.loc 1 2337 0 discriminator 3
 4356 0050 FB68     		ldr	r3, [r7, #12]	@ tmp135, pxTCB
 4357 0052 DA6A     		ldr	r2, [r3, #44]	@ _19, pxTCB_4->uxPriority
 4358 0054 1346     		mov	r3, r2	@ tmp136, _19
 4359 0056 9B00     		lsls	r3, r3, #2	@ tmp136, tmp136,
 4360 0058 1344     		add	r3, r3, r2	@ tmp136, _19
 4361 005a 9B00     		lsls	r3, r3, #2	@ tmp137, tmp136,
 4362 005c 064A     		ldr	r2, .L281+4	@ tmp138,
 4363 005e 1A44     		add	r2, r2, r3	@ _20, tmp136
 4364 0060 FB68     		ldr	r3, [r7, #12]	@ tmp139, pxTCB
 4365 0062 0433     		adds	r3, r3, #4	@ _21, tmp139,
 4366 0064 1946     		mov	r1, r3	@, _21
 4367 0066 1046     		mov	r0, r2	@, _20
 4368 0068 FFF7FEFF 		bl	vListInsertEnd	@
 4369              	.L280:
2338:RtosV611/Source/tasks.c **** 			}
2339:RtosV611/Source/tasks.c **** 		}
2340:RtosV611/Source/tasks.c **** 	}
 4370              		.loc 1 2340 0 is_stmt 1
 4371 006c 00BF     		nop
 4372 006e 1037     		adds	r7, r7, #16	@,,
 4373              		.cfi_def_cfa_offset 8
 4374 0070 BD46     		mov	sp, r7	@,
 4375              		.cfi_def_cfa_register 13
 4376              		@ sp needed	@
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 120


 4377 0072 80BD     		pop	{r7, pc}	@
 4378              	.L282:
 4379              		.align	2
 4380              	.L281:
 4381 0074 00000000 		.word	uxTopReadyPriority
 4382 0078 00000000 		.word	pxReadyTasksLists
 4383              		.cfi_endproc
 4384              	.LFE41:
 4385              		.size	vTaskPriorityDisinherit, .-vTaskPriorityDisinherit
 4386              		.section	.rodata.ucExpectedStackBytes.6029,"a",%progbits
 4387              		.align	2
 4388              		.type	ucExpectedStackBytes.6029, %object
 4389              		.size	ucExpectedStackBytes.6029, 20
 4390              	ucExpectedStackBytes.6029:
 4391 0000 A5       		.byte	-91
 4392 0001 A5       		.byte	-91
 4393 0002 A5       		.byte	-91
 4394 0003 A5       		.byte	-91
 4395 0004 A5       		.byte	-91
 4396 0005 A5       		.byte	-91
 4397 0006 A5       		.byte	-91
 4398 0007 A5       		.byte	-91
 4399 0008 A5       		.byte	-91
 4400 0009 A5       		.byte	-91
 4401 000a A5       		.byte	-91
 4402 000b A5       		.byte	-91
 4403 000c A5       		.byte	-91
 4404 000d A5       		.byte	-91
 4405 000e A5       		.byte	-91
 4406 000f A5       		.byte	-91
 4407 0010 A5       		.byte	-91
 4408 0011 A5       		.byte	-91
 4409 0012 A5       		.byte	-91
 4410 0013 A5       		.byte	-91
 4411              		.text
 4412              	.Letext0:
 4413              		.file 2 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\lib\\gcc\\arm-none-eabi\\6.3.0\\include\\stdde
 4414              		.file 3 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\sys\\lock.h"
 4415              		.file 4 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\sys\\_types.h"
 4416              		.file 5 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\sys\\reent.h"
 4417              		.file 6 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\stdlib.h"
 4418              		.file 7 "RtosV611/Source/include/projdefs.h"
 4419              		.file 8 "RtosV611/FreeRTOSConfig.h"
 4420              		.file 9 "RtosV611/Source/portable/GCC/ARM_CM3/portmacro.h"
 4421              		.file 10 "RtosV611/Source/include/list.h"
 4422              		.file 11 "RtosV611/Source/include/task.h"
 4423              		.section	.debug_info,"",%progbits
 4424              	.Ldebug_info0:
 4425 0000 7A180000 		.4byte	0x187a
 4426 0004 0400     		.2byte	0x4
 4427 0006 00000000 		.4byte	.Ldebug_abbrev0
 4428 000a 04       		.byte	0x4
 4429 000b 01       		.uleb128 0x1
 4430 000c 3C640000 		.4byte	.LASF1334
 4431 0010 01       		.byte	0x1
 4432 0011 342C0000 		.4byte	.LASF1335
 4433 0015 CE820000 		.4byte	.LASF1336
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 121


 4434 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 4435 001d 00000000 		.4byte	0
 4436 0021 00000000 		.4byte	.Ldebug_line0
 4437 0025 00000000 		.4byte	.Ldebug_macro0
 4438 0029 02       		.uleb128 0x2
 4439 002a 01       		.byte	0x1
 4440 002b 06       		.byte	0x6
 4441 002c 6F040000 		.4byte	.LASF1052
 4442 0030 03       		.uleb128 0x3
 4443 0031 29000000 		.4byte	0x29
 4444 0035 04       		.uleb128 0x4
 4445 0036 29000000 		.4byte	0x29
 4446 003a 02       		.uleb128 0x2
 4447 003b 01       		.byte	0x1
 4448 003c 08       		.byte	0x8
 4449 003d DA000000 		.4byte	.LASF1053
 4450 0041 03       		.uleb128 0x3
 4451 0042 3A000000 		.4byte	0x3a
 4452 0046 02       		.uleb128 0x2
 4453 0047 02       		.byte	0x2
 4454 0048 05       		.byte	0x5
 4455 0049 75580000 		.4byte	.LASF1054
 4456 004d 02       		.uleb128 0x2
 4457 004e 02       		.byte	0x2
 4458 004f 07       		.byte	0x7
 4459 0050 291E0000 		.4byte	.LASF1055
 4460 0054 02       		.uleb128 0x2
 4461 0055 04       		.byte	0x4
 4462 0056 05       		.byte	0x5
 4463 0057 1E1B0000 		.4byte	.LASF1056
 4464 005b 04       		.uleb128 0x4
 4465 005c 54000000 		.4byte	0x54
 4466 0060 02       		.uleb128 0x2
 4467 0061 04       		.byte	0x4
 4468 0062 07       		.byte	0x7
 4469 0063 06420000 		.4byte	.LASF1057
 4470 0067 04       		.uleb128 0x4
 4471 0068 60000000 		.4byte	0x60
 4472 006c 02       		.uleb128 0x2
 4473 006d 08       		.byte	0x8
 4474 006e 05       		.byte	0x5
 4475 006f 904D0000 		.4byte	.LASF1058
 4476 0073 02       		.uleb128 0x2
 4477 0074 08       		.byte	0x8
 4478 0075 07       		.byte	0x7
 4479 0076 1A680000 		.4byte	.LASF1059
 4480 007a 05       		.uleb128 0x5
 4481 007b 04       		.byte	0x4
 4482 007c 05       		.byte	0x5
 4483 007d 696E7400 		.ascii	"int\000"
 4484 0081 02       		.uleb128 0x2
 4485 0082 04       		.byte	0x4
 4486 0083 07       		.byte	0x7
 4487 0084 62560000 		.4byte	.LASF1060
 4488 0088 06       		.uleb128 0x6
 4489 0089 5C010000 		.4byte	.LASF1061
 4490 008d 02       		.byte	0x2
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 122


 4491 008e D8       		.byte	0xd8
 4492 008f 81000000 		.4byte	0x81
 4493 0093 07       		.uleb128 0x7
 4494 0094 04       		.byte	0x4
 4495 0095 06       		.uleb128 0x6
 4496 0096 CC440000 		.4byte	.LASF1062
 4497 009a 03       		.byte	0x3
 4498 009b 07       		.byte	0x7
 4499 009c 7A000000 		.4byte	0x7a
 4500 00a0 06       		.uleb128 0x6
 4501 00a1 158F0000 		.4byte	.LASF1063
 4502 00a5 04       		.byte	0x4
 4503 00a6 2C       		.byte	0x2c
 4504 00a7 54000000 		.4byte	0x54
 4505 00ab 06       		.uleb128 0x6
 4506 00ac A2650000 		.4byte	.LASF1064
 4507 00b0 04       		.byte	0x4
 4508 00b1 72       		.byte	0x72
 4509 00b2 54000000 		.4byte	0x54
 4510 00b6 08       		.uleb128 0x8
 4511 00b7 17710000 		.4byte	.LASF1065
 4512 00bb 02       		.byte	0x2
 4513 00bc 6501     		.2byte	0x165
 4514 00be 81000000 		.4byte	0x81
 4515 00c2 09       		.uleb128 0x9
 4516 00c3 04       		.byte	0x4
 4517 00c4 04       		.byte	0x4
 4518 00c5 A6       		.byte	0xa6
 4519 00c6 E1000000 		.4byte	0xe1
 4520 00ca 0A       		.uleb128 0xa
 4521 00cb 38130000 		.4byte	.LASF1066
 4522 00cf 04       		.byte	0x4
 4523 00d0 A8       		.byte	0xa8
 4524 00d1 B6000000 		.4byte	0xb6
 4525 00d5 0A       		.uleb128 0xa
 4526 00d6 E4650000 		.4byte	.LASF1067
 4527 00da 04       		.byte	0x4
 4528 00db A9       		.byte	0xa9
 4529 00dc E1000000 		.4byte	0xe1
 4530 00e0 00       		.byte	0
 4531 00e1 0B       		.uleb128 0xb
 4532 00e2 3A000000 		.4byte	0x3a
 4533 00e6 F1000000 		.4byte	0xf1
 4534 00ea 0C       		.uleb128 0xc
 4535 00eb F1000000 		.4byte	0xf1
 4536 00ef 03       		.byte	0x3
 4537 00f0 00       		.byte	0
 4538 00f1 02       		.uleb128 0x2
 4539 00f2 04       		.byte	0x4
 4540 00f3 07       		.byte	0x7
 4541 00f4 9F010000 		.4byte	.LASF1068
 4542 00f8 0D       		.uleb128 0xd
 4543 00f9 08       		.byte	0x8
 4544 00fa 04       		.byte	0x4
 4545 00fb A3       		.byte	0xa3
 4546 00fc 19010000 		.4byte	0x119
 4547 0100 0E       		.uleb128 0xe
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 123


 4548 0101 CF5F0000 		.4byte	.LASF1069
 4549 0105 04       		.byte	0x4
 4550 0106 A5       		.byte	0xa5
 4551 0107 7A000000 		.4byte	0x7a
 4552 010b 00       		.byte	0
 4553 010c 0E       		.uleb128 0xe
 4554 010d C9010000 		.4byte	.LASF1070
 4555 0111 04       		.byte	0x4
 4556 0112 AA       		.byte	0xaa
 4557 0113 C2000000 		.4byte	0xc2
 4558 0117 04       		.byte	0x4
 4559 0118 00       		.byte	0
 4560 0119 06       		.uleb128 0x6
 4561 011a 4E520000 		.4byte	.LASF1071
 4562 011e 04       		.byte	0x4
 4563 011f AB       		.byte	0xab
 4564 0120 F8000000 		.4byte	0xf8
 4565 0124 06       		.uleb128 0x6
 4566 0125 D26E0000 		.4byte	.LASF1072
 4567 0129 04       		.byte	0x4
 4568 012a AF       		.byte	0xaf
 4569 012b 95000000 		.4byte	0x95
 4570 012f 06       		.uleb128 0x6
 4571 0130 CF8A0000 		.4byte	.LASF1073
 4572 0134 05       		.byte	0x5
 4573 0135 16       		.byte	0x16
 4574 0136 60000000 		.4byte	0x60
 4575 013a 0F       		.uleb128 0xf
 4576 013b 5F490000 		.4byte	.LASF1078
 4577 013f 18       		.byte	0x18
 4578 0140 05       		.byte	0x5
 4579 0141 2F       		.byte	0x2f
 4580 0142 8D010000 		.4byte	0x18d
 4581 0146 0E       		.uleb128 0xe
 4582 0147 2B720000 		.4byte	.LASF1074
 4583 014b 05       		.byte	0x5
 4584 014c 31       		.byte	0x31
 4585 014d 8D010000 		.4byte	0x18d
 4586 0151 00       		.byte	0
 4587 0152 10       		.uleb128 0x10
 4588 0153 5F6B00   		.ascii	"_k\000"
 4589 0156 05       		.byte	0x5
 4590 0157 32       		.byte	0x32
 4591 0158 7A000000 		.4byte	0x7a
 4592 015c 04       		.byte	0x4
 4593 015d 0E       		.uleb128 0xe
 4594 015e 84820000 		.4byte	.LASF1075
 4595 0162 05       		.byte	0x5
 4596 0163 32       		.byte	0x32
 4597 0164 7A000000 		.4byte	0x7a
 4598 0168 08       		.byte	0x8
 4599 0169 0E       		.uleb128 0xe
 4600 016a 59520000 		.4byte	.LASF1076
 4601 016e 05       		.byte	0x5
 4602 016f 32       		.byte	0x32
 4603 0170 7A000000 		.4byte	0x7a
 4604 0174 0C       		.byte	0xc
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 124


 4605 0175 0E       		.uleb128 0xe
 4606 0176 1A300000 		.4byte	.LASF1077
 4607 017a 05       		.byte	0x5
 4608 017b 32       		.byte	0x32
 4609 017c 7A000000 		.4byte	0x7a
 4610 0180 10       		.byte	0x10
 4611 0181 10       		.uleb128 0x10
 4612 0182 5F7800   		.ascii	"_x\000"
 4613 0185 05       		.byte	0x5
 4614 0186 33       		.byte	0x33
 4615 0187 93010000 		.4byte	0x193
 4616 018b 14       		.byte	0x14
 4617 018c 00       		.byte	0
 4618 018d 11       		.uleb128 0x11
 4619 018e 04       		.byte	0x4
 4620 018f 3A010000 		.4byte	0x13a
 4621 0193 0B       		.uleb128 0xb
 4622 0194 2F010000 		.4byte	0x12f
 4623 0198 A3010000 		.4byte	0x1a3
 4624 019c 0C       		.uleb128 0xc
 4625 019d F1000000 		.4byte	0xf1
 4626 01a1 00       		.byte	0
 4627 01a2 00       		.byte	0
 4628 01a3 0F       		.uleb128 0xf
 4629 01a4 69080000 		.4byte	.LASF1079
 4630 01a8 24       		.byte	0x24
 4631 01a9 05       		.byte	0x5
 4632 01aa 37       		.byte	0x37
 4633 01ab 1C020000 		.4byte	0x21c
 4634 01af 0E       		.uleb128 0xe
 4635 01b0 85080000 		.4byte	.LASF1080
 4636 01b4 05       		.byte	0x5
 4637 01b5 39       		.byte	0x39
 4638 01b6 7A000000 		.4byte	0x7a
 4639 01ba 00       		.byte	0
 4640 01bb 0E       		.uleb128 0xe
 4641 01bc A89A0000 		.4byte	.LASF1081
 4642 01c0 05       		.byte	0x5
 4643 01c1 3A       		.byte	0x3a
 4644 01c2 7A000000 		.4byte	0x7a
 4645 01c6 04       		.byte	0x4
 4646 01c7 0E       		.uleb128 0xe
 4647 01c8 81900000 		.4byte	.LASF1082
 4648 01cc 05       		.byte	0x5
 4649 01cd 3B       		.byte	0x3b
 4650 01ce 7A000000 		.4byte	0x7a
 4651 01d2 08       		.byte	0x8
 4652 01d3 0E       		.uleb128 0xe
 4653 01d4 7C5A0000 		.4byte	.LASF1083
 4654 01d8 05       		.byte	0x5
 4655 01d9 3C       		.byte	0x3c
 4656 01da 7A000000 		.4byte	0x7a
 4657 01de 0C       		.byte	0xc
 4658 01df 0E       		.uleb128 0xe
 4659 01e0 5F1F0000 		.4byte	.LASF1084
 4660 01e4 05       		.byte	0x5
 4661 01e5 3D       		.byte	0x3d
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 125


 4662 01e6 7A000000 		.4byte	0x7a
 4663 01ea 10       		.byte	0x10
 4664 01eb 0E       		.uleb128 0xe
 4665 01ec F6820000 		.4byte	.LASF1085
 4666 01f0 05       		.byte	0x5
 4667 01f1 3E       		.byte	0x3e
 4668 01f2 7A000000 		.4byte	0x7a
 4669 01f6 14       		.byte	0x14
 4670 01f7 0E       		.uleb128 0xe
 4671 01f8 DB610000 		.4byte	.LASF1086
 4672 01fc 05       		.byte	0x5
 4673 01fd 3F       		.byte	0x3f
 4674 01fe 7A000000 		.4byte	0x7a
 4675 0202 18       		.byte	0x18
 4676 0203 0E       		.uleb128 0xe
 4677 0204 1D630000 		.4byte	.LASF1087
 4678 0208 05       		.byte	0x5
 4679 0209 40       		.byte	0x40
 4680 020a 7A000000 		.4byte	0x7a
 4681 020e 1C       		.byte	0x1c
 4682 020f 0E       		.uleb128 0xe
 4683 0210 20990000 		.4byte	.LASF1088
 4684 0214 05       		.byte	0x5
 4685 0215 41       		.byte	0x41
 4686 0216 7A000000 		.4byte	0x7a
 4687 021a 20       		.byte	0x20
 4688 021b 00       		.byte	0
 4689 021c 12       		.uleb128 0x12
 4690 021d 1B150000 		.4byte	.LASF1089
 4691 0221 0801     		.2byte	0x108
 4692 0223 05       		.byte	0x5
 4693 0224 4A       		.byte	0x4a
 4694 0225 5C020000 		.4byte	0x25c
 4695 0229 0E       		.uleb128 0xe
 4696 022a C70B0000 		.4byte	.LASF1090
 4697 022e 05       		.byte	0x5
 4698 022f 4B       		.byte	0x4b
 4699 0230 5C020000 		.4byte	0x25c
 4700 0234 00       		.byte	0
 4701 0235 0E       		.uleb128 0xe
 4702 0236 6D690000 		.4byte	.LASF1091
 4703 023a 05       		.byte	0x5
 4704 023b 4C       		.byte	0x4c
 4705 023c 5C020000 		.4byte	0x25c
 4706 0240 80       		.byte	0x80
 4707 0241 13       		.uleb128 0x13
 4708 0242 20800000 		.4byte	.LASF1092
 4709 0246 05       		.byte	0x5
 4710 0247 4E       		.byte	0x4e
 4711 0248 2F010000 		.4byte	0x12f
 4712 024c 0001     		.2byte	0x100
 4713 024e 13       		.uleb128 0x13
 4714 024f 7C880000 		.4byte	.LASF1093
 4715 0253 05       		.byte	0x5
 4716 0254 51       		.byte	0x51
 4717 0255 2F010000 		.4byte	0x12f
 4718 0259 0401     		.2byte	0x104
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 126


 4719 025b 00       		.byte	0
 4720 025c 0B       		.uleb128 0xb
 4721 025d 93000000 		.4byte	0x93
 4722 0261 6C020000 		.4byte	0x26c
 4723 0265 0C       		.uleb128 0xc
 4724 0266 F1000000 		.4byte	0xf1
 4725 026a 1F       		.byte	0x1f
 4726 026b 00       		.byte	0
 4727 026c 0F       		.uleb128 0xf
 4728 026d 995D0000 		.4byte	.LASF1094
 4729 0271 8C       		.byte	0x8c
 4730 0272 05       		.byte	0x5
 4731 0273 55       		.byte	0x55
 4732 0274 A9020000 		.4byte	0x2a9
 4733 0278 0E       		.uleb128 0xe
 4734 0279 2B720000 		.4byte	.LASF1074
 4735 027d 05       		.byte	0x5
 4736 027e 56       		.byte	0x56
 4737 027f A9020000 		.4byte	0x2a9
 4738 0283 00       		.byte	0
 4739 0284 0E       		.uleb128 0xe
 4740 0285 AE860000 		.4byte	.LASF1095
 4741 0289 05       		.byte	0x5
 4742 028a 57       		.byte	0x57
 4743 028b 7A000000 		.4byte	0x7a
 4744 028f 04       		.byte	0x4
 4745 0290 0E       		.uleb128 0xe
 4746 0291 C32D0000 		.4byte	.LASF1096
 4747 0295 05       		.byte	0x5
 4748 0296 58       		.byte	0x58
 4749 0297 AF020000 		.4byte	0x2af
 4750 029b 08       		.byte	0x8
 4751 029c 0E       		.uleb128 0xe
 4752 029d CE4D0000 		.4byte	.LASF1097
 4753 02a1 05       		.byte	0x5
 4754 02a2 59       		.byte	0x59
 4755 02a3 C6020000 		.4byte	0x2c6
 4756 02a7 88       		.byte	0x88
 4757 02a8 00       		.byte	0
 4758 02a9 11       		.uleb128 0x11
 4759 02aa 04       		.byte	0x4
 4760 02ab 6C020000 		.4byte	0x26c
 4761 02af 0B       		.uleb128 0xb
 4762 02b0 BF020000 		.4byte	0x2bf
 4763 02b4 BF020000 		.4byte	0x2bf
 4764 02b8 0C       		.uleb128 0xc
 4765 02b9 F1000000 		.4byte	0xf1
 4766 02bd 1F       		.byte	0x1f
 4767 02be 00       		.byte	0
 4768 02bf 11       		.uleb128 0x11
 4769 02c0 04       		.byte	0x4
 4770 02c1 C5020000 		.4byte	0x2c5
 4771 02c5 14       		.uleb128 0x14
 4772 02c6 11       		.uleb128 0x11
 4773 02c7 04       		.byte	0x4
 4774 02c8 1C020000 		.4byte	0x21c
 4775 02cc 0F       		.uleb128 0xf
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 127


 4776 02cd A2020000 		.4byte	.LASF1098
 4777 02d1 08       		.byte	0x8
 4778 02d2 05       		.byte	0x5
 4779 02d3 75       		.byte	0x75
 4780 02d4 F1020000 		.4byte	0x2f1
 4781 02d8 0E       		.uleb128 0xe
 4782 02d9 796C0000 		.4byte	.LASF1099
 4783 02dd 05       		.byte	0x5
 4784 02de 76       		.byte	0x76
 4785 02df F1020000 		.4byte	0x2f1
 4786 02e3 00       		.byte	0
 4787 02e4 0E       		.uleb128 0xe
 4788 02e5 180B0000 		.4byte	.LASF1100
 4789 02e9 05       		.byte	0x5
 4790 02ea 77       		.byte	0x77
 4791 02eb 7A000000 		.4byte	0x7a
 4792 02ef 04       		.byte	0x4
 4793 02f0 00       		.byte	0
 4794 02f1 11       		.uleb128 0x11
 4795 02f2 04       		.byte	0x4
 4796 02f3 3A000000 		.4byte	0x3a
 4797 02f7 0F       		.uleb128 0xf
 4798 02f8 E73A0000 		.4byte	.LASF1101
 4799 02fc 20       		.byte	0x20
 4800 02fd 05       		.byte	0x5
 4801 02fe 99       		.byte	0x99
 4802 02ff 61030000 		.4byte	0x361
 4803 0303 10       		.uleb128 0x10
 4804 0304 5F7000   		.ascii	"_p\000"
 4805 0307 05       		.byte	0x5
 4806 0308 9A       		.byte	0x9a
 4807 0309 F1020000 		.4byte	0x2f1
 4808 030d 00       		.byte	0
 4809 030e 10       		.uleb128 0x10
 4810 030f 5F7200   		.ascii	"_r\000"
 4811 0312 05       		.byte	0x5
 4812 0313 9B       		.byte	0x9b
 4813 0314 7A000000 		.4byte	0x7a
 4814 0318 04       		.byte	0x4
 4815 0319 10       		.uleb128 0x10
 4816 031a 5F7700   		.ascii	"_w\000"
 4817 031d 05       		.byte	0x5
 4818 031e 9C       		.byte	0x9c
 4819 031f 7A000000 		.4byte	0x7a
 4820 0323 08       		.byte	0x8
 4821 0324 0E       		.uleb128 0xe
 4822 0325 BD5C0000 		.4byte	.LASF1102
 4823 0329 05       		.byte	0x5
 4824 032a 9D       		.byte	0x9d
 4825 032b 46000000 		.4byte	0x46
 4826 032f 0C       		.byte	0xc
 4827 0330 0E       		.uleb128 0xe
 4828 0331 2B140000 		.4byte	.LASF1103
 4829 0335 05       		.byte	0x5
 4830 0336 9E       		.byte	0x9e
 4831 0337 46000000 		.4byte	0x46
 4832 033b 0E       		.byte	0xe
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 128


 4833 033c 10       		.uleb128 0x10
 4834 033d 5F626600 		.ascii	"_bf\000"
 4835 0341 05       		.byte	0x5
 4836 0342 9F       		.byte	0x9f
 4837 0343 CC020000 		.4byte	0x2cc
 4838 0347 10       		.byte	0x10
 4839 0348 0E       		.uleb128 0xe
 4840 0349 5A860000 		.4byte	.LASF1104
 4841 034d 05       		.byte	0x5
 4842 034e A0       		.byte	0xa0
 4843 034f 7A000000 		.4byte	0x7a
 4844 0353 18       		.byte	0x18
 4845 0354 0E       		.uleb128 0xe
 4846 0355 41720000 		.4byte	.LASF1105
 4847 0359 05       		.byte	0x5
 4848 035a A2       		.byte	0xa2
 4849 035b 92040000 		.4byte	0x492
 4850 035f 1C       		.byte	0x1c
 4851 0360 00       		.byte	0
 4852 0361 03       		.uleb128 0x3
 4853 0362 F7020000 		.4byte	0x2f7
 4854 0366 15       		.uleb128 0x15
 4855 0367 02290000 		.4byte	.LASF1106
 4856 036b 60       		.byte	0x60
 4857 036c 05       		.byte	0x5
 4858 036d 7401     		.2byte	0x174
 4859 036f 92040000 		.4byte	0x492
 4860 0373 16       		.uleb128 0x16
 4861 0374 9A450000 		.4byte	.LASF1107
 4862 0378 05       		.byte	0x5
 4863 0379 7801     		.2byte	0x178
 4864 037b 7A000000 		.4byte	0x7a
 4865 037f 00       		.byte	0
 4866 0380 16       		.uleb128 0x16
 4867 0381 AD300000 		.4byte	.LASF1108
 4868 0385 05       		.byte	0x5
 4869 0386 7D01     		.2byte	0x17d
 4870 0388 CC060000 		.4byte	0x6cc
 4871 038c 04       		.byte	0x4
 4872 038d 16       		.uleb128 0x16
 4873 038e 686A0000 		.4byte	.LASF1109
 4874 0392 05       		.byte	0x5
 4875 0393 7D01     		.2byte	0x17d
 4876 0395 CC060000 		.4byte	0x6cc
 4877 0399 08       		.byte	0x8
 4878 039a 16       		.uleb128 0x16
 4879 039b 7B5B0000 		.4byte	.LASF1110
 4880 039f 05       		.byte	0x5
 4881 03a0 7D01     		.2byte	0x17d
 4882 03a2 CC060000 		.4byte	0x6cc
 4883 03a6 0C       		.byte	0xc
 4884 03a7 16       		.uleb128 0x16
 4885 03a8 232B0000 		.4byte	.LASF1111
 4886 03ac 05       		.byte	0x5
 4887 03ad 7F01     		.2byte	0x17f
 4888 03af 7A000000 		.4byte	0x7a
 4889 03b3 10       		.byte	0x10
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 129


 4890 03b4 16       		.uleb128 0x16
 4891 03b5 204D0000 		.4byte	.LASF1112
 4892 03b9 05       		.byte	0x5
 4893 03ba 8101     		.2byte	0x181
 4894 03bc E5050000 		.4byte	0x5e5
 4895 03c0 14       		.byte	0x14
 4896 03c1 16       		.uleb128 0x16
 4897 03c2 5E430000 		.4byte	.LASF1113
 4898 03c6 05       		.byte	0x5
 4899 03c7 8301     		.2byte	0x183
 4900 03c9 7A000000 		.4byte	0x7a
 4901 03cd 18       		.byte	0x18
 4902 03ce 16       		.uleb128 0x16
 4903 03cf 85280000 		.4byte	.LASF1114
 4904 03d3 05       		.byte	0x5
 4905 03d4 8501     		.2byte	0x185
 4906 03d6 7A000000 		.4byte	0x7a
 4907 03da 1C       		.byte	0x1c
 4908 03db 16       		.uleb128 0x16
 4909 03dc C78A0000 		.4byte	.LASF1115
 4910 03e0 05       		.byte	0x5
 4911 03e1 8601     		.2byte	0x186
 4912 03e3 1E080000 		.4byte	0x81e
 4913 03e7 20       		.byte	0x20
 4914 03e8 17       		.uleb128 0x17
 4915 03e9 5F6D7000 		.ascii	"_mp\000"
 4916 03ed 05       		.byte	0x5
 4917 03ee 8801     		.2byte	0x188
 4918 03f0 24080000 		.4byte	0x824
 4919 03f4 24       		.byte	0x24
 4920 03f5 16       		.uleb128 0x16
 4921 03f6 874A0000 		.4byte	.LASF1116
 4922 03fa 05       		.byte	0x5
 4923 03fb 8A01     		.2byte	0x18a
 4924 03fd 35080000 		.4byte	0x835
 4925 0401 28       		.byte	0x28
 4926 0402 16       		.uleb128 0x16
 4927 0403 56500000 		.4byte	.LASF1117
 4928 0407 05       		.byte	0x5
 4929 0408 8C01     		.2byte	0x18c
 4930 040a 7A000000 		.4byte	0x7a
 4931 040e 2C       		.byte	0x2c
 4932 040f 16       		.uleb128 0x16
 4933 0410 58880000 		.4byte	.LASF1118
 4934 0414 05       		.byte	0x5
 4935 0415 8F01     		.2byte	0x18f
 4936 0417 7A000000 		.4byte	0x7a
 4937 041b 30       		.byte	0x30
 4938 041c 16       		.uleb128 0x16
 4939 041d 843D0000 		.4byte	.LASF1119
 4940 0421 05       		.byte	0x5
 4941 0422 9001     		.2byte	0x190
 4942 0424 E5050000 		.4byte	0x5e5
 4943 0428 34       		.byte	0x34
 4944 0429 16       		.uleb128 0x16
 4945 042a CF700000 		.4byte	.LASF1120
 4946 042e 05       		.byte	0x5
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 130


 4947 042f 9201     		.2byte	0x192
 4948 0431 3B080000 		.4byte	0x83b
 4949 0435 38       		.byte	0x38
 4950 0436 16       		.uleb128 0x16
 4951 0437 E81C0000 		.4byte	.LASF1121
 4952 043b 05       		.byte	0x5
 4953 043c 9301     		.2byte	0x193
 4954 043e 41080000 		.4byte	0x841
 4955 0442 3C       		.byte	0x3c
 4956 0443 16       		.uleb128 0x16
 4957 0444 92040000 		.4byte	.LASF1122
 4958 0448 05       		.byte	0x5
 4959 0449 9401     		.2byte	0x194
 4960 044b E5050000 		.4byte	0x5e5
 4961 044f 40       		.byte	0x40
 4962 0450 16       		.uleb128 0x16
 4963 0451 023C0000 		.4byte	.LASF1123
 4964 0455 05       		.byte	0x5
 4965 0456 9701     		.2byte	0x197
 4966 0458 52080000 		.4byte	0x852
 4967 045c 44       		.byte	0x44
 4968 045d 16       		.uleb128 0x16
 4969 045e 2E980000 		.4byte	.LASF1124
 4970 0462 05       		.byte	0x5
 4971 0463 9F01     		.2byte	0x19f
 4972 0465 91060000 		.4byte	0x691
 4973 0469 48       		.byte	0x48
 4974 046a 16       		.uleb128 0x16
 4975 046b 5C020000 		.4byte	.LASF1125
 4976 046f 05       		.byte	0x5
 4977 0470 A001     		.2byte	0x1a0
 4978 0472 CC060000 		.4byte	0x6cc
 4979 0476 54       		.byte	0x54
 4980 0477 16       		.uleb128 0x16
 4981 0478 7C8A0000 		.4byte	.LASF1126
 4982 047c 05       		.byte	0x5
 4983 047d A101     		.2byte	0x1a1
 4984 047f 5E080000 		.4byte	0x85e
 4985 0483 58       		.byte	0x58
 4986 0484 16       		.uleb128 0x16
 4987 0485 15470000 		.4byte	.LASF1127
 4988 0489 05       		.byte	0x5
 4989 048a A201     		.2byte	0x1a2
 4990 048c E5050000 		.4byte	0x5e5
 4991 0490 5C       		.byte	0x5c
 4992 0491 00       		.byte	0
 4993 0492 11       		.uleb128 0x11
 4994 0493 04       		.byte	0x4
 4995 0494 66030000 		.4byte	0x366
 4996 0498 03       		.uleb128 0x3
 4997 0499 92040000 		.4byte	0x492
 4998 049d 0F       		.uleb128 0xf
 4999 049e 56430000 		.4byte	.LASF1128
 5000 04a2 68       		.byte	0x68
 5001 04a3 05       		.byte	0x5
 5002 04a4 B5       		.byte	0xb5
 5003 04a5 C7050000 		.4byte	0x5c7
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 131


 5004 04a9 10       		.uleb128 0x10
 5005 04aa 5F7000   		.ascii	"_p\000"
 5006 04ad 05       		.byte	0x5
 5007 04ae B6       		.byte	0xb6
 5008 04af F1020000 		.4byte	0x2f1
 5009 04b3 00       		.byte	0
 5010 04b4 10       		.uleb128 0x10
 5011 04b5 5F7200   		.ascii	"_r\000"
 5012 04b8 05       		.byte	0x5
 5013 04b9 B7       		.byte	0xb7
 5014 04ba 7A000000 		.4byte	0x7a
 5015 04be 04       		.byte	0x4
 5016 04bf 10       		.uleb128 0x10
 5017 04c0 5F7700   		.ascii	"_w\000"
 5018 04c3 05       		.byte	0x5
 5019 04c4 B8       		.byte	0xb8
 5020 04c5 7A000000 		.4byte	0x7a
 5021 04c9 08       		.byte	0x8
 5022 04ca 0E       		.uleb128 0xe
 5023 04cb BD5C0000 		.4byte	.LASF1102
 5024 04cf 05       		.byte	0x5
 5025 04d0 B9       		.byte	0xb9
 5026 04d1 46000000 		.4byte	0x46
 5027 04d5 0C       		.byte	0xc
 5028 04d6 0E       		.uleb128 0xe
 5029 04d7 2B140000 		.4byte	.LASF1103
 5030 04db 05       		.byte	0x5
 5031 04dc BA       		.byte	0xba
 5032 04dd 46000000 		.4byte	0x46
 5033 04e1 0E       		.byte	0xe
 5034 04e2 10       		.uleb128 0x10
 5035 04e3 5F626600 		.ascii	"_bf\000"
 5036 04e7 05       		.byte	0x5
 5037 04e8 BB       		.byte	0xbb
 5038 04e9 CC020000 		.4byte	0x2cc
 5039 04ed 10       		.byte	0x10
 5040 04ee 0E       		.uleb128 0xe
 5041 04ef 5A860000 		.4byte	.LASF1104
 5042 04f3 05       		.byte	0x5
 5043 04f4 BC       		.byte	0xbc
 5044 04f5 7A000000 		.4byte	0x7a
 5045 04f9 18       		.byte	0x18
 5046 04fa 0E       		.uleb128 0xe
 5047 04fb 41720000 		.4byte	.LASF1105
 5048 04ff 05       		.byte	0x5
 5049 0500 BF       		.byte	0xbf
 5050 0501 92040000 		.4byte	0x492
 5051 0505 1C       		.byte	0x1c
 5052 0506 0E       		.uleb128 0xe
 5053 0507 203A0000 		.4byte	.LASF1129
 5054 050b 05       		.byte	0x5
 5055 050c C3       		.byte	0xc3
 5056 050d 93000000 		.4byte	0x93
 5057 0511 20       		.byte	0x20
 5058 0512 0E       		.uleb128 0xe
 5059 0513 A9020000 		.4byte	.LASF1130
 5060 0517 05       		.byte	0x5
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 132


 5061 0518 C5       		.byte	0xc5
 5062 0519 F7050000 		.4byte	0x5f7
 5063 051d 24       		.byte	0x24
 5064 051e 0E       		.uleb128 0xe
 5065 051f 12040000 		.4byte	.LASF1131
 5066 0523 05       		.byte	0x5
 5067 0524 C7       		.byte	0xc7
 5068 0525 21060000 		.4byte	0x621
 5069 0529 28       		.byte	0x28
 5070 052a 0E       		.uleb128 0xe
 5071 052b 2F650000 		.4byte	.LASF1132
 5072 052f 05       		.byte	0x5
 5073 0530 CA       		.byte	0xca
 5074 0531 45060000 		.4byte	0x645
 5075 0535 2C       		.byte	0x2c
 5076 0536 0E       		.uleb128 0xe
 5077 0537 502E0000 		.4byte	.LASF1133
 5078 053b 05       		.byte	0x5
 5079 053c CB       		.byte	0xcb
 5080 053d 5F060000 		.4byte	0x65f
 5081 0541 30       		.byte	0x30
 5082 0542 10       		.uleb128 0x10
 5083 0543 5F756200 		.ascii	"_ub\000"
 5084 0547 05       		.byte	0x5
 5085 0548 CE       		.byte	0xce
 5086 0549 CC020000 		.4byte	0x2cc
 5087 054d 34       		.byte	0x34
 5088 054e 10       		.uleb128 0x10
 5089 054f 5F757000 		.ascii	"_up\000"
 5090 0553 05       		.byte	0x5
 5091 0554 CF       		.byte	0xcf
 5092 0555 F1020000 		.4byte	0x2f1
 5093 0559 3C       		.byte	0x3c
 5094 055a 10       		.uleb128 0x10
 5095 055b 5F757200 		.ascii	"_ur\000"
 5096 055f 05       		.byte	0x5
 5097 0560 D0       		.byte	0xd0
 5098 0561 7A000000 		.4byte	0x7a
 5099 0565 40       		.byte	0x40
 5100 0566 0E       		.uleb128 0xe
 5101 0567 2B5B0000 		.4byte	.LASF1134
 5102 056b 05       		.byte	0x5
 5103 056c D3       		.byte	0xd3
 5104 056d 65060000 		.4byte	0x665
 5105 0571 44       		.byte	0x44
 5106 0572 0E       		.uleb128 0xe
 5107 0573 7F080000 		.4byte	.LASF1135
 5108 0577 05       		.byte	0x5
 5109 0578 D4       		.byte	0xd4
 5110 0579 75060000 		.4byte	0x675
 5111 057d 47       		.byte	0x47
 5112 057e 10       		.uleb128 0x10
 5113 057f 5F6C6200 		.ascii	"_lb\000"
 5114 0583 05       		.byte	0x5
 5115 0584 D7       		.byte	0xd7
 5116 0585 CC020000 		.4byte	0x2cc
 5117 0589 48       		.byte	0x48
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 133


 5118 058a 0E       		.uleb128 0xe
 5119 058b BB6B0000 		.4byte	.LASF1136
 5120 058f 05       		.byte	0x5
 5121 0590 DA       		.byte	0xda
 5122 0591 7A000000 		.4byte	0x7a
 5123 0595 50       		.byte	0x50
 5124 0596 0E       		.uleb128 0xe
 5125 0597 5C3D0000 		.4byte	.LASF1137
 5126 059b 05       		.byte	0x5
 5127 059c DB       		.byte	0xdb
 5128 059d A0000000 		.4byte	0xa0
 5129 05a1 54       		.byte	0x54
 5130 05a2 0E       		.uleb128 0xe
 5131 05a3 E60B0000 		.4byte	.LASF1138
 5132 05a7 05       		.byte	0x5
 5133 05a8 E2       		.byte	0xe2
 5134 05a9 24010000 		.4byte	0x124
 5135 05ad 58       		.byte	0x58
 5136 05ae 0E       		.uleb128 0xe
 5137 05af E05B0000 		.4byte	.LASF1139
 5138 05b3 05       		.byte	0x5
 5139 05b4 E4       		.byte	0xe4
 5140 05b5 19010000 		.4byte	0x119
 5141 05b9 5C       		.byte	0x5c
 5142 05ba 0E       		.uleb128 0xe
 5143 05bb 07560000 		.4byte	.LASF1140
 5144 05bf 05       		.byte	0x5
 5145 05c0 E5       		.byte	0xe5
 5146 05c1 7A000000 		.4byte	0x7a
 5147 05c5 64       		.byte	0x64
 5148 05c6 00       		.byte	0
 5149 05c7 18       		.uleb128 0x18
 5150 05c8 7A000000 		.4byte	0x7a
 5151 05cc E5050000 		.4byte	0x5e5
 5152 05d0 19       		.uleb128 0x19
 5153 05d1 92040000 		.4byte	0x492
 5154 05d5 19       		.uleb128 0x19
 5155 05d6 93000000 		.4byte	0x93
 5156 05da 19       		.uleb128 0x19
 5157 05db E5050000 		.4byte	0x5e5
 5158 05df 19       		.uleb128 0x19
 5159 05e0 7A000000 		.4byte	0x7a
 5160 05e4 00       		.byte	0
 5161 05e5 11       		.uleb128 0x11
 5162 05e6 04       		.byte	0x4
 5163 05e7 EB050000 		.4byte	0x5eb
 5164 05eb 02       		.uleb128 0x2
 5165 05ec 01       		.byte	0x1
 5166 05ed 08       		.byte	0x8
 5167 05ee A9610000 		.4byte	.LASF1141
 5168 05f2 03       		.uleb128 0x3
 5169 05f3 EB050000 		.4byte	0x5eb
 5170 05f7 11       		.uleb128 0x11
 5171 05f8 04       		.byte	0x4
 5172 05f9 C7050000 		.4byte	0x5c7
 5173 05fd 18       		.uleb128 0x18
 5174 05fe 7A000000 		.4byte	0x7a
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 134


 5175 0602 1B060000 		.4byte	0x61b
 5176 0606 19       		.uleb128 0x19
 5177 0607 92040000 		.4byte	0x492
 5178 060b 19       		.uleb128 0x19
 5179 060c 93000000 		.4byte	0x93
 5180 0610 19       		.uleb128 0x19
 5181 0611 1B060000 		.4byte	0x61b
 5182 0615 19       		.uleb128 0x19
 5183 0616 7A000000 		.4byte	0x7a
 5184 061a 00       		.byte	0
 5185 061b 11       		.uleb128 0x11
 5186 061c 04       		.byte	0x4
 5187 061d F2050000 		.4byte	0x5f2
 5188 0621 11       		.uleb128 0x11
 5189 0622 04       		.byte	0x4
 5190 0623 FD050000 		.4byte	0x5fd
 5191 0627 18       		.uleb128 0x18
 5192 0628 AB000000 		.4byte	0xab
 5193 062c 45060000 		.4byte	0x645
 5194 0630 19       		.uleb128 0x19
 5195 0631 92040000 		.4byte	0x492
 5196 0635 19       		.uleb128 0x19
 5197 0636 93000000 		.4byte	0x93
 5198 063a 19       		.uleb128 0x19
 5199 063b AB000000 		.4byte	0xab
 5200 063f 19       		.uleb128 0x19
 5201 0640 7A000000 		.4byte	0x7a
 5202 0644 00       		.byte	0
 5203 0645 11       		.uleb128 0x11
 5204 0646 04       		.byte	0x4
 5205 0647 27060000 		.4byte	0x627
 5206 064b 18       		.uleb128 0x18
 5207 064c 7A000000 		.4byte	0x7a
 5208 0650 5F060000 		.4byte	0x65f
 5209 0654 19       		.uleb128 0x19
 5210 0655 92040000 		.4byte	0x492
 5211 0659 19       		.uleb128 0x19
 5212 065a 93000000 		.4byte	0x93
 5213 065e 00       		.byte	0
 5214 065f 11       		.uleb128 0x11
 5215 0660 04       		.byte	0x4
 5216 0661 4B060000 		.4byte	0x64b
 5217 0665 0B       		.uleb128 0xb
 5218 0666 3A000000 		.4byte	0x3a
 5219 066a 75060000 		.4byte	0x675
 5220 066e 0C       		.uleb128 0xc
 5221 066f F1000000 		.4byte	0xf1
 5222 0673 02       		.byte	0x2
 5223 0674 00       		.byte	0
 5224 0675 0B       		.uleb128 0xb
 5225 0676 3A000000 		.4byte	0x3a
 5226 067a 85060000 		.4byte	0x685
 5227 067e 0C       		.uleb128 0xc
 5228 067f F1000000 		.4byte	0xf1
 5229 0683 00       		.byte	0
 5230 0684 00       		.byte	0
 5231 0685 08       		.uleb128 0x8
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 135


 5232 0686 B06F0000 		.4byte	.LASF1142
 5233 068a 05       		.byte	0x5
 5234 068b 1F01     		.2byte	0x11f
 5235 068d 9D040000 		.4byte	0x49d
 5236 0691 15       		.uleb128 0x15
 5237 0692 48520000 		.4byte	.LASF1143
 5238 0696 0C       		.byte	0xc
 5239 0697 05       		.byte	0x5
 5240 0698 2301     		.2byte	0x123
 5241 069a C6060000 		.4byte	0x6c6
 5242 069e 16       		.uleb128 0x16
 5243 069f 2B720000 		.4byte	.LASF1074
 5244 06a3 05       		.byte	0x5
 5245 06a4 2501     		.2byte	0x125
 5246 06a6 C6060000 		.4byte	0x6c6
 5247 06aa 00       		.byte	0
 5248 06ab 16       		.uleb128 0x16
 5249 06ac 384E0000 		.4byte	.LASF1144
 5250 06b0 05       		.byte	0x5
 5251 06b1 2601     		.2byte	0x126
 5252 06b3 7A000000 		.4byte	0x7a
 5253 06b7 04       		.byte	0x4
 5254 06b8 16       		.uleb128 0x16
 5255 06b9 0A3E0000 		.4byte	.LASF1145
 5256 06bd 05       		.byte	0x5
 5257 06be 2701     		.2byte	0x127
 5258 06c0 CC060000 		.4byte	0x6cc
 5259 06c4 08       		.byte	0x8
 5260 06c5 00       		.byte	0
 5261 06c6 11       		.uleb128 0x11
 5262 06c7 04       		.byte	0x4
 5263 06c8 91060000 		.4byte	0x691
 5264 06cc 11       		.uleb128 0x11
 5265 06cd 04       		.byte	0x4
 5266 06ce 85060000 		.4byte	0x685
 5267 06d2 15       		.uleb128 0x15
 5268 06d3 ED690000 		.4byte	.LASF1146
 5269 06d7 18       		.byte	0x18
 5270 06d8 05       		.byte	0x5
 5271 06d9 3F01     		.2byte	0x13f
 5272 06db 14070000 		.4byte	0x714
 5273 06df 16       		.uleb128 0x16
 5274 06e0 E7640000 		.4byte	.LASF1147
 5275 06e4 05       		.byte	0x5
 5276 06e5 4001     		.2byte	0x140
 5277 06e7 14070000 		.4byte	0x714
 5278 06eb 00       		.byte	0
 5279 06ec 16       		.uleb128 0x16
 5280 06ed 800F0000 		.4byte	.LASF1148
 5281 06f1 05       		.byte	0x5
 5282 06f2 4101     		.2byte	0x141
 5283 06f4 14070000 		.4byte	0x714
 5284 06f8 06       		.byte	0x6
 5285 06f9 16       		.uleb128 0x16
 5286 06fa DE8F0000 		.4byte	.LASF1149
 5287 06fe 05       		.byte	0x5
 5288 06ff 4201     		.2byte	0x142
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 136


 5289 0701 4D000000 		.4byte	0x4d
 5290 0705 0C       		.byte	0xc
 5291 0706 16       		.uleb128 0x16
 5292 0707 795C0000 		.4byte	.LASF1150
 5293 070b 05       		.byte	0x5
 5294 070c 4501     		.2byte	0x145
 5295 070e 73000000 		.4byte	0x73
 5296 0712 10       		.byte	0x10
 5297 0713 00       		.byte	0
 5298 0714 0B       		.uleb128 0xb
 5299 0715 4D000000 		.4byte	0x4d
 5300 0719 24070000 		.4byte	0x724
 5301 071d 0C       		.uleb128 0xc
 5302 071e F1000000 		.4byte	0xf1
 5303 0722 02       		.byte	0x2
 5304 0723 00       		.byte	0
 5305 0724 15       		.uleb128 0x15
 5306 0725 4D8A0000 		.4byte	.LASF1151
 5307 0729 10       		.byte	0x10
 5308 072a 05       		.byte	0x5
 5309 072b 5801     		.2byte	0x158
 5310 072d 66070000 		.4byte	0x766
 5311 0731 16       		.uleb128 0x16
 5312 0732 E08B0000 		.4byte	.LASF1152
 5313 0736 05       		.byte	0x5
 5314 0737 5B01     		.2byte	0x15b
 5315 0739 8D010000 		.4byte	0x18d
 5316 073d 00       		.byte	0
 5317 073e 16       		.uleb128 0x16
 5318 073f 9F1B0000 		.4byte	.LASF1153
 5319 0743 05       		.byte	0x5
 5320 0744 5C01     		.2byte	0x15c
 5321 0746 7A000000 		.4byte	0x7a
 5322 074a 04       		.byte	0x4
 5323 074b 16       		.uleb128 0x16
 5324 074c 563A0000 		.4byte	.LASF1154
 5325 0750 05       		.byte	0x5
 5326 0751 5D01     		.2byte	0x15d
 5327 0753 8D010000 		.4byte	0x18d
 5328 0757 08       		.byte	0x8
 5329 0758 16       		.uleb128 0x16
 5330 0759 BF510000 		.4byte	.LASF1155
 5331 075d 05       		.byte	0x5
 5332 075e 5E01     		.2byte	0x15e
 5333 0760 66070000 		.4byte	0x766
 5334 0764 0C       		.byte	0xc
 5335 0765 00       		.byte	0
 5336 0766 11       		.uleb128 0x11
 5337 0767 04       		.byte	0x4
 5338 0768 8D010000 		.4byte	0x18d
 5339 076c 15       		.uleb128 0x15
 5340 076d A3200000 		.4byte	.LASF1156
 5341 0771 50       		.byte	0x50
 5342 0772 05       		.byte	0x5
 5343 0773 6201     		.2byte	0x162
 5344 0775 09080000 		.4byte	0x809
 5345 0779 16       		.uleb128 0x16
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 137


 5346 077a 546D0000 		.4byte	.LASF1157
 5347 077e 05       		.byte	0x5
 5348 077f 6501     		.2byte	0x165
 5349 0781 E5050000 		.4byte	0x5e5
 5350 0785 00       		.byte	0
 5351 0786 16       		.uleb128 0x16
 5352 0787 DC7B0000 		.4byte	.LASF1158
 5353 078b 05       		.byte	0x5
 5354 078c 6601     		.2byte	0x166
 5355 078e 19010000 		.4byte	0x119
 5356 0792 04       		.byte	0x4
 5357 0793 16       		.uleb128 0x16
 5358 0794 C05B0000 		.4byte	.LASF1159
 5359 0798 05       		.byte	0x5
 5360 0799 6701     		.2byte	0x167
 5361 079b 19010000 		.4byte	0x119
 5362 079f 0C       		.byte	0xc
 5363 07a0 16       		.uleb128 0x16
 5364 07a1 CC660000 		.4byte	.LASF1160
 5365 07a5 05       		.byte	0x5
 5366 07a6 6801     		.2byte	0x168
 5367 07a8 19010000 		.4byte	0x119
 5368 07ac 14       		.byte	0x14
 5369 07ad 16       		.uleb128 0x16
 5370 07ae E3080000 		.4byte	.LASF1161
 5371 07b2 05       		.byte	0x5
 5372 07b3 6901     		.2byte	0x169
 5373 07b5 09080000 		.4byte	0x809
 5374 07b9 1C       		.byte	0x1c
 5375 07ba 16       		.uleb128 0x16
 5376 07bb 730F0000 		.4byte	.LASF1162
 5377 07bf 05       		.byte	0x5
 5378 07c0 6A01     		.2byte	0x16a
 5379 07c2 7A000000 		.4byte	0x7a
 5380 07c6 24       		.byte	0x24
 5381 07c7 16       		.uleb128 0x16
 5382 07c8 101B0000 		.4byte	.LASF1163
 5383 07cc 05       		.byte	0x5
 5384 07cd 6B01     		.2byte	0x16b
 5385 07cf 19010000 		.4byte	0x119
 5386 07d3 28       		.byte	0x28
 5387 07d4 16       		.uleb128 0x16
 5388 07d5 AC6D0000 		.4byte	.LASF1164
 5389 07d9 05       		.byte	0x5
 5390 07da 6C01     		.2byte	0x16c
 5391 07dc 19010000 		.4byte	0x119
 5392 07e0 30       		.byte	0x30
 5393 07e1 16       		.uleb128 0x16
 5394 07e2 6C950000 		.4byte	.LASF1165
 5395 07e6 05       		.byte	0x5
 5396 07e7 6D01     		.2byte	0x16d
 5397 07e9 19010000 		.4byte	0x119
 5398 07ed 38       		.byte	0x38
 5399 07ee 16       		.uleb128 0x16
 5400 07ef AB590000 		.4byte	.LASF1166
 5401 07f3 05       		.byte	0x5
 5402 07f4 6E01     		.2byte	0x16e
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 138


 5403 07f6 19010000 		.4byte	0x119
 5404 07fa 40       		.byte	0x40
 5405 07fb 16       		.uleb128 0x16
 5406 07fc 6E080000 		.4byte	.LASF1167
 5407 0800 05       		.byte	0x5
 5408 0801 6F01     		.2byte	0x16f
 5409 0803 19010000 		.4byte	0x119
 5410 0807 48       		.byte	0x48
 5411 0808 00       		.byte	0
 5412 0809 0B       		.uleb128 0xb
 5413 080a EB050000 		.4byte	0x5eb
 5414 080e 19080000 		.4byte	0x819
 5415 0812 0C       		.uleb128 0xc
 5416 0813 F1000000 		.4byte	0xf1
 5417 0817 07       		.byte	0x7
 5418 0818 00       		.byte	0
 5419 0819 1A       		.uleb128 0x1a
 5420 081a A8010000 		.4byte	.LASF1337
 5421 081e 11       		.uleb128 0x11
 5422 081f 04       		.byte	0x4
 5423 0820 19080000 		.4byte	0x819
 5424 0824 11       		.uleb128 0x11
 5425 0825 04       		.byte	0x4
 5426 0826 24070000 		.4byte	0x724
 5427 082a 1B       		.uleb128 0x1b
 5428 082b 35080000 		.4byte	0x835
 5429 082f 19       		.uleb128 0x19
 5430 0830 92040000 		.4byte	0x492
 5431 0834 00       		.byte	0
 5432 0835 11       		.uleb128 0x11
 5433 0836 04       		.byte	0x4
 5434 0837 2A080000 		.4byte	0x82a
 5435 083b 11       		.uleb128 0x11
 5436 083c 04       		.byte	0x4
 5437 083d D2060000 		.4byte	0x6d2
 5438 0841 11       		.uleb128 0x11
 5439 0842 04       		.byte	0x4
 5440 0843 A3010000 		.4byte	0x1a3
 5441 0847 1B       		.uleb128 0x1b
 5442 0848 52080000 		.4byte	0x852
 5443 084c 19       		.uleb128 0x19
 5444 084d 7A000000 		.4byte	0x7a
 5445 0851 00       		.byte	0
 5446 0852 11       		.uleb128 0x11
 5447 0853 04       		.byte	0x4
 5448 0854 58080000 		.4byte	0x858
 5449 0858 11       		.uleb128 0x11
 5450 0859 04       		.byte	0x4
 5451 085a 47080000 		.4byte	0x847
 5452 085e 11       		.uleb128 0x11
 5453 085f 04       		.byte	0x4
 5454 0860 6C070000 		.4byte	0x76c
 5455 0864 1C       		.uleb128 0x1c
 5456 0865 86230000 		.4byte	.LASF1168
 5457 0869 05       		.byte	0x5
 5458 086a A501     		.2byte	0x1a5
 5459 086c 61030000 		.4byte	0x361
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 139


 5460 0870 1C       		.uleb128 0x1c
 5461 0871 61550000 		.4byte	.LASF1169
 5462 0875 05       		.byte	0x5
 5463 0876 A601     		.2byte	0x1a6
 5464 0878 61030000 		.4byte	0x361
 5465 087c 1C       		.uleb128 0x1c
 5466 087d 3E450000 		.4byte	.LASF1170
 5467 0881 05       		.byte	0x5
 5468 0882 A701     		.2byte	0x1a7
 5469 0884 61030000 		.4byte	0x361
 5470 0888 1C       		.uleb128 0x1c
 5471 0889 341B0000 		.4byte	.LASF1171
 5472 088d 05       		.byte	0x5
 5473 088e FE02     		.2byte	0x2fe
 5474 0890 92040000 		.4byte	0x492
 5475 0894 1C       		.uleb128 0x1c
 5476 0895 00600000 		.4byte	.LASF1172
 5477 0899 05       		.byte	0x5
 5478 089a FF02     		.2byte	0x2ff
 5479 089c 98040000 		.4byte	0x498
 5480 08a0 1C       		.uleb128 0x1c
 5481 08a1 AE050000 		.4byte	.LASF1173
 5482 08a5 05       		.byte	0x5
 5483 08a6 1103     		.2byte	0x311
 5484 08a8 A9020000 		.4byte	0x2a9
 5485 08ac 1D       		.uleb128 0x1d
 5486 08ad 29800000 		.4byte	.LASF1174
 5487 08b1 06       		.byte	0x6
 5488 08b2 63       		.byte	0x63
 5489 08b3 E5050000 		.4byte	0x5e5
 5490 08b7 06       		.uleb128 0x6
 5491 08b8 FC560000 		.4byte	.LASF1175
 5492 08bc 07       		.byte	0x7
 5493 08bd 3A       		.byte	0x3a
 5494 08be C2080000 		.4byte	0x8c2
 5495 08c2 11       		.uleb128 0x11
 5496 08c3 04       		.byte	0x4
 5497 08c4 C8080000 		.4byte	0x8c8
 5498 08c8 1B       		.uleb128 0x1b
 5499 08c9 D3080000 		.4byte	0x8d3
 5500 08cd 19       		.uleb128 0x19
 5501 08ce 93000000 		.4byte	0x93
 5502 08d2 00       		.byte	0
 5503 08d3 1D       		.uleb128 0x1d
 5504 08d4 02140000 		.4byte	.LASF1176
 5505 08d8 08       		.byte	0x8
 5506 08d9 3E       		.byte	0x3e
 5507 08da 67000000 		.4byte	0x67
 5508 08de 06       		.uleb128 0x6
 5509 08df C5560000 		.4byte	.LASF1177
 5510 08e3 09       		.byte	0x9
 5511 08e4 55       		.byte	0x55
 5512 08e5 60000000 		.4byte	0x60
 5513 08e9 04       		.uleb128 0x4
 5514 08ea DE080000 		.4byte	0x8de
 5515 08ee 0F       		.uleb128 0xf
 5516 08ef F7500000 		.4byte	.LASF1178
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 140


 5517 08f3 14       		.byte	0x14
 5518 08f4 0A       		.byte	0xa
 5519 08f5 62       		.byte	0x62
 5520 08f6 37090000 		.4byte	0x937
 5521 08fa 0E       		.uleb128 0xe
 5522 08fb 579B0000 		.4byte	.LASF1179
 5523 08ff 0A       		.byte	0xa
 5524 0900 64       		.byte	0x64
 5525 0901 DE080000 		.4byte	0x8de
 5526 0905 00       		.byte	0
 5527 0906 0E       		.uleb128 0xe
 5528 0907 53110000 		.4byte	.LASF1180
 5529 090b 0A       		.byte	0xa
 5530 090c 65       		.byte	0x65
 5531 090d 3C090000 		.4byte	0x93c
 5532 0911 04       		.byte	0x4
 5533 0912 0E       		.uleb128 0xe
 5534 0913 706B0000 		.4byte	.LASF1181
 5535 0917 0A       		.byte	0xa
 5536 0918 66       		.byte	0x66
 5537 0919 3C090000 		.4byte	0x93c
 5538 091d 08       		.byte	0x8
 5539 091e 0E       		.uleb128 0xe
 5540 091f 6D4C0000 		.4byte	.LASF1182
 5541 0923 0A       		.byte	0xa
 5542 0924 67       		.byte	0x67
 5543 0925 93000000 		.4byte	0x93
 5544 0929 0C       		.byte	0xc
 5545 092a 0E       		.uleb128 0xe
 5546 092b 9A4C0000 		.4byte	.LASF1183
 5547 092f 0A       		.byte	0xa
 5548 0930 68       		.byte	0x68
 5549 0931 93000000 		.4byte	0x93
 5550 0935 10       		.byte	0x10
 5551 0936 00       		.byte	0
 5552 0937 04       		.uleb128 0x4
 5553 0938 EE080000 		.4byte	0x8ee
 5554 093c 11       		.uleb128 0x11
 5555 093d 04       		.byte	0x4
 5556 093e 37090000 		.4byte	0x937
 5557 0942 06       		.uleb128 0x6
 5558 0943 0D710000 		.4byte	.LASF1184
 5559 0947 0A       		.byte	0xa
 5560 0948 6A       		.byte	0x6a
 5561 0949 EE080000 		.4byte	0x8ee
 5562 094d 04       		.uleb128 0x4
 5563 094e 42090000 		.4byte	0x942
 5564 0952 0F       		.uleb128 0xf
 5565 0953 182E0000 		.4byte	.LASF1185
 5566 0957 0C       		.byte	0xc
 5567 0958 0A       		.byte	0xa
 5568 0959 6C       		.byte	0x6c
 5569 095a 83090000 		.4byte	0x983
 5570 095e 0E       		.uleb128 0xe
 5571 095f 579B0000 		.4byte	.LASF1179
 5572 0963 0A       		.byte	0xa
 5573 0964 6E       		.byte	0x6e
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 141


 5574 0965 DE080000 		.4byte	0x8de
 5575 0969 00       		.byte	0
 5576 096a 0E       		.uleb128 0xe
 5577 096b 53110000 		.4byte	.LASF1180
 5578 096f 0A       		.byte	0xa
 5579 0970 6F       		.byte	0x6f
 5580 0971 3C090000 		.4byte	0x93c
 5581 0975 04       		.byte	0x4
 5582 0976 0E       		.uleb128 0xe
 5583 0977 706B0000 		.4byte	.LASF1181
 5584 097b 0A       		.byte	0xa
 5585 097c 70       		.byte	0x70
 5586 097d 3C090000 		.4byte	0x93c
 5587 0981 08       		.byte	0x8
 5588 0982 00       		.byte	0
 5589 0983 06       		.uleb128 0x6
 5590 0984 6D650000 		.4byte	.LASF1186
 5591 0988 0A       		.byte	0xa
 5592 0989 72       		.byte	0x72
 5593 098a 52090000 		.4byte	0x952
 5594 098e 04       		.uleb128 0x4
 5595 098f 83090000 		.4byte	0x983
 5596 0993 0F       		.uleb128 0xf
 5597 0994 A4790000 		.4byte	.LASF1187
 5598 0998 14       		.byte	0x14
 5599 0999 0A       		.byte	0xa
 5600 099a 77       		.byte	0x77
 5601 099b C4090000 		.4byte	0x9c4
 5602 099f 0E       		.uleb128 0xe
 5603 09a0 7F580000 		.4byte	.LASF1188
 5604 09a4 0A       		.byte	0xa
 5605 09a5 79       		.byte	0x79
 5606 09a6 67000000 		.4byte	0x67
 5607 09aa 00       		.byte	0
 5608 09ab 0E       		.uleb128 0xe
 5609 09ac 0E2B0000 		.4byte	.LASF1189
 5610 09b0 0A       		.byte	0xa
 5611 09b1 7A       		.byte	0x7a
 5612 09b2 C4090000 		.4byte	0x9c4
 5613 09b6 04       		.byte	0x4
 5614 09b7 0E       		.uleb128 0xe
 5615 09b8 415F0000 		.4byte	.LASF1190
 5616 09bc 0A       		.byte	0xa
 5617 09bd 7B       		.byte	0x7b
 5618 09be 8E090000 		.4byte	0x98e
 5619 09c2 08       		.byte	0x8
 5620 09c3 00       		.byte	0
 5621 09c4 11       		.uleb128 0x11
 5622 09c5 04       		.byte	0x4
 5623 09c6 4D090000 		.4byte	0x94d
 5624 09ca 06       		.uleb128 0x6
 5625 09cb C6660000 		.4byte	.LASF1191
 5626 09cf 0A       		.byte	0xa
 5627 09d0 7C       		.byte	0x7c
 5628 09d1 93090000 		.4byte	0x993
 5629 09d5 04       		.uleb128 0x4
 5630 09d6 CA090000 		.4byte	0x9ca
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 142


 5631 09da 03       		.uleb128 0x3
 5632 09db CA090000 		.4byte	0x9ca
 5633 09df 06       		.uleb128 0x6
 5634 09e0 91520000 		.4byte	.LASF1192
 5635 09e4 0B       		.byte	0xb
 5636 09e5 57       		.byte	0x57
 5637 09e6 93000000 		.4byte	0x93
 5638 09ea 0F       		.uleb128 0xf
 5639 09eb 48060000 		.4byte	.LASF1193
 5640 09ef 08       		.byte	0x8
 5641 09f0 0B       		.byte	0xb
 5642 09f1 5C       		.byte	0x5c
 5643 09f2 0F0A0000 		.4byte	0xa0f
 5644 09f6 0E       		.uleb128 0xe
 5645 09f7 3C400000 		.4byte	.LASF1194
 5646 09fb 0B       		.byte	0xb
 5647 09fc 5E       		.byte	0x5e
 5648 09fd 54000000 		.4byte	0x54
 5649 0a01 00       		.byte	0
 5650 0a02 0E       		.uleb128 0xe
 5651 0a03 D3290000 		.4byte	.LASF1195
 5652 0a07 0B       		.byte	0xb
 5653 0a08 5F       		.byte	0x5f
 5654 0a09 DE080000 		.4byte	0x8de
 5655 0a0d 04       		.byte	0x4
 5656 0a0e 00       		.byte	0
 5657 0a0f 06       		.uleb128 0x6
 5658 0a10 6F880000 		.4byte	.LASF1196
 5659 0a14 0B       		.byte	0xb
 5660 0a15 60       		.byte	0x60
 5661 0a16 EA090000 		.4byte	0x9ea
 5662 0a1a 0F       		.uleb128 0xf
 5663 0a1b DF570000 		.4byte	.LASF1197
 5664 0a1f 0C       		.byte	0xc
 5665 0a20 0B       		.byte	0xb
 5666 0a21 65       		.byte	0x65
 5667 0a22 4B0A0000 		.4byte	0xa4b
 5668 0a26 0E       		.uleb128 0xe
 5669 0a27 834B0000 		.4byte	.LASF1198
 5670 0a2b 0B       		.byte	0xb
 5671 0a2c 67       		.byte	0x67
 5672 0a2d 93000000 		.4byte	0x93
 5673 0a31 00       		.byte	0
 5674 0a32 0E       		.uleb128 0xe
 5675 0a33 82790000 		.4byte	.LASF1199
 5676 0a37 0B       		.byte	0xb
 5677 0a38 68       		.byte	0x68
 5678 0a39 60000000 		.4byte	0x60
 5679 0a3d 04       		.byte	0x4
 5680 0a3e 0E       		.uleb128 0xe
 5681 0a3f 1F970000 		.4byte	.LASF1200
 5682 0a43 0B       		.byte	0xb
 5683 0a44 69       		.byte	0x69
 5684 0a45 60000000 		.4byte	0x60
 5685 0a49 08       		.byte	0x8
 5686 0a4a 00       		.byte	0
 5687 0a4b 06       		.uleb128 0x6
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 143


 5688 0a4c 00000000 		.4byte	.LASF1201
 5689 0a50 0B       		.byte	0xb
 5690 0a51 6A       		.byte	0x6a
 5691 0a52 1A0A0000 		.4byte	0xa1a
 5692 0a56 03       		.uleb128 0x3
 5693 0a57 4B0A0000 		.4byte	0xa4b
 5694 0a5b 11       		.uleb128 0x11
 5695 0a5c 04       		.byte	0x4
 5696 0a5d 30000000 		.4byte	0x30
 5697 0a61 03       		.uleb128 0x3
 5698 0a62 5B0A0000 		.4byte	0xa5b
 5699 0a66 11       		.uleb128 0x11
 5700 0a67 04       		.byte	0x4
 5701 0a68 60000000 		.4byte	0x60
 5702 0a6c 0F       		.uleb128 0xf
 5703 0a6d EB650000 		.4byte	.LASF1202
 5704 0a71 50       		.byte	0x50
 5705 0a72 01       		.byte	0x1
 5706 0a73 4F       		.byte	0x4f
 5707 0a74 E50A0000 		.4byte	0xae5
 5708 0a78 0E       		.uleb128 0xe
 5709 0a79 162B0000 		.4byte	.LASF1203
 5710 0a7d 01       		.byte	0x1
 5711 0a7e 51       		.byte	0x51
 5712 0a7f E50A0000 		.4byte	0xae5
 5713 0a83 00       		.byte	0
 5714 0a84 0E       		.uleb128 0xe
 5715 0a85 048F0000 		.4byte	.LASF1204
 5716 0a89 01       		.byte	0x1
 5717 0a8a 57       		.byte	0x57
 5718 0a8b 42090000 		.4byte	0x942
 5719 0a8f 04       		.byte	0x4
 5720 0a90 0E       		.uleb128 0xe
 5721 0a91 60040000 		.4byte	.LASF1205
 5722 0a95 01       		.byte	0x1
 5723 0a96 58       		.byte	0x58
 5724 0a97 42090000 		.4byte	0x942
 5725 0a9b 18       		.byte	0x18
 5726 0a9c 0E       		.uleb128 0xe
 5727 0a9d AA9B0000 		.4byte	.LASF1206
 5728 0aa1 01       		.byte	0x1
 5729 0aa2 59       		.byte	0x59
 5730 0aa3 60000000 		.4byte	0x60
 5731 0aa7 2C       		.byte	0x2c
 5732 0aa8 0E       		.uleb128 0xe
 5733 0aa9 7C0A0000 		.4byte	.LASF1207
 5734 0aad 01       		.byte	0x1
 5735 0aae 5A       		.byte	0x5a
 5736 0aaf 660A0000 		.4byte	0xa66
 5737 0ab3 30       		.byte	0x30
 5738 0ab4 0E       		.uleb128 0xe
 5739 0ab5 CC640000 		.4byte	.LASF1208
 5740 0ab9 01       		.byte	0x1
 5741 0aba 5B       		.byte	0x5b
 5742 0abb EB0A0000 		.4byte	0xaeb
 5743 0abf 34       		.byte	0x34
 5744 0ac0 0E       		.uleb128 0xe
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 144


 5745 0ac1 35870000 		.4byte	.LASF1209
 5746 0ac5 01       		.byte	0x1
 5747 0ac6 66       		.byte	0x66
 5748 0ac7 60000000 		.4byte	0x60
 5749 0acb 44       		.byte	0x44
 5750 0acc 0E       		.uleb128 0xe
 5751 0acd E6130000 		.4byte	.LASF1210
 5752 0ad1 01       		.byte	0x1
 5753 0ad2 6A       		.byte	0x6a
 5754 0ad3 60000000 		.4byte	0x60
 5755 0ad7 48       		.byte	0x48
 5756 0ad8 0E       		.uleb128 0xe
 5757 0ad9 CB310000 		.4byte	.LASF1211
 5758 0add 01       		.byte	0x1
 5759 0ade 72       		.byte	0x72
 5760 0adf 60000000 		.4byte	0x60
 5761 0ae3 4C       		.byte	0x4c
 5762 0ae4 00       		.byte	0
 5763 0ae5 11       		.uleb128 0x11
 5764 0ae6 04       		.byte	0x4
 5765 0ae7 67000000 		.4byte	0x67
 5766 0aeb 0B       		.uleb128 0xb
 5767 0aec 29000000 		.4byte	0x29
 5768 0af0 FB0A0000 		.4byte	0xafb
 5769 0af4 0C       		.uleb128 0xc
 5770 0af5 F1000000 		.4byte	0xf1
 5771 0af9 0F       		.byte	0xf
 5772 0afa 00       		.byte	0
 5773 0afb 06       		.uleb128 0x6
 5774 0afc 24140000 		.4byte	.LASF1212
 5775 0b00 01       		.byte	0x1
 5776 0b01 75       		.byte	0x75
 5777 0b02 6C0A0000 		.4byte	0xa6c
 5778 0b06 04       		.uleb128 0x4
 5779 0b07 FB0A0000 		.4byte	0xafb
 5780 0b0b 03       		.uleb128 0x3
 5781 0b0c FB0A0000 		.4byte	0xafb
 5782 0b10 1E       		.uleb128 0x1e
 5783 0b11 271B0000 		.4byte	.LASF1213
 5784 0b15 01       		.byte	0x1
 5785 0b16 81       		.byte	0x81
 5786 0b17 270B0000 		.4byte	0xb27
 5787 0b1b 05       		.uleb128 0x5
 5788 0b1c 03       		.byte	0x3
 5789 0b1d 00000000 		.4byte	pxCurrentTCB
 5790 0b21 11       		.uleb128 0x11
 5791 0b22 04       		.byte	0x4
 5792 0b23 FB0A0000 		.4byte	0xafb
 5793 0b27 04       		.uleb128 0x4
 5794 0b28 210B0000 		.4byte	0xb21
 5795 0b2c 03       		.uleb128 0x3
 5796 0b2d 210B0000 		.4byte	0xb21
 5797 0b31 0B       		.uleb128 0xb
 5798 0b32 CA090000 		.4byte	0x9ca
 5799 0b36 410B0000 		.4byte	0xb41
 5800 0b3a 0C       		.uleb128 0xc
 5801 0b3b F1000000 		.4byte	0xf1
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 145


 5802 0b3f 05       		.byte	0x5
 5803 0b40 00       		.byte	0
 5804 0b41 1F       		.uleb128 0x1f
 5805 0b42 48530000 		.4byte	.LASF1214
 5806 0b46 01       		.byte	0x1
 5807 0b47 85       		.byte	0x85
 5808 0b48 310B0000 		.4byte	0xb31
 5809 0b4c 05       		.uleb128 0x5
 5810 0b4d 03       		.byte	0x3
 5811 0b4e 00000000 		.4byte	pxReadyTasksLists
 5812 0b52 1F       		.uleb128 0x1f
 5813 0b53 48950000 		.4byte	.LASF1215
 5814 0b57 01       		.byte	0x1
 5815 0b58 86       		.byte	0x86
 5816 0b59 CA090000 		.4byte	0x9ca
 5817 0b5d 05       		.uleb128 0x5
 5818 0b5e 03       		.byte	0x3
 5819 0b5f 00000000 		.4byte	xDelayedTaskList1
 5820 0b63 1F       		.uleb128 0x1f
 5821 0b64 5A950000 		.4byte	.LASF1216
 5822 0b68 01       		.byte	0x1
 5823 0b69 87       		.byte	0x87
 5824 0b6a CA090000 		.4byte	0x9ca
 5825 0b6e 05       		.uleb128 0x5
 5826 0b6f 03       		.byte	0x3
 5827 0b70 00000000 		.4byte	xDelayedTaskList2
 5828 0b74 1F       		.uleb128 0x1f
 5829 0b75 92790000 		.4byte	.LASF1217
 5830 0b79 01       		.byte	0x1
 5831 0b7a 88       		.byte	0x88
 5832 0b7b 8B0B0000 		.4byte	0xb8b
 5833 0b7f 05       		.uleb128 0x5
 5834 0b80 03       		.byte	0x3
 5835 0b81 00000000 		.4byte	pxDelayedTaskList
 5836 0b85 11       		.uleb128 0x11
 5837 0b86 04       		.byte	0x4
 5838 0b87 CA090000 		.4byte	0x9ca
 5839 0b8b 04       		.uleb128 0x4
 5840 0b8c 850B0000 		.4byte	0xb85
 5841 0b90 03       		.uleb128 0x3
 5842 0b91 850B0000 		.4byte	0xb85
 5843 0b95 1F       		.uleb128 0x1f
 5844 0b96 957B0000 		.4byte	.LASF1218
 5845 0b9a 01       		.byte	0x1
 5846 0b9b 89       		.byte	0x89
 5847 0b9c 8B0B0000 		.4byte	0xb8b
 5848 0ba0 05       		.uleb128 0x5
 5849 0ba1 03       		.byte	0x3
 5850 0ba2 00000000 		.4byte	pxOverflowDelayedTaskList
 5851 0ba6 1F       		.uleb128 0x1f
 5852 0ba7 17360000 		.4byte	.LASF1219
 5853 0bab 01       		.byte	0x1
 5854 0bac 8A       		.byte	0x8a
 5855 0bad CA090000 		.4byte	0x9ca
 5856 0bb1 05       		.uleb128 0x5
 5857 0bb2 03       		.byte	0x3
 5858 0bb3 00000000 		.4byte	xPendingReadyList
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 146


 5859 0bb7 1F       		.uleb128 0x1f
 5860 0bb8 B1840000 		.4byte	.LASF1220
 5861 0bbc 01       		.byte	0x1
 5862 0bbd 8E       		.byte	0x8e
 5863 0bbe D5090000 		.4byte	0x9d5
 5864 0bc2 05       		.uleb128 0x5
 5865 0bc3 03       		.byte	0x3
 5866 0bc4 00000000 		.4byte	xTasksWaitingTermination
 5867 0bc8 1F       		.uleb128 0x1f
 5868 0bc9 753D0000 		.4byte	.LASF1221
 5869 0bcd 01       		.byte	0x1
 5870 0bce 8F       		.byte	0x8f
 5871 0bcf 67000000 		.4byte	0x67
 5872 0bd3 05       		.uleb128 0x5
 5873 0bd4 03       		.byte	0x3
 5874 0bd5 00000000 		.4byte	uxTasksDeleted
 5875 0bd9 1F       		.uleb128 0x1f
 5876 0bda 89220000 		.4byte	.LASF1222
 5877 0bde 01       		.byte	0x1
 5878 0bdf 95       		.byte	0x95
 5879 0be0 CA090000 		.4byte	0x9ca
 5880 0be4 05       		.uleb128 0x5
 5881 0be5 03       		.byte	0x3
 5882 0be6 00000000 		.4byte	xSuspendedTaskList
 5883 0bea 1F       		.uleb128 0x1f
 5884 0beb 863F0000 		.4byte	.LASF1223
 5885 0bef 01       		.byte	0x1
 5886 0bf0 9A       		.byte	0x9a
 5887 0bf1 67000000 		.4byte	0x67
 5888 0bf5 05       		.uleb128 0x5
 5889 0bf6 03       		.byte	0x3
 5890 0bf7 00000000 		.4byte	uxCurrentNumberOfTasks
 5891 0bfb 1F       		.uleb128 0x1f
 5892 0bfc E2060000 		.4byte	.LASF1224
 5893 0c00 01       		.byte	0x1
 5894 0c01 9B       		.byte	0x9b
 5895 0c02 E9080000 		.4byte	0x8e9
 5896 0c06 05       		.uleb128 0x5
 5897 0c07 03       		.byte	0x3
 5898 0c08 00000000 		.4byte	xTickCount
 5899 0c0c 1F       		.uleb128 0x1f
 5900 0c0d 7E9A0000 		.4byte	.LASF1225
 5901 0c11 01       		.byte	0x1
 5902 0c12 9C       		.byte	0x9c
 5903 0c13 60000000 		.4byte	0x60
 5904 0c17 05       		.uleb128 0x5
 5905 0c18 03       		.byte	0x3
 5906 0c19 00000000 		.4byte	uxTopUsedPriority
 5907 0c1d 1F       		.uleb128 0x1f
 5908 0c1e 1E710000 		.4byte	.LASF1226
 5909 0c22 01       		.byte	0x1
 5910 0c23 9D       		.byte	0x9d
 5911 0c24 67000000 		.4byte	0x67
 5912 0c28 05       		.uleb128 0x5
 5913 0c29 03       		.byte	0x3
 5914 0c2a 00000000 		.4byte	uxTopReadyPriority
 5915 0c2e 1F       		.uleb128 0x1f
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 147


 5916 0c2f 7C2C0000 		.4byte	.LASF1227
 5917 0c33 01       		.byte	0x1
 5918 0c34 9E       		.byte	0x9e
 5919 0c35 5B000000 		.4byte	0x5b
 5920 0c39 05       		.uleb128 0x5
 5921 0c3a 03       		.byte	0x3
 5922 0c3b 00000000 		.4byte	xSchedulerRunning
 5923 0c3f 1F       		.uleb128 0x1f
 5924 0c40 CD120000 		.4byte	.LASF1228
 5925 0c44 01       		.byte	0x1
 5926 0c45 9F       		.byte	0x9f
 5927 0c46 67000000 		.4byte	0x67
 5928 0c4a 05       		.uleb128 0x5
 5929 0c4b 03       		.byte	0x3
 5930 0c4c 00000000 		.4byte	uxSchedulerSuspended
 5931 0c50 1F       		.uleb128 0x1f
 5932 0c51 F4280000 		.4byte	.LASF1229
 5933 0c55 01       		.byte	0x1
 5934 0c56 A0       		.byte	0xa0
 5935 0c57 67000000 		.4byte	0x67
 5936 0c5b 05       		.uleb128 0x5
 5937 0c5c 03       		.byte	0x3
 5938 0c5d 00000000 		.4byte	uxMissedTicks
 5939 0c61 1F       		.uleb128 0x1f
 5940 0c62 108B0000 		.4byte	.LASF1230
 5941 0c66 01       		.byte	0x1
 5942 0c67 A1       		.byte	0xa1
 5943 0c68 5B000000 		.4byte	0x5b
 5944 0c6c 05       		.uleb128 0x5
 5945 0c6d 03       		.byte	0x3
 5946 0c6e 00000000 		.4byte	xMissedYield
 5947 0c72 1F       		.uleb128 0x1f
 5948 0c73 A1260000 		.4byte	.LASF1231
 5949 0c77 01       		.byte	0x1
 5950 0c78 A2       		.byte	0xa2
 5951 0c79 5B000000 		.4byte	0x5b
 5952 0c7d 05       		.uleb128 0x5
 5953 0c7e 03       		.byte	0x3
 5954 0c7f 00000000 		.4byte	xNumOfOverflows
 5955 0c83 1F       		.uleb128 0x1f
 5956 0c84 ED060000 		.4byte	.LASF1232
 5957 0c88 01       		.byte	0x1
 5958 0c89 A3       		.byte	0xa3
 5959 0c8a 60000000 		.4byte	0x60
 5960 0c8e 05       		.uleb128 0x5
 5961 0c8f 03       		.byte	0x3
 5962 0c90 00000000 		.4byte	uxTaskNumber
 5963 0c94 0B       		.uleb128 0xb
 5964 0c95 EB050000 		.4byte	0x5eb
 5965 0c99 A40C0000 		.4byte	0xca4
 5966 0c9d 0C       		.uleb128 0xc
 5967 0c9e F1000000 		.4byte	0xf1
 5968 0ca2 31       		.byte	0x31
 5969 0ca3 00       		.byte	0
 5970 0ca4 1F       		.uleb128 0x1f
 5971 0ca5 03700000 		.4byte	.LASF1233
 5972 0ca9 01       		.byte	0x1
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 148


 5973 0caa A7       		.byte	0xa7
 5974 0cab 940C0000 		.4byte	0xc94
 5975 0caf 05       		.uleb128 0x5
 5976 0cb0 03       		.byte	0x3
 5977 0cb1 00000000 		.4byte	pcStatsString
 5978 0cb5 1F       		.uleb128 0x1f
 5979 0cb6 DF840000 		.4byte	.LASF1234
 5980 0cba 01       		.byte	0x1
 5981 0cbb A8       		.byte	0xa8
 5982 0cbc 60000000 		.4byte	0x60
 5983 0cc0 05       		.uleb128 0x5
 5984 0cc1 03       		.byte	0x3
 5985 0cc2 00000000 		.4byte	ulTaskSwitchedInTime
 5986 0cc6 1F       		.uleb128 0x1f
 5987 0cc7 AC400000 		.4byte	.LASF1235
 5988 0ccb 01       		.byte	0x1
 5989 0ccc C3       		.byte	0xc3
 5990 0ccd DD0C0000 		.4byte	0xcdd
 5991 0cd1 05       		.uleb128 0x5
 5992 0cd2 03       		.byte	0x3
 5993 0cd3 00000000 		.4byte	pcTraceBuffer
 5994 0cd7 11       		.uleb128 0x11
 5995 0cd8 04       		.byte	0x4
 5996 0cd9 35000000 		.4byte	0x35
 5997 0cdd 04       		.uleb128 0x4
 5998 0cde D70C0000 		.4byte	0xcd7
 5999 0ce2 1F       		.uleb128 0x1f
 6000 0ce3 21690000 		.4byte	.LASF1236
 6001 0ce7 01       		.byte	0x1
 6002 0ce8 C4       		.byte	0xc4
 6003 0ce9 F30C0000 		.4byte	0xcf3
 6004 0ced 05       		.uleb128 0x5
 6005 0cee 03       		.byte	0x3
 6006 0cef 00000000 		.4byte	pcTraceBufferStart
 6007 0cf3 11       		.uleb128 0x11
 6008 0cf4 04       		.byte	0x4
 6009 0cf5 29000000 		.4byte	0x29
 6010 0cf9 1F       		.uleb128 0x1f
 6011 0cfa 0F430000 		.4byte	.LASF1237
 6012 0cfe 01       		.byte	0x1
 6013 0cff C5       		.byte	0xc5
 6014 0d00 F30C0000 		.4byte	0xcf3
 6015 0d04 05       		.uleb128 0x5
 6016 0d05 03       		.byte	0x3
 6017 0d06 00000000 		.4byte	pcTraceBufferEnd
 6018 0d0a 1F       		.uleb128 0x1f
 6019 0d0b 8F9B0000 		.4byte	.LASF1238
 6020 0d0f 01       		.byte	0x1
 6021 0d10 C6       		.byte	0xc6
 6022 0d11 54000000 		.4byte	0x54
 6023 0d15 05       		.uleb128 0x5
 6024 0d16 03       		.byte	0x3
 6025 0d17 00000000 		.4byte	xTracing
 6026 0d1b 1F       		.uleb128 0x1f
 6027 0d1c E50A0000 		.4byte	.LASF1239
 6028 0d20 01       		.byte	0x1
 6029 0d21 C7       		.byte	0xc7
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 149


 6030 0d22 60000000 		.4byte	0x60
 6031 0d26 05       		.uleb128 0x5
 6032 0d27 03       		.byte	0x3
 6033 0d28 00000000 		.4byte	uxPreviousTask
 6034 0d2c 1F       		.uleb128 0x1f
 6035 0d2d F7470000 		.4byte	.LASF1240
 6036 0d31 01       		.byte	0x1
 6037 0d32 C8       		.byte	0xc8
 6038 0d33 940C0000 		.4byte	0xc94
 6039 0d37 05       		.uleb128 0x5
 6040 0d38 03       		.byte	0x3
 6041 0d39 00000000 		.4byte	pcStatusString
 6042 0d3d 20       		.uleb128 0x20
 6043 0d3e 03590000 		.4byte	.LASF1242
 6044 0d42 01       		.byte	0x1
 6045 0d43 1109     		.2byte	0x911
 6046 0d45 00000000 		.4byte	.LFB41
 6047 0d49 7C000000 		.4byte	.LFE41-.LFB41
 6048 0d4d 01       		.uleb128 0x1
 6049 0d4e 9C       		.byte	0x9c
 6050 0d4f 720D0000 		.4byte	0xd72
 6051 0d53 21       		.uleb128 0x21
 6052 0d54 1A480000 		.4byte	.LASF1244
 6053 0d58 01       		.byte	0x1
 6054 0d59 1109     		.2byte	0x911
 6055 0d5b 780D0000 		.4byte	0xd78
 6056 0d5f 02       		.uleb128 0x2
 6057 0d60 91       		.byte	0x91
 6058 0d61 6C       		.sleb128 -20
 6059 0d62 22       		.uleb128 0x22
 6060 0d63 769B0000 		.4byte	.LASF1241
 6061 0d67 01       		.byte	0x1
 6062 0d68 1309     		.2byte	0x913
 6063 0d6a 2C0B0000 		.4byte	0xb2c
 6064 0d6e 02       		.uleb128 0x2
 6065 0d6f 91       		.byte	0x91
 6066 0d70 74       		.sleb128 -12
 6067 0d71 00       		.byte	0
 6068 0d72 11       		.uleb128 0x11
 6069 0d73 04       		.byte	0x4
 6070 0d74 DF090000 		.4byte	0x9df
 6071 0d78 03       		.uleb128 0x3
 6072 0d79 720D0000 		.4byte	0xd72
 6073 0d7d 20       		.uleb128 0x20
 6074 0d7e B7640000 		.4byte	.LASF1243
 6075 0d82 01       		.byte	0x1
 6076 0d83 F108     		.2byte	0x8f1
 6077 0d85 00000000 		.4byte	.LFB40
 6078 0d89 A4000000 		.4byte	.LFE40-.LFB40
 6079 0d8d 01       		.uleb128 0x1
 6080 0d8e 9C       		.byte	0x9c
 6081 0d8f B20D0000 		.4byte	0xdb2
 6082 0d93 21       		.uleb128 0x21
 6083 0d94 1A480000 		.4byte	.LASF1244
 6084 0d98 01       		.byte	0x1
 6085 0d99 F108     		.2byte	0x8f1
 6086 0d9b 780D0000 		.4byte	0xd78
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 150


 6087 0d9f 02       		.uleb128 0x2
 6088 0da0 91       		.byte	0x91
 6089 0da1 6C       		.sleb128 -20
 6090 0da2 22       		.uleb128 0x22
 6091 0da3 769B0000 		.4byte	.LASF1241
 6092 0da7 01       		.byte	0x1
 6093 0da8 F308     		.2byte	0x8f3
 6094 0daa 2C0B0000 		.4byte	0xb2c
 6095 0dae 02       		.uleb128 0x2
 6096 0daf 91       		.byte	0x91
 6097 0db0 74       		.sleb128 -12
 6098 0db1 00       		.byte	0
 6099 0db2 23       		.uleb128 0x23
 6100 0db3 F29A0000 		.4byte	.LASF1246
 6101 0db7 01       		.byte	0x1
 6102 0db8 C308     		.2byte	0x8c3
 6103 0dba DF090000 		.4byte	0x9df
 6104 0dbe 00000000 		.4byte	.LFB39
 6105 0dc2 1C000000 		.4byte	.LFE39-.LFB39
 6106 0dc6 01       		.uleb128 0x1
 6107 0dc7 9C       		.byte	0x9c
 6108 0dc8 DC0D0000 		.4byte	0xddc
 6109 0dcc 22       		.uleb128 0x22
 6110 0dcd 9E280000 		.4byte	.LASF1245
 6111 0dd1 01       		.byte	0x1
 6112 0dd2 C508     		.2byte	0x8c5
 6113 0dd4 DF090000 		.4byte	0x9df
 6114 0dd8 02       		.uleb128 0x2
 6115 0dd9 91       		.byte	0x91
 6116 0dda 74       		.sleb128 -12
 6117 0ddb 00       		.byte	0
 6118 0ddc 24       		.uleb128 0x24
 6119 0ddd 01580000 		.4byte	.LASF1253
 6120 0de1 01       		.byte	0x1
 6121 0de2 B408     		.2byte	0x8b4
 6122 0de4 00000000 		.4byte	.LFB38
 6123 0de8 20000000 		.4byte	.LFE38-.LFB38
 6124 0dec 01       		.uleb128 0x1
 6125 0ded 9C       		.byte	0x9c
 6126 0dee 020E0000 		.4byte	0xe02
 6127 0df2 21       		.uleb128 0x21
 6128 0df3 769B0000 		.4byte	.LASF1241
 6129 0df7 01       		.byte	0x1
 6130 0df8 B408     		.2byte	0x8b4
 6131 0dfa 210B0000 		.4byte	0xb21
 6132 0dfe 02       		.uleb128 0x2
 6133 0dff 91       		.byte	0x91
 6134 0e00 74       		.sleb128 -12
 6135 0e01 00       		.byte	0
 6136 0e02 25       		.uleb128 0x25
 6137 0e03 865A0000 		.4byte	.LASF1247
 6138 0e07 01       		.byte	0x1
 6139 0e08 9808     		.2byte	0x898
 6140 0e0a 60000000 		.4byte	0x60
 6141 0e0e 00000000 		.4byte	.LFB37
 6142 0e12 38000000 		.4byte	.LFE37-.LFB37
 6143 0e16 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 151


 6144 0e17 9C       		.byte	0x9c
 6145 0e18 590E0000 		.4byte	0xe59
 6146 0e1c 21       		.uleb128 0x21
 6147 0e1d AC100000 		.4byte	.LASF1248
 6148 0e21 01       		.byte	0x1
 6149 0e22 9808     		.2byte	0x898
 6150 0e24 DF090000 		.4byte	0x9df
 6151 0e28 02       		.uleb128 0x2
 6152 0e29 91       		.byte	0x91
 6153 0e2a 64       		.sleb128 -28
 6154 0e2b 22       		.uleb128 0x22
 6155 0e2c 769B0000 		.4byte	.LASF1241
 6156 0e30 01       		.byte	0x1
 6157 0e31 9A08     		.2byte	0x89a
 6158 0e33 210B0000 		.4byte	0xb21
 6159 0e37 02       		.uleb128 0x2
 6160 0e38 91       		.byte	0x91
 6161 0e39 74       		.sleb128 -12
 6162 0e3a 22       		.uleb128 0x22
 6163 0e3b 6A2D0000 		.4byte	.LASF1249
 6164 0e3f 01       		.byte	0x1
 6165 0e40 9B08     		.2byte	0x89b
 6166 0e42 F1020000 		.4byte	0x2f1
 6167 0e46 02       		.uleb128 0x2
 6168 0e47 91       		.byte	0x91
 6169 0e48 70       		.sleb128 -16
 6170 0e49 22       		.uleb128 0x22
 6171 0e4a 3C110000 		.4byte	.LASF1250
 6172 0e4e 01       		.byte	0x1
 6173 0e4f 9C08     		.2byte	0x89c
 6174 0e51 60000000 		.4byte	0x60
 6175 0e55 02       		.uleb128 0x2
 6176 0e56 91       		.byte	0x91
 6177 0e57 6C       		.sleb128 -20
 6178 0e58 00       		.byte	0
 6179 0e59 26       		.uleb128 0x26
 6180 0e5a 3D380000 		.4byte	.LASF1265
 6181 0e5e 01       		.byte	0x1
 6182 0e5f 8408     		.2byte	0x884
 6183 0e61 4D000000 		.4byte	0x4d
 6184 0e65 00000000 		.4byte	.LFB36
 6185 0e69 30000000 		.4byte	.LFE36-.LFB36
 6186 0e6d 01       		.uleb128 0x1
 6187 0e6e 9C       		.byte	0x9c
 6188 0e6f 910E0000 		.4byte	0xe91
 6189 0e73 21       		.uleb128 0x21
 6190 0e74 94770000 		.4byte	.LASF1251
 6191 0e78 01       		.byte	0x1
 6192 0e79 8408     		.2byte	0x884
 6193 0e7b 910E0000 		.4byte	0xe91
 6194 0e7f 02       		.uleb128 0x2
 6195 0e80 91       		.byte	0x91
 6196 0e81 74       		.sleb128 -12
 6197 0e82 22       		.uleb128 0x22
 6198 0e83 4E2B0000 		.4byte	.LASF1252
 6199 0e87 01       		.byte	0x1
 6200 0e88 8608     		.2byte	0x886
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 152


 6201 0e8a 4D000000 		.4byte	0x4d
 6202 0e8e 01       		.uleb128 0x1
 6203 0e8f 54       		.byte	0x54
 6204 0e90 00       		.byte	0
 6205 0e91 11       		.uleb128 0x11
 6206 0e92 04       		.byte	0x4
 6207 0e93 41000000 		.4byte	0x41
 6208 0e97 24       		.uleb128 0x24
 6209 0e98 52770000 		.4byte	.LASF1254
 6210 0e9c 01       		.byte	0x1
 6211 0e9d 3D08     		.2byte	0x83d
 6212 0e9f 00000000 		.4byte	.LFB35
 6213 0ea3 E8000000 		.4byte	.LFE35-.LFB35
 6214 0ea7 01       		.uleb128 0x1
 6215 0ea8 9C       		.byte	0x9c
 6216 0ea9 3E0F0000 		.4byte	0xf3e
 6217 0ead 21       		.uleb128 0x21
 6218 0eae 7F110000 		.4byte	.LASF1255
 6219 0eb2 01       		.byte	0x1
 6220 0eb3 3D08     		.2byte	0x83d
 6221 0eb5 5B0A0000 		.4byte	0xa5b
 6222 0eb9 02       		.uleb128 0x2
 6223 0eba 91       		.byte	0x91
 6224 0ebb 5C       		.sleb128 -36
 6225 0ebc 21       		.uleb128 0x21
 6226 0ebd 71320000 		.4byte	.LASF1256
 6227 0ec1 01       		.byte	0x1
 6228 0ec2 3D08     		.2byte	0x83d
 6229 0ec4 850B0000 		.4byte	0xb85
 6230 0ec8 02       		.uleb128 0x2
 6231 0ec9 91       		.byte	0x91
 6232 0eca 58       		.sleb128 -40
 6233 0ecb 21       		.uleb128 0x21
 6234 0ecc 52550000 		.4byte	.LASF1257
 6235 0ed0 01       		.byte	0x1
 6236 0ed1 3D08     		.2byte	0x83d
 6237 0ed3 60000000 		.4byte	0x60
 6238 0ed7 02       		.uleb128 0x2
 6239 0ed8 91       		.byte	0x91
 6240 0ed9 54       		.sleb128 -44
 6241 0eda 22       		.uleb128 0x22
 6242 0edb F2230000 		.4byte	.LASF1258
 6243 0edf 01       		.byte	0x1
 6244 0ee0 3F08     		.2byte	0x83f
 6245 0ee2 3E0F0000 		.4byte	0xf3e
 6246 0ee6 02       		.uleb128 0x2
 6247 0ee7 91       		.byte	0x91
 6248 0ee8 68       		.sleb128 -24
 6249 0ee9 22       		.uleb128 0x22
 6250 0eea E3490000 		.4byte	.LASF1259
 6251 0eee 01       		.byte	0x1
 6252 0eef 3F08     		.2byte	0x83f
 6253 0ef1 3E0F0000 		.4byte	0xf3e
 6254 0ef5 02       		.uleb128 0x2
 6255 0ef6 91       		.byte	0x91
 6256 0ef7 70       		.sleb128 -16
 6257 0ef8 22       		.uleb128 0x22
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 153


 6258 0ef9 19040000 		.4byte	.LASF1260
 6259 0efd 01       		.byte	0x1
 6260 0efe 4008     		.2byte	0x840
 6261 0f00 60000000 		.4byte	0x60
 6262 0f04 02       		.uleb128 0x2
 6263 0f05 91       		.byte	0x91
 6264 0f06 64       		.sleb128 -28
 6265 0f07 27       		.uleb128 0x27
 6266 0f08 0C000000 		.4byte	.LBB15
 6267 0f0c 2C000000 		.4byte	.LBE15-.LBB15
 6268 0f10 240F0000 		.4byte	0xf24
 6269 0f14 22       		.uleb128 0x22
 6270 0f15 1C3B0000 		.4byte	.LASF1261
 6271 0f19 01       		.byte	0x1
 6272 0f1a 4308     		.2byte	0x843
 6273 0f1c 900B0000 		.4byte	0xb90
 6274 0f20 02       		.uleb128 0x2
 6275 0f21 91       		.byte	0x91
 6276 0f22 74       		.sleb128 -12
 6277 0f23 00       		.byte	0
 6278 0f24 28       		.uleb128 0x28
 6279 0f25 38000000 		.4byte	.LBB16
 6280 0f29 2C000000 		.4byte	.LBE16-.LBB16
 6281 0f2d 22       		.uleb128 0x22
 6282 0f2e 1C3B0000 		.4byte	.LASF1261
 6283 0f32 01       		.byte	0x1
 6284 0f33 4708     		.2byte	0x847
 6285 0f35 900B0000 		.4byte	0xb90
 6286 0f39 02       		.uleb128 0x2
 6287 0f3a 91       		.byte	0x91
 6288 0f3b 6C       		.sleb128 -20
 6289 0f3c 00       		.byte	0
 6290 0f3d 00       		.byte	0
 6291 0f3e 11       		.uleb128 0x11
 6292 0f3f 04       		.byte	0x4
 6293 0f40 060B0000 		.4byte	0xb06
 6294 0f44 24       		.uleb128 0x24
 6295 0f45 3F4E0000 		.4byte	.LASF1262
 6296 0f49 01       		.byte	0x1
 6297 0f4a 1E08     		.2byte	0x81e
 6298 0f4c 00000000 		.4byte	.LFB34
 6299 0f50 BC000000 		.4byte	.LFE34-.LFB34
 6300 0f54 01       		.uleb128 0x1
 6301 0f55 9C       		.byte	0x9c
 6302 0f56 EB0F0000 		.4byte	0xfeb
 6303 0f5a 21       		.uleb128 0x21
 6304 0f5b 7F110000 		.4byte	.LASF1255
 6305 0f5f 01       		.byte	0x1
 6306 0f60 1E08     		.2byte	0x81e
 6307 0f62 5B0A0000 		.4byte	0xa5b
 6308 0f66 02       		.uleb128 0x2
 6309 0f67 91       		.byte	0x91
 6310 0f68 54       		.sleb128 -44
 6311 0f69 21       		.uleb128 0x21
 6312 0f6a 71320000 		.4byte	.LASF1256
 6313 0f6e 01       		.byte	0x1
 6314 0f6f 1E08     		.2byte	0x81e
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 154


 6315 0f71 850B0000 		.4byte	0xb85
 6316 0f75 02       		.uleb128 0x2
 6317 0f76 91       		.byte	0x91
 6318 0f77 50       		.sleb128 -48
 6319 0f78 21       		.uleb128 0x21
 6320 0f79 28480000 		.4byte	.LASF1263
 6321 0f7d 01       		.byte	0x1
 6322 0f7e 1E08     		.2byte	0x81e
 6323 0f80 29000000 		.4byte	0x29
 6324 0f84 02       		.uleb128 0x2
 6325 0f85 91       		.byte	0x91
 6326 0f86 4F       		.sleb128 -49
 6327 0f87 22       		.uleb128 0x22
 6328 0f88 F2230000 		.4byte	.LASF1258
 6329 0f8c 01       		.byte	0x1
 6330 0f8d 2008     		.2byte	0x820
 6331 0f8f 3E0F0000 		.4byte	0xf3e
 6332 0f93 02       		.uleb128 0x2
 6333 0f94 91       		.byte	0x91
 6334 0f95 60       		.sleb128 -32
 6335 0f96 22       		.uleb128 0x22
 6336 0f97 E3490000 		.4byte	.LASF1259
 6337 0f9b 01       		.byte	0x1
 6338 0f9c 2008     		.2byte	0x820
 6339 0f9e 3E0F0000 		.4byte	0xf3e
 6340 0fa2 02       		.uleb128 0x2
 6341 0fa3 91       		.byte	0x91
 6342 0fa4 68       		.sleb128 -24
 6343 0fa5 22       		.uleb128 0x22
 6344 0fa6 FC6C0000 		.4byte	.LASF1264
 6345 0faa 01       		.byte	0x1
 6346 0fab 2108     		.2byte	0x821
 6347 0fad 4D000000 		.4byte	0x4d
 6348 0fb1 02       		.uleb128 0x2
 6349 0fb2 91       		.byte	0x91
 6350 0fb3 5E       		.sleb128 -34
 6351 0fb4 27       		.uleb128 0x27
 6352 0fb5 0E000000 		.4byte	.LBB13
 6353 0fb9 2C000000 		.4byte	.LBE13-.LBB13
 6354 0fbd D10F0000 		.4byte	0xfd1
 6355 0fc1 22       		.uleb128 0x22
 6356 0fc2 1C3B0000 		.4byte	.LASF1261
 6357 0fc6 01       		.byte	0x1
 6358 0fc7 2408     		.2byte	0x824
 6359 0fc9 900B0000 		.4byte	0xb90
 6360 0fcd 02       		.uleb128 0x2
 6361 0fce 91       		.byte	0x91
 6362 0fcf 6C       		.sleb128 -20
 6363 0fd0 00       		.byte	0
 6364 0fd1 28       		.uleb128 0x28
 6365 0fd2 3A000000 		.4byte	.LBB14
 6366 0fd6 2C000000 		.4byte	.LBE14-.LBB14
 6367 0fda 22       		.uleb128 0x22
 6368 0fdb 1C3B0000 		.4byte	.LASF1261
 6369 0fdf 01       		.byte	0x1
 6370 0fe0 2708     		.2byte	0x827
 6371 0fe2 900B0000 		.4byte	0xb90
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 155


 6372 0fe6 02       		.uleb128 0x2
 6373 0fe7 91       		.byte	0x91
 6374 0fe8 64       		.sleb128 -28
 6375 0fe9 00       		.byte	0
 6376 0fea 00       		.byte	0
 6377 0feb 29       		.uleb128 0x29
 6378 0fec 4C2C0000 		.4byte	.LASF1266
 6379 0ff0 01       		.byte	0x1
 6380 0ff1 FC07     		.2byte	0x7fc
 6381 0ff3 210B0000 		.4byte	0xb21
 6382 0ff7 00000000 		.4byte	.LFB33
 6383 0ffb 62000000 		.4byte	.LFE33-.LFB33
 6384 0fff 01       		.uleb128 0x1
 6385 1000 9C       		.byte	0x9c
 6386 1001 33100000 		.4byte	0x1033
 6387 1005 21       		.uleb128 0x21
 6388 1006 95020000 		.4byte	.LASF1267
 6389 100a 01       		.byte	0x1
 6390 100b FC07     		.2byte	0x7fc
 6391 100d 4D000000 		.4byte	0x4d
 6392 1011 02       		.uleb128 0x2
 6393 1012 91       		.byte	0x91
 6394 1013 6E       		.sleb128 -18
 6395 1014 21       		.uleb128 0x21
 6396 1015 0B760000 		.4byte	.LASF1268
 6397 1019 01       		.byte	0x1
 6398 101a FC07     		.2byte	0x7fc
 6399 101c 660A0000 		.4byte	0xa66
 6400 1020 02       		.uleb128 0x2
 6401 1021 91       		.byte	0x91
 6402 1022 68       		.sleb128 -24
 6403 1023 22       		.uleb128 0x22
 6404 1024 BC110000 		.4byte	.LASF1269
 6405 1028 01       		.byte	0x1
 6406 1029 FE07     		.2byte	0x7fe
 6407 102b 210B0000 		.4byte	0xb21
 6408 102f 02       		.uleb128 0x2
 6409 1030 91       		.byte	0x91
 6410 1031 74       		.sleb128 -12
 6411 1032 00       		.byte	0
 6412 1033 24       		.uleb128 0x24
 6413 1034 8C6D0000 		.4byte	.LASF1270
 6414 1038 01       		.byte	0x1
 6415 1039 D907     		.2byte	0x7d9
 6416 103b 00000000 		.4byte	.LFB32
 6417 103f 84000000 		.4byte	.LFE32-.LFB32
 6418 1043 01       		.uleb128 0x1
 6419 1044 9C       		.byte	0x9c
 6420 1045 7C100000 		.4byte	0x107c
 6421 1049 28       		.uleb128 0x28
 6422 104a 06000000 		.4byte	.LBB11
 6423 104e 66000000 		.4byte	.LBE11-.LBB11
 6424 1052 22       		.uleb128 0x22
 6425 1053 059A0000 		.4byte	.LASF1271
 6426 1057 01       		.byte	0x1
 6427 1058 DD07     		.2byte	0x7dd
 6428 105a 54000000 		.4byte	0x54
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 156


 6429 105e 02       		.uleb128 0x2
 6430 105f 91       		.byte	0x91
 6431 1060 74       		.sleb128 -12
 6432 1061 28       		.uleb128 0x28
 6433 1062 2C000000 		.4byte	.LBB12
 6434 1066 40000000 		.4byte	.LBE12-.LBB12
 6435 106a 22       		.uleb128 0x22
 6436 106b 769B0000 		.4byte	.LASF1241
 6437 106f 01       		.byte	0x1
 6438 1070 E907     		.2byte	0x7e9
 6439 1072 210B0000 		.4byte	0xb21
 6440 1076 02       		.uleb128 0x2
 6441 1077 91       		.byte	0x91
 6442 1078 70       		.sleb128 -16
 6443 1079 00       		.byte	0
 6444 107a 00       		.byte	0
 6445 107b 00       		.byte	0
 6446 107c 24       		.uleb128 0x24
 6447 107d 7F910000 		.4byte	.LASF1272
 6448 1081 01       		.byte	0x1
 6449 1082 B907     		.2byte	0x7b9
 6450 1084 00000000 		.4byte	.LFB31
 6451 1088 80000000 		.4byte	.LFE31-.LFB31
 6452 108c 01       		.uleb128 0x1
 6453 108d 9C       		.byte	0x9c
 6454 108e A2100000 		.4byte	0x10a2
 6455 1092 22       		.uleb128 0x22
 6456 1093 AA9B0000 		.4byte	.LASF1206
 6457 1097 01       		.byte	0x1
 6458 1098 BB07     		.2byte	0x7bb
 6459 109a 60000000 		.4byte	0x60
 6460 109e 02       		.uleb128 0x2
 6461 109f 91       		.byte	0x91
 6462 10a0 74       		.sleb128 -12
 6463 10a1 00       		.byte	0
 6464 10a2 24       		.uleb128 0x24
 6465 10a3 54260000 		.4byte	.LASF1273
 6466 10a7 01       		.byte	0x1
 6467 10a8 6307     		.2byte	0x763
 6468 10aa 00000000 		.4byte	.LFB30
 6469 10ae 72000000 		.4byte	.LFE30-.LFB30
 6470 10b2 01       		.uleb128 0x1
 6471 10b3 9C       		.byte	0x9c
 6472 10b4 04110000 		.4byte	0x1104
 6473 10b8 21       		.uleb128 0x21
 6474 10b9 769B0000 		.4byte	.LASF1241
 6475 10bd 01       		.byte	0x1
 6476 10be 6307     		.2byte	0x763
 6477 10c0 210B0000 		.4byte	0xb21
 6478 10c4 02       		.uleb128 0x2
 6479 10c5 91       		.byte	0x91
 6480 10c6 74       		.sleb128 -12
 6481 10c7 21       		.uleb128 0x21
 6482 10c8 4F200000 		.4byte	.LASF1274
 6483 10cc 01       		.byte	0x1
 6484 10cd 6307     		.2byte	0x763
 6485 10cf 610A0000 		.4byte	0xa61
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 157


 6486 10d3 02       		.uleb128 0x2
 6487 10d4 91       		.byte	0x91
 6488 10d5 70       		.sleb128 -16
 6489 10d6 21       		.uleb128 0x21
 6490 10d7 AA9B0000 		.4byte	.LASF1206
 6491 10db 01       		.byte	0x1
 6492 10dc 6307     		.2byte	0x763
 6493 10de 60000000 		.4byte	0x60
 6494 10e2 02       		.uleb128 0x2
 6495 10e3 91       		.byte	0x91
 6496 10e4 6C       		.sleb128 -20
 6497 10e5 21       		.uleb128 0x21
 6498 10e6 E88B0000 		.4byte	.LASF1275
 6499 10ea 01       		.byte	0x1
 6500 10eb 6307     		.2byte	0x763
 6501 10ed 0A110000 		.4byte	0x110a
 6502 10f1 02       		.uleb128 0x2
 6503 10f2 91       		.byte	0x91
 6504 10f3 68       		.sleb128 -24
 6505 10f4 21       		.uleb128 0x21
 6506 10f5 95020000 		.4byte	.LASF1267
 6507 10f9 01       		.byte	0x1
 6508 10fa 6307     		.2byte	0x763
 6509 10fc 4D000000 		.4byte	0x4d
 6510 1100 02       		.uleb128 0x2
 6511 1101 91       		.byte	0x91
 6512 1102 00       		.sleb128 0
 6513 1103 00       		.byte	0
 6514 1104 11       		.uleb128 0x11
 6515 1105 04       		.byte	0x4
 6516 1106 560A0000 		.4byte	0xa56
 6517 110a 03       		.uleb128 0x3
 6518 110b 04110000 		.4byte	0x1104
 6519 110f 24       		.uleb128 0x24
 6520 1110 774B0000 		.4byte	.LASF1276
 6521 1114 01       		.byte	0x1
 6522 1115 2207     		.2byte	0x722
 6523 1117 00000000 		.4byte	.LFB29
 6524 111b 20000000 		.4byte	.LFE29-.LFB29
 6525 111f 01       		.uleb128 0x1
 6526 1120 9C       		.byte	0x9c
 6527 1121 35110000 		.4byte	0x1135
 6528 1125 21       		.uleb128 0x21
 6529 1126 218A0000 		.4byte	.LASF1277
 6530 112a 01       		.byte	0x1
 6531 112b 2207     		.2byte	0x722
 6532 112d 93000000 		.4byte	0x93
 6533 1131 02       		.uleb128 0x2
 6534 1132 91       		.byte	0x91
 6535 1133 74       		.sleb128 -12
 6536 1134 00       		.byte	0
 6537 1135 2A       		.uleb128 0x2a
 6538 1136 27420000 		.4byte	.LASF1308
 6539 113a 01       		.byte	0x1
 6540 113b 1207     		.2byte	0x712
 6541 113d 00000000 		.4byte	.LFB28
 6542 1141 18000000 		.4byte	.LFE28-.LFB28
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 158


 6543 1145 01       		.uleb128 0x1
 6544 1146 9C       		.byte	0x9c
 6545 1147 25       		.uleb128 0x25
 6546 1148 7A460000 		.4byte	.LASF1278
 6547 114c 01       		.byte	0x1
 6548 114d E706     		.2byte	0x6e7
 6549 114f 54000000 		.4byte	0x54
 6550 1153 00000000 		.4byte	.LFB27
 6551 1157 88000000 		.4byte	.LFE27-.LFB27
 6552 115b 01       		.uleb128 0x1
 6553 115c 9C       		.byte	0x9c
 6554 115d 8F110000 		.4byte	0x118f
 6555 1161 21       		.uleb128 0x21
 6556 1162 EC400000 		.4byte	.LASF1279
 6557 1166 01       		.byte	0x1
 6558 1167 E706     		.2byte	0x6e7
 6559 1169 95110000 		.4byte	0x1195
 6560 116d 02       		.uleb128 0x2
 6561 116e 91       		.byte	0x91
 6562 116f 6C       		.sleb128 -20
 6563 1170 21       		.uleb128 0x21
 6564 1171 DD1F0000 		.4byte	.LASF1280
 6565 1175 01       		.byte	0x1
 6566 1176 E706     		.2byte	0x6e7
 6567 1178 A0110000 		.4byte	0x11a0
 6568 117c 02       		.uleb128 0x2
 6569 117d 91       		.byte	0x91
 6570 117e 68       		.sleb128 -24
 6571 117f 22       		.uleb128 0x22
 6572 1180 9E280000 		.4byte	.LASF1245
 6573 1184 01       		.byte	0x1
 6574 1185 E906     		.2byte	0x6e9
 6575 1187 54000000 		.4byte	0x54
 6576 118b 02       		.uleb128 0x2
 6577 118c 91       		.byte	0x91
 6578 118d 74       		.sleb128 -12
 6579 118e 00       		.byte	0
 6580 118f 11       		.uleb128 0x11
 6581 1190 04       		.byte	0x4
 6582 1191 0F0A0000 		.4byte	0xa0f
 6583 1195 03       		.uleb128 0x3
 6584 1196 8F110000 		.4byte	0x118f
 6585 119a 11       		.uleb128 0x11
 6586 119b 04       		.byte	0x4
 6587 119c DE080000 		.4byte	0x8de
 6588 11a0 03       		.uleb128 0x3
 6589 11a1 9A110000 		.4byte	0x119a
 6590 11a5 2B       		.uleb128 0x2b
 6591 11a6 7E430000 		.4byte	.LASF1281
 6592 11aa 01       		.byte	0x1
 6593 11ab E006     		.2byte	0x6e0
 6594 11ad 00000000 		.4byte	.LFB26
 6595 11b1 2C000000 		.4byte	.LFE26-.LFB26
 6596 11b5 01       		.uleb128 0x1
 6597 11b6 9C       		.byte	0x9c
 6598 11b7 CB110000 		.4byte	0x11cb
 6599 11bb 21       		.uleb128 0x21
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 159


 6600 11bc EC400000 		.4byte	.LASF1279
 6601 11c0 01       		.byte	0x1
 6602 11c1 E006     		.2byte	0x6e0
 6603 11c3 95110000 		.4byte	0x1195
 6604 11c7 02       		.uleb128 0x2
 6605 11c8 91       		.byte	0x91
 6606 11c9 74       		.sleb128 -12
 6607 11ca 00       		.byte	0
 6608 11cb 25       		.uleb128 0x25
 6609 11cc 1C2D0000 		.4byte	.LASF1282
 6610 11d0 01       		.byte	0x1
 6611 11d1 B106     		.2byte	0x6b1
 6612 11d3 54000000 		.4byte	0x54
 6613 11d7 00000000 		.4byte	.LFB25
 6614 11db AC000000 		.4byte	.LFE25-.LFB25
 6615 11df 01       		.uleb128 0x1
 6616 11e0 9C       		.byte	0x9c
 6617 11e1 13120000 		.4byte	0x1213
 6618 11e5 21       		.uleb128 0x21
 6619 11e6 FA410000 		.4byte	.LASF1283
 6620 11ea 01       		.byte	0x1
 6621 11eb B106     		.2byte	0x6b1
 6622 11ed 19120000 		.4byte	0x1219
 6623 11f1 02       		.uleb128 0x2
 6624 11f2 91       		.byte	0x91
 6625 11f3 6C       		.sleb128 -20
 6626 11f4 22       		.uleb128 0x22
 6627 11f5 BA590000 		.4byte	.LASF1284
 6628 11f9 01       		.byte	0x1
 6629 11fa B306     		.2byte	0x6b3
 6630 11fc 210B0000 		.4byte	0xb21
 6631 1200 02       		.uleb128 0x2
 6632 1201 91       		.byte	0x91
 6633 1202 70       		.sleb128 -16
 6634 1203 22       		.uleb128 0x22
 6635 1204 9E280000 		.4byte	.LASF1245
 6636 1208 01       		.byte	0x1
 6637 1209 B406     		.2byte	0x6b4
 6638 120b 54000000 		.4byte	0x54
 6639 120f 02       		.uleb128 0x2
 6640 1210 91       		.byte	0x91
 6641 1211 74       		.sleb128 -12
 6642 1212 00       		.byte	0
 6643 1213 11       		.uleb128 0x11
 6644 1214 04       		.byte	0x4
 6645 1215 DA090000 		.4byte	0x9da
 6646 1219 03       		.uleb128 0x3
 6647 121a 13120000 		.4byte	0x1213
 6648 121e 20       		.uleb128 0x20
 6649 121f 914A0000 		.4byte	.LASF1285
 6650 1223 01       		.byte	0x1
 6651 1224 6B06     		.2byte	0x66b
 6652 1226 00000000 		.4byte	.LFB24
 6653 122a 9C000000 		.4byte	.LFE24-.LFB24
 6654 122e 01       		.uleb128 0x1
 6655 122f 9C       		.byte	0x9c
 6656 1230 62120000 		.4byte	0x1262
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 160


 6657 1234 21       		.uleb128 0x21
 6658 1235 FA410000 		.4byte	.LASF1283
 6659 1239 01       		.byte	0x1
 6660 123a 6B06     		.2byte	0x66b
 6661 123c 19120000 		.4byte	0x1219
 6662 1240 02       		.uleb128 0x2
 6663 1241 91       		.byte	0x91
 6664 1242 6C       		.sleb128 -20
 6665 1243 21       		.uleb128 0x21
 6666 1244 055D0000 		.4byte	.LASF1286
 6667 1248 01       		.byte	0x1
 6668 1249 6B06     		.2byte	0x66b
 6669 124b DE080000 		.4byte	0x8de
 6670 124f 02       		.uleb128 0x2
 6671 1250 91       		.byte	0x91
 6672 1251 68       		.sleb128 -24
 6673 1252 22       		.uleb128 0x22
 6674 1253 79130000 		.4byte	.LASF1287
 6675 1257 01       		.byte	0x1
 6676 1258 6D06     		.2byte	0x66d
 6677 125a DE080000 		.4byte	0x8de
 6678 125e 02       		.uleb128 0x2
 6679 125f 91       		.byte	0x91
 6680 1260 74       		.sleb128 -12
 6681 1261 00       		.byte	0
 6682 1262 20       		.uleb128 0x20
 6683 1263 A5390000 		.4byte	.LASF1288
 6684 1267 01       		.byte	0x1
 6685 1268 3906     		.2byte	0x639
 6686 126a 00000000 		.4byte	.LFB23
 6687 126e 78010000 		.4byte	.LFE23-.LFB23
 6688 1272 01       		.uleb128 0x1
 6689 1273 9C       		.byte	0x9c
 6690 1274 07130000 		.4byte	0x1307
 6691 1278 27       		.uleb128 0x27
 6692 1279 16000000 		.4byte	.LBB7
 6693 127d 1E000000 		.4byte	.LBE7-.LBB7
 6694 1281 95120000 		.4byte	0x1295
 6695 1285 22       		.uleb128 0x22
 6696 1286 5F090000 		.4byte	.LASF1289
 6697 128a 01       		.byte	0x1
 6698 128b 4706     		.2byte	0x647
 6699 128d 60000000 		.4byte	0x60
 6700 1291 02       		.uleb128 0x2
 6701 1292 91       		.byte	0x91
 6702 1293 74       		.sleb128 -12
 6703 1294 00       		.byte	0
 6704 1295 27       		.uleb128 0x27
 6705 1296 34000000 		.4byte	.LBB8
 6706 129a 22000000 		.4byte	.LBE8-.LBB8
 6707 129e B6120000 		.4byte	0x12b6
 6708 12a2 2C       		.uleb128 0x2c
 6709 12a3 F22C0000 		.4byte	.LASF1338
 6710 12a7 01       		.byte	0x1
 6711 12a8 5906     		.2byte	0x659
 6712 12aa 19       		.uleb128 0x19
 6713 12ab 720D0000 		.4byte	0xd72
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 161


 6714 12af 19       		.uleb128 0x19
 6715 12b0 F30C0000 		.4byte	0xcf3
 6716 12b4 00       		.byte	0
 6717 12b5 00       		.byte	0
 6718 12b6 27       		.uleb128 0x27
 6719 12b7 56000000 		.4byte	.LBB9
 6720 12bb 28000000 		.4byte	.LBE9-.LBB9
 6721 12bf ED120000 		.4byte	0x12ed
 6722 12c3 2D       		.uleb128 0x2d
 6723 12c4 F22C0000 		.4byte	.LASF1338
 6724 12c8 01       		.byte	0x1
 6725 12c9 5A06     		.2byte	0x65a
 6726 12cb DA120000 		.4byte	0x12da
 6727 12cf 19       		.uleb128 0x19
 6728 12d0 720D0000 		.4byte	0xd72
 6729 12d4 19       		.uleb128 0x19
 6730 12d5 F30C0000 		.4byte	0xcf3
 6731 12d9 00       		.byte	0
 6732 12da 22       		.uleb128 0x22
 6733 12db 98300000 		.4byte	.LASF1290
 6734 12df 01       		.byte	0x1
 6735 12e0 5A06     		.2byte	0x65a
 6736 12e2 17130000 		.4byte	0x1317
 6737 12e6 05       		.uleb128 0x5
 6738 12e7 03       		.byte	0x3
 6739 12e8 00000000 		.4byte	ucExpectedStackBytes.6029
 6740 12ec 00       		.byte	0
 6741 12ed 28       		.uleb128 0x28
 6742 12ee A0000000 		.4byte	.LBB10
 6743 12f2 3C000000 		.4byte	.LBE10-.LBB10
 6744 12f6 22       		.uleb128 0x22
 6745 12f7 1C3B0000 		.4byte	.LASF1261
 6746 12fb 01       		.byte	0x1
 6747 12fc 6406     		.2byte	0x664
 6748 12fe 900B0000 		.4byte	0xb90
 6749 1302 02       		.uleb128 0x2
 6750 1303 91       		.byte	0x91
 6751 1304 70       		.sleb128 -16
 6752 1305 00       		.byte	0
 6753 1306 00       		.byte	0
 6754 1307 0B       		.uleb128 0xb
 6755 1308 41000000 		.4byte	0x41
 6756 130c 17130000 		.4byte	0x1317
 6757 1310 0C       		.uleb128 0xc
 6758 1311 F1000000 		.4byte	0xf1
 6759 1315 13       		.byte	0x13
 6760 1316 00       		.byte	0
 6761 1317 03       		.uleb128 0x3
 6762 1318 07130000 		.4byte	0x1307
 6763 131c 20       		.uleb128 0x20
 6764 131d EC1D0000 		.4byte	.LASF1291
 6765 1321 01       		.byte	0x1
 6766 1322 7505     		.2byte	0x575
 6767 1324 00000000 		.4byte	.LFB22
 6768 1328 E0000000 		.4byte	.LFE22-.LFB22
 6769 132c 01       		.uleb128 0x1
 6770 132d 9C       		.byte	0x9c
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 162


 6771 132e 64130000 		.4byte	0x1364
 6772 1332 27       		.uleb128 0x27
 6773 1333 20000000 		.4byte	.LBB4
 6774 1337 1E000000 		.4byte	.LBE4-.LBB4
 6775 133b 4F130000 		.4byte	0x134f
 6776 133f 22       		.uleb128 0x22
 6777 1340 1F750000 		.4byte	.LASF1292
 6778 1344 01       		.byte	0x1
 6779 1345 7F05     		.2byte	0x57f
 6780 1347 850B0000 		.4byte	0xb85
 6781 134b 02       		.uleb128 0x2
 6782 134c 91       		.byte	0x91
 6783 134d 6C       		.sleb128 -20
 6784 134e 00       		.byte	0
 6785 134f 2E       		.uleb128 0x2e
 6786 1350 00000000 		.4byte	.Ldebug_ranges0+0
 6787 1354 22       		.uleb128 0x22
 6788 1355 769B0000 		.4byte	.LASF1241
 6789 1359 01       		.byte	0x1
 6790 135a 8B05     		.2byte	0x58b
 6791 135c 210B0000 		.4byte	0xb21
 6792 1360 01       		.uleb128 0x1
 6793 1361 54       		.byte	0x54
 6794 1362 00       		.byte	0
 6795 1363 00       		.byte	0
 6796 1364 25       		.uleb128 0x25
 6797 1365 AE430000 		.4byte	.LASF1293
 6798 1369 01       		.byte	0x1
 6799 136a 5E05     		.2byte	0x55e
 6800 136c 60000000 		.4byte	0x60
 6801 1370 00000000 		.4byte	.LFB21
 6802 1374 38000000 		.4byte	.LFE21-.LFB21
 6803 1378 01       		.uleb128 0x1
 6804 1379 9C       		.byte	0x9c
 6805 137a 8E130000 		.4byte	0x138e
 6806 137e 22       		.uleb128 0x22
 6807 137f E58E0000 		.4byte	.LASF1294
 6808 1383 01       		.byte	0x1
 6809 1384 6005     		.2byte	0x560
 6810 1386 60000000 		.4byte	0x60
 6811 138a 02       		.uleb128 0x2
 6812 138b 91       		.byte	0x91
 6813 138c 74       		.sleb128 -12
 6814 138d 00       		.byte	0
 6815 138e 20       		.uleb128 0x20
 6816 138f C32E0000 		.4byte	.LASF1295
 6817 1393 01       		.byte	0x1
 6818 1394 4D05     		.2byte	0x54d
 6819 1396 00000000 		.4byte	.LFB20
 6820 139a 48000000 		.4byte	.LFE20-.LFB20
 6821 139e 01       		.uleb128 0x1
 6822 139f 9C       		.byte	0x9c
 6823 13a0 C3130000 		.4byte	0x13c3
 6824 13a4 21       		.uleb128 0x21
 6825 13a5 31710000 		.4byte	.LASF1296
 6826 13a9 01       		.byte	0x1
 6827 13aa 4D05     		.2byte	0x54d
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 163


 6828 13ac F30C0000 		.4byte	0xcf3
 6829 13b0 02       		.uleb128 0x2
 6830 13b1 91       		.byte	0x91
 6831 13b2 74       		.sleb128 -12
 6832 13b3 21       		.uleb128 0x21
 6833 13b4 63000000 		.4byte	.LASF1297
 6834 13b8 01       		.byte	0x1
 6835 13b9 4D05     		.2byte	0x54d
 6836 13bb 60000000 		.4byte	0x60
 6837 13bf 02       		.uleb128 0x2
 6838 13c0 91       		.byte	0x91
 6839 13c1 70       		.sleb128 -16
 6840 13c2 00       		.byte	0
 6841 13c3 20       		.uleb128 0x20
 6842 13c4 33060000 		.4byte	.LASF1298
 6843 13c8 01       		.byte	0x1
 6844 13c9 0205     		.2byte	0x502
 6845 13cb 00000000 		.4byte	.LFB19
 6846 13cf 00010000 		.4byte	.LFE19-.LFB19
 6847 13d3 01       		.uleb128 0x1
 6848 13d4 9C       		.byte	0x9c
 6849 13d5 07140000 		.4byte	0x1407
 6850 13d9 21       		.uleb128 0x21
 6851 13da 7F110000 		.4byte	.LASF1255
 6852 13de 01       		.byte	0x1
 6853 13df 0205     		.2byte	0x502
 6854 13e1 F30C0000 		.4byte	0xcf3
 6855 13e5 02       		.uleb128 0x2
 6856 13e6 91       		.byte	0x91
 6857 13e7 6C       		.sleb128 -20
 6858 13e8 22       		.uleb128 0x22
 6859 13e9 EE820000 		.4byte	.LASF1299
 6860 13ed 01       		.byte	0x1
 6861 13ee 0405     		.2byte	0x504
 6862 13f0 60000000 		.4byte	0x60
 6863 13f4 02       		.uleb128 0x2
 6864 13f5 91       		.byte	0x91
 6865 13f6 74       		.sleb128 -12
 6866 13f7 22       		.uleb128 0x22
 6867 13f8 52550000 		.4byte	.LASF1257
 6868 13fc 01       		.byte	0x1
 6869 13fd 0505     		.2byte	0x505
 6870 13ff 60000000 		.4byte	0x60
 6871 1403 02       		.uleb128 0x2
 6872 1404 91       		.byte	0x91
 6873 1405 70       		.sleb128 -16
 6874 1406 00       		.byte	0
 6875 1407 20       		.uleb128 0x20
 6876 1408 103E0000 		.4byte	.LASF1300
 6877 140c 01       		.byte	0x1
 6878 140d C304     		.2byte	0x4c3
 6879 140f 00000000 		.4byte	.LFB18
 6880 1413 E8000000 		.4byte	.LFE18-.LFB18
 6881 1417 01       		.uleb128 0x1
 6882 1418 9C       		.byte	0x9c
 6883 1419 3C140000 		.4byte	0x143c
 6884 141d 21       		.uleb128 0x21
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 164


 6885 141e 7F110000 		.4byte	.LASF1255
 6886 1422 01       		.byte	0x1
 6887 1423 C304     		.2byte	0x4c3
 6888 1425 F30C0000 		.4byte	0xcf3
 6889 1429 02       		.uleb128 0x2
 6890 142a 91       		.byte	0x91
 6891 142b 6C       		.sleb128 -20
 6892 142c 22       		.uleb128 0x22
 6893 142d EE820000 		.4byte	.LASF1299
 6894 1431 01       		.byte	0x1
 6895 1432 C504     		.2byte	0x4c5
 6896 1434 60000000 		.4byte	0x60
 6897 1438 02       		.uleb128 0x2
 6898 1439 91       		.byte	0x91
 6899 143a 74       		.sleb128 -12
 6900 143b 00       		.byte	0
 6901 143c 2F       		.uleb128 0x2f
 6902 143d CF0B0000 		.4byte	.LASF1301
 6903 1441 01       		.byte	0x1
 6904 1442 B904     		.2byte	0x4b9
 6905 1444 60000000 		.4byte	0x60
 6906 1448 00000000 		.4byte	.LFB17
 6907 144c 14000000 		.4byte	.LFE17-.LFB17
 6908 1450 01       		.uleb128 0x1
 6909 1451 9C       		.byte	0x9c
 6910 1452 2F       		.uleb128 0x2f
 6911 1453 3D430000 		.4byte	.LASF1302
 6912 1457 01       		.byte	0x1
 6913 1458 B304     		.2byte	0x4b3
 6914 145a DE080000 		.4byte	0x8de
 6915 145e 00000000 		.4byte	.LFB16
 6916 1462 14000000 		.4byte	.LFE16-.LFB16
 6917 1466 01       		.uleb128 0x1
 6918 1467 9C       		.byte	0x9c
 6919 1468 25       		.uleb128 0x25
 6920 1469 341D0000 		.4byte	.LASF1303
 6921 146d 01       		.byte	0x1
 6922 146e A404     		.2byte	0x4a4
 6923 1470 DE080000 		.4byte	0x8de
 6924 1474 00000000 		.4byte	.LFB15
 6925 1478 24000000 		.4byte	.LFE15-.LFB15
 6926 147c 01       		.uleb128 0x1
 6927 147d 9C       		.byte	0x9c
 6928 147e 92140000 		.4byte	0x1492
 6929 1482 22       		.uleb128 0x22
 6930 1483 013F0000 		.4byte	.LASF1304
 6931 1487 01       		.byte	0x1
 6932 1488 A604     		.2byte	0x4a6
 6933 148a DE080000 		.4byte	0x8de
 6934 148e 02       		.uleb128 0x2
 6935 148f 91       		.byte	0x91
 6936 1490 74       		.sleb128 -12
 6937 1491 00       		.byte	0
 6938 1492 25       		.uleb128 0x25
 6939 1493 775D0000 		.4byte	.LASF1305
 6940 1497 01       		.byte	0x1
 6941 1498 5204     		.2byte	0x452
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 165


 6942 149a 54000000 		.4byte	0x54
 6943 149e 00000000 		.4byte	.LFB14
 6944 14a2 00010000 		.4byte	.LFE14-.LFB14
 6945 14a6 01       		.uleb128 0x1
 6946 14a7 9C       		.byte	0x9c
 6947 14a8 E3140000 		.4byte	0x14e3
 6948 14ac 22       		.uleb128 0x22
 6949 14ad 769B0000 		.4byte	.LASF1241
 6950 14b1 01       		.byte	0x1
 6951 14b2 5404     		.2byte	0x454
 6952 14b4 210B0000 		.4byte	0xb21
 6953 14b8 01       		.uleb128 0x1
 6954 14b9 54       		.byte	0x54
 6955 14ba 22       		.uleb128 0x22
 6956 14bb 31720000 		.4byte	.LASF1306
 6957 14bf 01       		.byte	0x1
 6958 14c0 5504     		.2byte	0x455
 6959 14c2 54000000 		.4byte	0x54
 6960 14c6 02       		.uleb128 0x2
 6961 14c7 91       		.byte	0x91
 6962 14c8 6C       		.sleb128 -20
 6963 14c9 28       		.uleb128 0x28
 6964 14ca 28000000 		.4byte	.LBB3
 6965 14ce A8000000 		.4byte	.LBE3-.LBB3
 6966 14d2 22       		.uleb128 0x22
 6967 14d3 054E0000 		.4byte	.LASF1307
 6968 14d7 01       		.byte	0x1
 6969 14d8 6404     		.2byte	0x464
 6970 14da 54000000 		.4byte	0x54
 6971 14de 02       		.uleb128 0x2
 6972 14df 91       		.byte	0x91
 6973 14e0 68       		.sleb128 -24
 6974 14e1 00       		.byte	0
 6975 14e2 00       		.byte	0
 6976 14e3 2A       		.uleb128 0x2a
 6977 14e4 9D3F0000 		.4byte	.LASF1309
 6978 14e8 01       		.byte	0x1
 6979 14e9 4A04     		.2byte	0x44a
 6980 14eb 00000000 		.4byte	.LFB13
 6981 14ef 1C000000 		.4byte	.LFE13-.LFB13
 6982 14f3 01       		.uleb128 0x1
 6983 14f4 9C       		.byte	0x9c
 6984 14f5 30       		.uleb128 0x30
 6985 14f6 7F6C0000 		.4byte	.LASF1310
 6986 14fa 01       		.byte	0x1
 6987 14fb 3F04     		.2byte	0x43f
 6988 14fd 00000000 		.4byte	.LFB12
 6989 1501 20000000 		.4byte	.LFE12-.LFB12
 6990 1505 01       		.uleb128 0x1
 6991 1506 9C       		.byte	0x9c
 6992 1507 20       		.uleb128 0x20
 6993 1508 6F1D0000 		.4byte	.LASF1311
 6994 150c 01       		.byte	0x1
 6995 150d 1504     		.2byte	0x415
 6996 150f 00000000 		.4byte	.LFB11
 6997 1513 64000000 		.4byte	.LFE11-.LFB11
 6998 1517 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 166


 6999 1518 9C       		.byte	0x9c
 7000 1519 2D150000 		.4byte	0x152d
 7001 151d 22       		.uleb128 0x22
 7002 151e 9E280000 		.4byte	.LASF1245
 7003 1522 01       		.byte	0x1
 7004 1523 1704     		.2byte	0x417
 7005 1525 54000000 		.4byte	0x54
 7006 1529 02       		.uleb128 0x2
 7007 152a 91       		.byte	0x91
 7008 152b 74       		.sleb128 -12
 7009 152c 00       		.byte	0
 7010 152d 25       		.uleb128 0x25
 7011 152e 22330000 		.4byte	.LASF1312
 7012 1532 01       		.byte	0x1
 7013 1533 EE03     		.2byte	0x3ee
 7014 1535 54000000 		.4byte	0x54
 7015 1539 00000000 		.4byte	.LFB10
 7016 153d A0000000 		.4byte	.LFE10-.LFB10
 7017 1541 01       		.uleb128 0x1
 7018 1542 9C       		.byte	0x9c
 7019 1543 75150000 		.4byte	0x1575
 7020 1547 21       		.uleb128 0x21
 7021 1548 648F0000 		.4byte	.LASF1313
 7022 154c 01       		.byte	0x1
 7023 154d EE03     		.2byte	0x3ee
 7024 154f DF090000 		.4byte	0x9df
 7025 1553 02       		.uleb128 0x2
 7026 1554 91       		.byte	0x91
 7027 1555 6C       		.sleb128 -20
 7028 1556 22       		.uleb128 0x22
 7029 1557 054E0000 		.4byte	.LASF1307
 7030 155b 01       		.byte	0x1
 7031 155c F003     		.2byte	0x3f0
 7032 155e 54000000 		.4byte	0x54
 7033 1562 02       		.uleb128 0x2
 7034 1563 91       		.byte	0x91
 7035 1564 74       		.sleb128 -12
 7036 1565 22       		.uleb128 0x22
 7037 1566 769B0000 		.4byte	.LASF1241
 7038 156a 01       		.byte	0x1
 7039 156b F103     		.2byte	0x3f1
 7040 156d 210B0000 		.4byte	0xb21
 7041 1571 02       		.uleb128 0x2
 7042 1572 91       		.byte	0x91
 7043 1573 70       		.sleb128 -16
 7044 1574 00       		.byte	0
 7045 1575 20       		.uleb128 0x20
 7046 1576 5B6C0000 		.4byte	.LASF1314
 7047 157a 01       		.byte	0x1
 7048 157b C403     		.2byte	0x3c4
 7049 157d 00000000 		.4byte	.LFB9
 7050 1581 90000000 		.4byte	.LFE9-.LFB9
 7051 1585 01       		.uleb128 0x1
 7052 1586 9C       		.byte	0x9c
 7053 1587 AA150000 		.4byte	0x15aa
 7054 158b 21       		.uleb128 0x21
 7055 158c 648F0000 		.4byte	.LASF1313
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 167


 7056 1590 01       		.byte	0x1
 7057 1591 C403     		.2byte	0x3c4
 7058 1593 DF090000 		.4byte	0x9df
 7059 1597 02       		.uleb128 0x2
 7060 1598 91       		.byte	0x91
 7061 1599 6C       		.sleb128 -20
 7062 159a 22       		.uleb128 0x22
 7063 159b 769B0000 		.4byte	.LASF1241
 7064 159f 01       		.byte	0x1
 7065 15a0 C603     		.2byte	0x3c6
 7066 15a2 210B0000 		.4byte	0xb21
 7067 15a6 02       		.uleb128 0x2
 7068 15a7 91       		.byte	0x91
 7069 15a8 74       		.sleb128 -12
 7070 15a9 00       		.byte	0
 7071 15aa 23       		.uleb128 0x23
 7072 15ab 7F000000 		.4byte	.LASF1315
 7073 15af 01       		.byte	0x1
 7074 15b0 A503     		.2byte	0x3a5
 7075 15b2 54000000 		.4byte	0x54
 7076 15b6 00000000 		.4byte	.LFB8
 7077 15ba 44000000 		.4byte	.LFE8-.LFB8
 7078 15be 01       		.uleb128 0x1
 7079 15bf 9C       		.byte	0x9c
 7080 15c0 F2150000 		.4byte	0x15f2
 7081 15c4 21       		.uleb128 0x21
 7082 15c5 AC100000 		.4byte	.LASF1248
 7083 15c9 01       		.byte	0x1
 7084 15ca A503     		.2byte	0x3a5
 7085 15cc DF090000 		.4byte	0x9df
 7086 15d0 02       		.uleb128 0x2
 7087 15d1 91       		.byte	0x91
 7088 15d2 6C       		.sleb128 -20
 7089 15d3 22       		.uleb128 0x22
 7090 15d4 9E280000 		.4byte	.LASF1245
 7091 15d8 01       		.byte	0x1
 7092 15d9 A703     		.2byte	0x3a7
 7093 15db 54000000 		.4byte	0x54
 7094 15df 02       		.uleb128 0x2
 7095 15e0 91       		.byte	0x91
 7096 15e1 74       		.sleb128 -12
 7097 15e2 22       		.uleb128 0x22
 7098 15e3 769B0000 		.4byte	.LASF1241
 7099 15e7 01       		.byte	0x1
 7100 15e8 A803     		.2byte	0x3a8
 7101 15ea F8150000 		.4byte	0x15f8
 7102 15ee 02       		.uleb128 0x2
 7103 15ef 91       		.byte	0x91
 7104 15f0 70       		.sleb128 -16
 7105 15f1 00       		.byte	0
 7106 15f2 11       		.uleb128 0x11
 7107 15f3 04       		.byte	0x4
 7108 15f4 0B0B0000 		.4byte	0xb0b
 7109 15f8 03       		.uleb128 0x3
 7110 15f9 F2150000 		.4byte	0x15f2
 7111 15fd 20       		.uleb128 0x20
 7112 15fe C2630000 		.4byte	.LASF1316
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 168


 7113 1602 01       		.byte	0x1
 7114 1603 6503     		.2byte	0x365
 7115 1605 00000000 		.4byte	.LFB7
 7116 1609 98000000 		.4byte	.LFE7-.LFB7
 7117 160d 01       		.uleb128 0x1
 7118 160e 9C       		.byte	0x9c
 7119 160f 32160000 		.4byte	0x1632
 7120 1613 21       		.uleb128 0x21
 7121 1614 AA290000 		.4byte	.LASF1317
 7122 1618 01       		.byte	0x1
 7123 1619 6503     		.2byte	0x365
 7124 161b DF090000 		.4byte	0x9df
 7125 161f 02       		.uleb128 0x2
 7126 1620 91       		.byte	0x91
 7127 1621 6C       		.sleb128 -20
 7128 1622 22       		.uleb128 0x22
 7129 1623 769B0000 		.4byte	.LASF1241
 7130 1627 01       		.byte	0x1
 7131 1628 6703     		.2byte	0x367
 7132 162a 210B0000 		.4byte	0xb21
 7133 162e 02       		.uleb128 0x2
 7134 162f 91       		.byte	0x91
 7135 1630 74       		.sleb128 -12
 7136 1631 00       		.byte	0
 7137 1632 20       		.uleb128 0x20
 7138 1633 437C0000 		.4byte	.LASF1318
 7139 1637 01       		.byte	0x1
 7140 1638 FC02     		.2byte	0x2fc
 7141 163a 00000000 		.4byte	.LFB6
 7142 163e FC000000 		.4byte	.LFE6-.LFB6
 7143 1642 01       		.uleb128 0x1
 7144 1643 9C       		.byte	0x9c
 7145 1644 94160000 		.4byte	0x1694
 7146 1648 21       		.uleb128 0x21
 7147 1649 5B1D0000 		.4byte	.LASF1319
 7148 164d 01       		.byte	0x1
 7149 164e FC02     		.2byte	0x2fc
 7150 1650 DF090000 		.4byte	0x9df
 7151 1654 02       		.uleb128 0x2
 7152 1655 91       		.byte	0x91
 7153 1656 64       		.sleb128 -28
 7154 1657 21       		.uleb128 0x21
 7155 1658 41690000 		.4byte	.LASF1320
 7156 165c 01       		.byte	0x1
 7157 165d FC02     		.2byte	0x2fc
 7158 165f 60000000 		.4byte	0x60
 7159 1663 02       		.uleb128 0x2
 7160 1664 91       		.byte	0x91
 7161 1665 60       		.sleb128 -32
 7162 1666 22       		.uleb128 0x22
 7163 1667 769B0000 		.4byte	.LASF1241
 7164 166b 01       		.byte	0x1
 7165 166c FE02     		.2byte	0x2fe
 7166 166e 210B0000 		.4byte	0xb21
 7167 1672 02       		.uleb128 0x2
 7168 1673 91       		.byte	0x91
 7169 1674 70       		.sleb128 -16
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 169


 7170 1675 22       		.uleb128 0x22
 7171 1676 54160000 		.4byte	.LASF1321
 7172 167a 01       		.byte	0x1
 7173 167b FF02     		.2byte	0x2ff
 7174 167d 60000000 		.4byte	0x60
 7175 1681 02       		.uleb128 0x2
 7176 1682 91       		.byte	0x91
 7177 1683 6C       		.sleb128 -20
 7178 1684 22       		.uleb128 0x22
 7179 1685 054E0000 		.4byte	.LASF1307
 7180 1689 01       		.byte	0x1
 7181 168a FF02     		.2byte	0x2ff
 7182 168c 60000000 		.4byte	0x60
 7183 1690 02       		.uleb128 0x2
 7184 1691 91       		.byte	0x91
 7185 1692 74       		.sleb128 -12
 7186 1693 00       		.byte	0
 7187 1694 25       		.uleb128 0x25
 7188 1695 97610000 		.4byte	.LASF1322
 7189 1699 01       		.byte	0x1
 7190 169a E602     		.2byte	0x2e6
 7191 169c 60000000 		.4byte	0x60
 7192 16a0 00000000 		.4byte	.LFB5
 7193 16a4 34000000 		.4byte	.LFE5-.LFB5
 7194 16a8 01       		.uleb128 0x1
 7195 16a9 9C       		.byte	0x9c
 7196 16aa DC160000 		.4byte	0x16dc
 7197 16ae 21       		.uleb128 0x21
 7198 16af 5B1D0000 		.4byte	.LASF1319
 7199 16b3 01       		.byte	0x1
 7200 16b4 E602     		.2byte	0x2e6
 7201 16b6 DF090000 		.4byte	0x9df
 7202 16ba 02       		.uleb128 0x2
 7203 16bb 91       		.byte	0x91
 7204 16bc 6C       		.sleb128 -20
 7205 16bd 22       		.uleb128 0x22
 7206 16be 769B0000 		.4byte	.LASF1241
 7207 16c2 01       		.byte	0x1
 7208 16c3 E802     		.2byte	0x2e8
 7209 16c5 210B0000 		.4byte	0xb21
 7210 16c9 02       		.uleb128 0x2
 7211 16ca 91       		.byte	0x91
 7212 16cb 74       		.sleb128 -12
 7213 16cc 22       		.uleb128 0x22
 7214 16cd 3C110000 		.4byte	.LASF1250
 7215 16d1 01       		.byte	0x1
 7216 16d2 E902     		.2byte	0x2e9
 7217 16d4 60000000 		.4byte	0x60
 7218 16d8 02       		.uleb128 0x2
 7219 16d9 91       		.byte	0x91
 7220 16da 70       		.sleb128 -16
 7221 16db 00       		.byte	0
 7222 16dc 20       		.uleb128 0x20
 7223 16dd 54660000 		.4byte	.LASF1323
 7224 16e1 01       		.byte	0x1
 7225 16e2 A902     		.2byte	0x2a9
 7226 16e4 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 170


 7227 16e8 8C000000 		.4byte	.LFE4-.LFB4
 7228 16ec 01       		.uleb128 0x1
 7229 16ed 9C       		.byte	0x9c
 7230 16ee 20170000 		.4byte	0x1720
 7231 16f2 21       		.uleb128 0x21
 7232 16f3 4A880000 		.4byte	.LASF1324
 7233 16f7 01       		.byte	0x1
 7234 16f8 A902     		.2byte	0x2a9
 7235 16fa DE080000 		.4byte	0x8de
 7236 16fe 02       		.uleb128 0x2
 7237 16ff 91       		.byte	0x91
 7238 1700 6C       		.sleb128 -20
 7239 1701 22       		.uleb128 0x22
 7240 1702 79130000 		.4byte	.LASF1287
 7241 1706 01       		.byte	0x1
 7242 1707 AB02     		.2byte	0x2ab
 7243 1709 DE080000 		.4byte	0x8de
 7244 170d 02       		.uleb128 0x2
 7245 170e 91       		.byte	0x91
 7246 170f 70       		.sleb128 -16
 7247 1710 22       		.uleb128 0x22
 7248 1711 31720000 		.4byte	.LASF1306
 7249 1715 01       		.byte	0x1
 7250 1716 AC02     		.2byte	0x2ac
 7251 1718 54000000 		.4byte	0x54
 7252 171c 02       		.uleb128 0x2
 7253 171d 91       		.byte	0x91
 7254 171e 74       		.sleb128 -12
 7255 171f 00       		.byte	0
 7256 1720 20       		.uleb128 0x20
 7257 1721 366C0000 		.4byte	.LASF1325
 7258 1725 01       		.byte	0x1
 7259 1726 5C02     		.2byte	0x25c
 7260 1728 00000000 		.4byte	.LFB3
 7261 172c D4000000 		.4byte	.LFE3-.LFB3
 7262 1730 01       		.uleb128 0x1
 7263 1731 9C       		.byte	0x9c
 7264 1732 82170000 		.4byte	0x1782
 7265 1736 21       		.uleb128 0x21
 7266 1737 DB6E0000 		.4byte	.LASF1326
 7267 173b 01       		.byte	0x1
 7268 173c 5C02     		.2byte	0x25c
 7269 173e A0110000 		.4byte	0x11a0
 7270 1742 02       		.uleb128 0x2
 7271 1743 91       		.byte	0x91
 7272 1744 64       		.sleb128 -28
 7273 1745 21       		.uleb128 0x21
 7274 1746 FF650000 		.4byte	.LASF1327
 7275 174a 01       		.byte	0x1
 7276 174b 5C02     		.2byte	0x25c
 7277 174d DE080000 		.4byte	0x8de
 7278 1751 02       		.uleb128 0x2
 7279 1752 91       		.byte	0x91
 7280 1753 60       		.sleb128 -32
 7281 1754 22       		.uleb128 0x22
 7282 1755 79130000 		.4byte	.LASF1287
 7283 1759 01       		.byte	0x1
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 171


 7284 175a 5E02     		.2byte	0x25e
 7285 175c DE080000 		.4byte	0x8de
 7286 1760 02       		.uleb128 0x2
 7287 1761 91       		.byte	0x91
 7288 1762 70       		.sleb128 -16
 7289 1763 22       		.uleb128 0x22
 7290 1764 31720000 		.4byte	.LASF1306
 7291 1768 01       		.byte	0x1
 7292 1769 5F02     		.2byte	0x25f
 7293 176b 54000000 		.4byte	0x54
 7294 176f 02       		.uleb128 0x2
 7295 1770 91       		.byte	0x91
 7296 1771 6C       		.sleb128 -20
 7297 1772 22       		.uleb128 0x22
 7298 1773 296C0000 		.4byte	.LASF1328
 7299 1777 01       		.byte	0x1
 7300 1778 5F02     		.2byte	0x25f
 7301 177a 54000000 		.4byte	0x54
 7302 177e 02       		.uleb128 0x2
 7303 177f 91       		.byte	0x91
 7304 1780 74       		.sleb128 -12
 7305 1781 00       		.byte	0
 7306 1782 20       		.uleb128 0x20
 7307 1783 47310000 		.4byte	.LASF1329
 7308 1787 01       		.byte	0x1
 7309 1788 1A02     		.2byte	0x21a
 7310 178a 00000000 		.4byte	.LFB2
 7311 178e 98000000 		.4byte	.LFE2-.LFB2
 7312 1792 01       		.uleb128 0x1
 7313 1793 9C       		.byte	0x9c
 7314 1794 B7170000 		.4byte	0x17b7
 7315 1798 21       		.uleb128 0x21
 7316 1799 E65C0000 		.4byte	.LASF1330
 7317 179d 01       		.byte	0x1
 7318 179e 1A02     		.2byte	0x21a
 7319 17a0 DF090000 		.4byte	0x9df
 7320 17a4 02       		.uleb128 0x2
 7321 17a5 91       		.byte	0x91
 7322 17a6 6C       		.sleb128 -20
 7323 17a7 22       		.uleb128 0x22
 7324 17a8 769B0000 		.4byte	.LASF1241
 7325 17ac 01       		.byte	0x1
 7326 17ad 1C02     		.2byte	0x21c
 7327 17af 210B0000 		.4byte	0xb21
 7328 17b3 02       		.uleb128 0x2
 7329 17b4 91       		.byte	0x91
 7330 17b5 74       		.sleb128 -12
 7331 17b6 00       		.byte	0
 7332 17b7 31       		.uleb128 0x31
 7333 17b8 39620000 		.4byte	.LASF1331
 7334 17bc 01       		.byte	0x1
 7335 17bd 8201     		.2byte	0x182
 7336 17bf 54000000 		.4byte	0x54
 7337 17c3 00000000 		.4byte	.LFB1
 7338 17c7 58010000 		.4byte	.LFE1-.LFB1
 7339 17cb 01       		.uleb128 0x1
 7340 17cc 9C       		.byte	0x9c
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 172


 7341 17cd 21       		.uleb128 0x21
 7342 17ce E12D0000 		.4byte	.LASF1332
 7343 17d2 01       		.byte	0x1
 7344 17d3 8201     		.2byte	0x182
 7345 17d5 B7080000 		.4byte	0x8b7
 7346 17d9 02       		.uleb128 0x2
 7347 17da 91       		.byte	0x91
 7348 17db 64       		.sleb128 -28
 7349 17dc 21       		.uleb128 0x21
 7350 17dd 4F200000 		.4byte	.LASF1274
 7351 17e1 01       		.byte	0x1
 7352 17e2 8201     		.2byte	0x182
 7353 17e4 610A0000 		.4byte	0xa61
 7354 17e8 02       		.uleb128 0x2
 7355 17e9 91       		.byte	0x91
 7356 17ea 60       		.sleb128 -32
 7357 17eb 21       		.uleb128 0x21
 7358 17ec 95020000 		.4byte	.LASF1267
 7359 17f0 01       		.byte	0x1
 7360 17f1 8201     		.2byte	0x182
 7361 17f3 4D000000 		.4byte	0x4d
 7362 17f7 02       		.uleb128 0x2
 7363 17f8 91       		.byte	0x91
 7364 17f9 5E       		.sleb128 -34
 7365 17fa 21       		.uleb128 0x21
 7366 17fb 218A0000 		.4byte	.LASF1277
 7367 17ff 01       		.byte	0x1
 7368 1800 8201     		.2byte	0x182
 7369 1802 93000000 		.4byte	0x93
 7370 1806 02       		.uleb128 0x2
 7371 1807 91       		.byte	0x91
 7372 1808 58       		.sleb128 -40
 7373 1809 21       		.uleb128 0x21
 7374 180a AA9B0000 		.4byte	.LASF1206
 7375 180e 01       		.byte	0x1
 7376 180f 8201     		.2byte	0x182
 7377 1811 60000000 		.4byte	0x60
 7378 1815 02       		.uleb128 0x2
 7379 1816 91       		.byte	0x91
 7380 1817 00       		.sleb128 0
 7381 1818 21       		.uleb128 0x21
 7382 1819 553B0000 		.4byte	.LASF1333
 7383 181d 01       		.byte	0x1
 7384 181e 8201     		.2byte	0x182
 7385 1820 720D0000 		.4byte	0xd72
 7386 1824 02       		.uleb128 0x2
 7387 1825 91       		.byte	0x91
 7388 1826 04       		.sleb128 4
 7389 1827 21       		.uleb128 0x21
 7390 1828 0B760000 		.4byte	.LASF1268
 7391 182c 01       		.byte	0x1
 7392 182d 8201     		.2byte	0x182
 7393 182f 660A0000 		.4byte	0xa66
 7394 1833 02       		.uleb128 0x2
 7395 1834 91       		.byte	0x91
 7396 1835 08       		.sleb128 8
 7397 1836 21       		.uleb128 0x21
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 173


 7398 1837 E88B0000 		.4byte	.LASF1275
 7399 183b 01       		.byte	0x1
 7400 183c 8201     		.2byte	0x182
 7401 183e 0A110000 		.4byte	0x110a
 7402 1842 02       		.uleb128 0x2
 7403 1843 91       		.byte	0x91
 7404 1844 0C       		.sleb128 12
 7405 1845 22       		.uleb128 0x22
 7406 1846 9E280000 		.4byte	.LASF1245
 7407 184a 01       		.byte	0x1
 7408 184b 8401     		.2byte	0x184
 7409 184d 54000000 		.4byte	0x54
 7410 1851 02       		.uleb128 0x2
 7411 1852 91       		.byte	0x91
 7412 1853 74       		.sleb128 -12
 7413 1854 22       		.uleb128 0x22
 7414 1855 BC110000 		.4byte	.LASF1269
 7415 1859 01       		.byte	0x1
 7416 185a 8501     		.2byte	0x185
 7417 185c 210B0000 		.4byte	0xb21
 7418 1860 02       		.uleb128 0x2
 7419 1861 91       		.byte	0x91
 7420 1862 70       		.sleb128 -16
 7421 1863 28       		.uleb128 0x28
 7422 1864 22000000 		.4byte	.LBB2
 7423 1868 E8000000 		.4byte	.LBE2-.LBB2
 7424 186c 22       		.uleb128 0x22
 7425 186d 162B0000 		.4byte	.LASF1203
 7426 1871 01       		.byte	0x1
 7427 1872 8D01     		.2byte	0x18d
 7428 1874 660A0000 		.4byte	0xa66
 7429 1878 02       		.uleb128 0x2
 7430 1879 91       		.byte	0x91
 7431 187a 6C       		.sleb128 -20
 7432 187b 00       		.byte	0
 7433 187c 00       		.byte	0
 7434 187d 00       		.byte	0
 7435              		.section	.debug_abbrev,"",%progbits
 7436              	.Ldebug_abbrev0:
 7437 0000 01       		.uleb128 0x1
 7438 0001 11       		.uleb128 0x11
 7439 0002 01       		.byte	0x1
 7440 0003 25       		.uleb128 0x25
 7441 0004 0E       		.uleb128 0xe
 7442 0005 13       		.uleb128 0x13
 7443 0006 0B       		.uleb128 0xb
 7444 0007 03       		.uleb128 0x3
 7445 0008 0E       		.uleb128 0xe
 7446 0009 1B       		.uleb128 0x1b
 7447 000a 0E       		.uleb128 0xe
 7448 000b 55       		.uleb128 0x55
 7449 000c 17       		.uleb128 0x17
 7450 000d 11       		.uleb128 0x11
 7451 000e 01       		.uleb128 0x1
 7452 000f 10       		.uleb128 0x10
 7453 0010 17       		.uleb128 0x17
 7454 0011 9942     		.uleb128 0x2119
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 174


 7455 0013 17       		.uleb128 0x17
 7456 0014 00       		.byte	0
 7457 0015 00       		.byte	0
 7458 0016 02       		.uleb128 0x2
 7459 0017 24       		.uleb128 0x24
 7460 0018 00       		.byte	0
 7461 0019 0B       		.uleb128 0xb
 7462 001a 0B       		.uleb128 0xb
 7463 001b 3E       		.uleb128 0x3e
 7464 001c 0B       		.uleb128 0xb
 7465 001d 03       		.uleb128 0x3
 7466 001e 0E       		.uleb128 0xe
 7467 001f 00       		.byte	0
 7468 0020 00       		.byte	0
 7469 0021 03       		.uleb128 0x3
 7470 0022 26       		.uleb128 0x26
 7471 0023 00       		.byte	0
 7472 0024 49       		.uleb128 0x49
 7473 0025 13       		.uleb128 0x13
 7474 0026 00       		.byte	0
 7475 0027 00       		.byte	0
 7476 0028 04       		.uleb128 0x4
 7477 0029 35       		.uleb128 0x35
 7478 002a 00       		.byte	0
 7479 002b 49       		.uleb128 0x49
 7480 002c 13       		.uleb128 0x13
 7481 002d 00       		.byte	0
 7482 002e 00       		.byte	0
 7483 002f 05       		.uleb128 0x5
 7484 0030 24       		.uleb128 0x24
 7485 0031 00       		.byte	0
 7486 0032 0B       		.uleb128 0xb
 7487 0033 0B       		.uleb128 0xb
 7488 0034 3E       		.uleb128 0x3e
 7489 0035 0B       		.uleb128 0xb
 7490 0036 03       		.uleb128 0x3
 7491 0037 08       		.uleb128 0x8
 7492 0038 00       		.byte	0
 7493 0039 00       		.byte	0
 7494 003a 06       		.uleb128 0x6
 7495 003b 16       		.uleb128 0x16
 7496 003c 00       		.byte	0
 7497 003d 03       		.uleb128 0x3
 7498 003e 0E       		.uleb128 0xe
 7499 003f 3A       		.uleb128 0x3a
 7500 0040 0B       		.uleb128 0xb
 7501 0041 3B       		.uleb128 0x3b
 7502 0042 0B       		.uleb128 0xb
 7503 0043 49       		.uleb128 0x49
 7504 0044 13       		.uleb128 0x13
 7505 0045 00       		.byte	0
 7506 0046 00       		.byte	0
 7507 0047 07       		.uleb128 0x7
 7508 0048 0F       		.uleb128 0xf
 7509 0049 00       		.byte	0
 7510 004a 0B       		.uleb128 0xb
 7511 004b 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 175


 7512 004c 00       		.byte	0
 7513 004d 00       		.byte	0
 7514 004e 08       		.uleb128 0x8
 7515 004f 16       		.uleb128 0x16
 7516 0050 00       		.byte	0
 7517 0051 03       		.uleb128 0x3
 7518 0052 0E       		.uleb128 0xe
 7519 0053 3A       		.uleb128 0x3a
 7520 0054 0B       		.uleb128 0xb
 7521 0055 3B       		.uleb128 0x3b
 7522 0056 05       		.uleb128 0x5
 7523 0057 49       		.uleb128 0x49
 7524 0058 13       		.uleb128 0x13
 7525 0059 00       		.byte	0
 7526 005a 00       		.byte	0
 7527 005b 09       		.uleb128 0x9
 7528 005c 17       		.uleb128 0x17
 7529 005d 01       		.byte	0x1
 7530 005e 0B       		.uleb128 0xb
 7531 005f 0B       		.uleb128 0xb
 7532 0060 3A       		.uleb128 0x3a
 7533 0061 0B       		.uleb128 0xb
 7534 0062 3B       		.uleb128 0x3b
 7535 0063 0B       		.uleb128 0xb
 7536 0064 01       		.uleb128 0x1
 7537 0065 13       		.uleb128 0x13
 7538 0066 00       		.byte	0
 7539 0067 00       		.byte	0
 7540 0068 0A       		.uleb128 0xa
 7541 0069 0D       		.uleb128 0xd
 7542 006a 00       		.byte	0
 7543 006b 03       		.uleb128 0x3
 7544 006c 0E       		.uleb128 0xe
 7545 006d 3A       		.uleb128 0x3a
 7546 006e 0B       		.uleb128 0xb
 7547 006f 3B       		.uleb128 0x3b
 7548 0070 0B       		.uleb128 0xb
 7549 0071 49       		.uleb128 0x49
 7550 0072 13       		.uleb128 0x13
 7551 0073 00       		.byte	0
 7552 0074 00       		.byte	0
 7553 0075 0B       		.uleb128 0xb
 7554 0076 01       		.uleb128 0x1
 7555 0077 01       		.byte	0x1
 7556 0078 49       		.uleb128 0x49
 7557 0079 13       		.uleb128 0x13
 7558 007a 01       		.uleb128 0x1
 7559 007b 13       		.uleb128 0x13
 7560 007c 00       		.byte	0
 7561 007d 00       		.byte	0
 7562 007e 0C       		.uleb128 0xc
 7563 007f 21       		.uleb128 0x21
 7564 0080 00       		.byte	0
 7565 0081 49       		.uleb128 0x49
 7566 0082 13       		.uleb128 0x13
 7567 0083 2F       		.uleb128 0x2f
 7568 0084 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 176


 7569 0085 00       		.byte	0
 7570 0086 00       		.byte	0
 7571 0087 0D       		.uleb128 0xd
 7572 0088 13       		.uleb128 0x13
 7573 0089 01       		.byte	0x1
 7574 008a 0B       		.uleb128 0xb
 7575 008b 0B       		.uleb128 0xb
 7576 008c 3A       		.uleb128 0x3a
 7577 008d 0B       		.uleb128 0xb
 7578 008e 3B       		.uleb128 0x3b
 7579 008f 0B       		.uleb128 0xb
 7580 0090 01       		.uleb128 0x1
 7581 0091 13       		.uleb128 0x13
 7582 0092 00       		.byte	0
 7583 0093 00       		.byte	0
 7584 0094 0E       		.uleb128 0xe
 7585 0095 0D       		.uleb128 0xd
 7586 0096 00       		.byte	0
 7587 0097 03       		.uleb128 0x3
 7588 0098 0E       		.uleb128 0xe
 7589 0099 3A       		.uleb128 0x3a
 7590 009a 0B       		.uleb128 0xb
 7591 009b 3B       		.uleb128 0x3b
 7592 009c 0B       		.uleb128 0xb
 7593 009d 49       		.uleb128 0x49
 7594 009e 13       		.uleb128 0x13
 7595 009f 38       		.uleb128 0x38
 7596 00a0 0B       		.uleb128 0xb
 7597 00a1 00       		.byte	0
 7598 00a2 00       		.byte	0
 7599 00a3 0F       		.uleb128 0xf
 7600 00a4 13       		.uleb128 0x13
 7601 00a5 01       		.byte	0x1
 7602 00a6 03       		.uleb128 0x3
 7603 00a7 0E       		.uleb128 0xe
 7604 00a8 0B       		.uleb128 0xb
 7605 00a9 0B       		.uleb128 0xb
 7606 00aa 3A       		.uleb128 0x3a
 7607 00ab 0B       		.uleb128 0xb
 7608 00ac 3B       		.uleb128 0x3b
 7609 00ad 0B       		.uleb128 0xb
 7610 00ae 01       		.uleb128 0x1
 7611 00af 13       		.uleb128 0x13
 7612 00b0 00       		.byte	0
 7613 00b1 00       		.byte	0
 7614 00b2 10       		.uleb128 0x10
 7615 00b3 0D       		.uleb128 0xd
 7616 00b4 00       		.byte	0
 7617 00b5 03       		.uleb128 0x3
 7618 00b6 08       		.uleb128 0x8
 7619 00b7 3A       		.uleb128 0x3a
 7620 00b8 0B       		.uleb128 0xb
 7621 00b9 3B       		.uleb128 0x3b
 7622 00ba 0B       		.uleb128 0xb
 7623 00bb 49       		.uleb128 0x49
 7624 00bc 13       		.uleb128 0x13
 7625 00bd 38       		.uleb128 0x38
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 177


 7626 00be 0B       		.uleb128 0xb
 7627 00bf 00       		.byte	0
 7628 00c0 00       		.byte	0
 7629 00c1 11       		.uleb128 0x11
 7630 00c2 0F       		.uleb128 0xf
 7631 00c3 00       		.byte	0
 7632 00c4 0B       		.uleb128 0xb
 7633 00c5 0B       		.uleb128 0xb
 7634 00c6 49       		.uleb128 0x49
 7635 00c7 13       		.uleb128 0x13
 7636 00c8 00       		.byte	0
 7637 00c9 00       		.byte	0
 7638 00ca 12       		.uleb128 0x12
 7639 00cb 13       		.uleb128 0x13
 7640 00cc 01       		.byte	0x1
 7641 00cd 03       		.uleb128 0x3
 7642 00ce 0E       		.uleb128 0xe
 7643 00cf 0B       		.uleb128 0xb
 7644 00d0 05       		.uleb128 0x5
 7645 00d1 3A       		.uleb128 0x3a
 7646 00d2 0B       		.uleb128 0xb
 7647 00d3 3B       		.uleb128 0x3b
 7648 00d4 0B       		.uleb128 0xb
 7649 00d5 01       		.uleb128 0x1
 7650 00d6 13       		.uleb128 0x13
 7651 00d7 00       		.byte	0
 7652 00d8 00       		.byte	0
 7653 00d9 13       		.uleb128 0x13
 7654 00da 0D       		.uleb128 0xd
 7655 00db 00       		.byte	0
 7656 00dc 03       		.uleb128 0x3
 7657 00dd 0E       		.uleb128 0xe
 7658 00de 3A       		.uleb128 0x3a
 7659 00df 0B       		.uleb128 0xb
 7660 00e0 3B       		.uleb128 0x3b
 7661 00e1 0B       		.uleb128 0xb
 7662 00e2 49       		.uleb128 0x49
 7663 00e3 13       		.uleb128 0x13
 7664 00e4 38       		.uleb128 0x38
 7665 00e5 05       		.uleb128 0x5
 7666 00e6 00       		.byte	0
 7667 00e7 00       		.byte	0
 7668 00e8 14       		.uleb128 0x14
 7669 00e9 15       		.uleb128 0x15
 7670 00ea 00       		.byte	0
 7671 00eb 27       		.uleb128 0x27
 7672 00ec 19       		.uleb128 0x19
 7673 00ed 00       		.byte	0
 7674 00ee 00       		.byte	0
 7675 00ef 15       		.uleb128 0x15
 7676 00f0 13       		.uleb128 0x13
 7677 00f1 01       		.byte	0x1
 7678 00f2 03       		.uleb128 0x3
 7679 00f3 0E       		.uleb128 0xe
 7680 00f4 0B       		.uleb128 0xb
 7681 00f5 0B       		.uleb128 0xb
 7682 00f6 3A       		.uleb128 0x3a
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 178


 7683 00f7 0B       		.uleb128 0xb
 7684 00f8 3B       		.uleb128 0x3b
 7685 00f9 05       		.uleb128 0x5
 7686 00fa 01       		.uleb128 0x1
 7687 00fb 13       		.uleb128 0x13
 7688 00fc 00       		.byte	0
 7689 00fd 00       		.byte	0
 7690 00fe 16       		.uleb128 0x16
 7691 00ff 0D       		.uleb128 0xd
 7692 0100 00       		.byte	0
 7693 0101 03       		.uleb128 0x3
 7694 0102 0E       		.uleb128 0xe
 7695 0103 3A       		.uleb128 0x3a
 7696 0104 0B       		.uleb128 0xb
 7697 0105 3B       		.uleb128 0x3b
 7698 0106 05       		.uleb128 0x5
 7699 0107 49       		.uleb128 0x49
 7700 0108 13       		.uleb128 0x13
 7701 0109 38       		.uleb128 0x38
 7702 010a 0B       		.uleb128 0xb
 7703 010b 00       		.byte	0
 7704 010c 00       		.byte	0
 7705 010d 17       		.uleb128 0x17
 7706 010e 0D       		.uleb128 0xd
 7707 010f 00       		.byte	0
 7708 0110 03       		.uleb128 0x3
 7709 0111 08       		.uleb128 0x8
 7710 0112 3A       		.uleb128 0x3a
 7711 0113 0B       		.uleb128 0xb
 7712 0114 3B       		.uleb128 0x3b
 7713 0115 05       		.uleb128 0x5
 7714 0116 49       		.uleb128 0x49
 7715 0117 13       		.uleb128 0x13
 7716 0118 38       		.uleb128 0x38
 7717 0119 0B       		.uleb128 0xb
 7718 011a 00       		.byte	0
 7719 011b 00       		.byte	0
 7720 011c 18       		.uleb128 0x18
 7721 011d 15       		.uleb128 0x15
 7722 011e 01       		.byte	0x1
 7723 011f 27       		.uleb128 0x27
 7724 0120 19       		.uleb128 0x19
 7725 0121 49       		.uleb128 0x49
 7726 0122 13       		.uleb128 0x13
 7727 0123 01       		.uleb128 0x1
 7728 0124 13       		.uleb128 0x13
 7729 0125 00       		.byte	0
 7730 0126 00       		.byte	0
 7731 0127 19       		.uleb128 0x19
 7732 0128 05       		.uleb128 0x5
 7733 0129 00       		.byte	0
 7734 012a 49       		.uleb128 0x49
 7735 012b 13       		.uleb128 0x13
 7736 012c 00       		.byte	0
 7737 012d 00       		.byte	0
 7738 012e 1A       		.uleb128 0x1a
 7739 012f 13       		.uleb128 0x13
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 179


 7740 0130 00       		.byte	0
 7741 0131 03       		.uleb128 0x3
 7742 0132 0E       		.uleb128 0xe
 7743 0133 3C       		.uleb128 0x3c
 7744 0134 19       		.uleb128 0x19
 7745 0135 00       		.byte	0
 7746 0136 00       		.byte	0
 7747 0137 1B       		.uleb128 0x1b
 7748 0138 15       		.uleb128 0x15
 7749 0139 01       		.byte	0x1
 7750 013a 27       		.uleb128 0x27
 7751 013b 19       		.uleb128 0x19
 7752 013c 01       		.uleb128 0x1
 7753 013d 13       		.uleb128 0x13
 7754 013e 00       		.byte	0
 7755 013f 00       		.byte	0
 7756 0140 1C       		.uleb128 0x1c
 7757 0141 34       		.uleb128 0x34
 7758 0142 00       		.byte	0
 7759 0143 03       		.uleb128 0x3
 7760 0144 0E       		.uleb128 0xe
 7761 0145 3A       		.uleb128 0x3a
 7762 0146 0B       		.uleb128 0xb
 7763 0147 3B       		.uleb128 0x3b
 7764 0148 05       		.uleb128 0x5
 7765 0149 49       		.uleb128 0x49
 7766 014a 13       		.uleb128 0x13
 7767 014b 3F       		.uleb128 0x3f
 7768 014c 19       		.uleb128 0x19
 7769 014d 3C       		.uleb128 0x3c
 7770 014e 19       		.uleb128 0x19
 7771 014f 00       		.byte	0
 7772 0150 00       		.byte	0
 7773 0151 1D       		.uleb128 0x1d
 7774 0152 34       		.uleb128 0x34
 7775 0153 00       		.byte	0
 7776 0154 03       		.uleb128 0x3
 7777 0155 0E       		.uleb128 0xe
 7778 0156 3A       		.uleb128 0x3a
 7779 0157 0B       		.uleb128 0xb
 7780 0158 3B       		.uleb128 0x3b
 7781 0159 0B       		.uleb128 0xb
 7782 015a 49       		.uleb128 0x49
 7783 015b 13       		.uleb128 0x13
 7784 015c 3F       		.uleb128 0x3f
 7785 015d 19       		.uleb128 0x19
 7786 015e 3C       		.uleb128 0x3c
 7787 015f 19       		.uleb128 0x19
 7788 0160 00       		.byte	0
 7789 0161 00       		.byte	0
 7790 0162 1E       		.uleb128 0x1e
 7791 0163 34       		.uleb128 0x34
 7792 0164 00       		.byte	0
 7793 0165 03       		.uleb128 0x3
 7794 0166 0E       		.uleb128 0xe
 7795 0167 3A       		.uleb128 0x3a
 7796 0168 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 180


 7797 0169 3B       		.uleb128 0x3b
 7798 016a 0B       		.uleb128 0xb
 7799 016b 49       		.uleb128 0x49
 7800 016c 13       		.uleb128 0x13
 7801 016d 3F       		.uleb128 0x3f
 7802 016e 19       		.uleb128 0x19
 7803 016f 02       		.uleb128 0x2
 7804 0170 18       		.uleb128 0x18
 7805 0171 00       		.byte	0
 7806 0172 00       		.byte	0
 7807 0173 1F       		.uleb128 0x1f
 7808 0174 34       		.uleb128 0x34
 7809 0175 00       		.byte	0
 7810 0176 03       		.uleb128 0x3
 7811 0177 0E       		.uleb128 0xe
 7812 0178 3A       		.uleb128 0x3a
 7813 0179 0B       		.uleb128 0xb
 7814 017a 3B       		.uleb128 0x3b
 7815 017b 0B       		.uleb128 0xb
 7816 017c 49       		.uleb128 0x49
 7817 017d 13       		.uleb128 0x13
 7818 017e 02       		.uleb128 0x2
 7819 017f 18       		.uleb128 0x18
 7820 0180 00       		.byte	0
 7821 0181 00       		.byte	0
 7822 0182 20       		.uleb128 0x20
 7823 0183 2E       		.uleb128 0x2e
 7824 0184 01       		.byte	0x1
 7825 0185 3F       		.uleb128 0x3f
 7826 0186 19       		.uleb128 0x19
 7827 0187 03       		.uleb128 0x3
 7828 0188 0E       		.uleb128 0xe
 7829 0189 3A       		.uleb128 0x3a
 7830 018a 0B       		.uleb128 0xb
 7831 018b 3B       		.uleb128 0x3b
 7832 018c 05       		.uleb128 0x5
 7833 018d 27       		.uleb128 0x27
 7834 018e 19       		.uleb128 0x19
 7835 018f 11       		.uleb128 0x11
 7836 0190 01       		.uleb128 0x1
 7837 0191 12       		.uleb128 0x12
 7838 0192 06       		.uleb128 0x6
 7839 0193 40       		.uleb128 0x40
 7840 0194 18       		.uleb128 0x18
 7841 0195 9642     		.uleb128 0x2116
 7842 0197 19       		.uleb128 0x19
 7843 0198 01       		.uleb128 0x1
 7844 0199 13       		.uleb128 0x13
 7845 019a 00       		.byte	0
 7846 019b 00       		.byte	0
 7847 019c 21       		.uleb128 0x21
 7848 019d 05       		.uleb128 0x5
 7849 019e 00       		.byte	0
 7850 019f 03       		.uleb128 0x3
 7851 01a0 0E       		.uleb128 0xe
 7852 01a1 3A       		.uleb128 0x3a
 7853 01a2 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 181


 7854 01a3 3B       		.uleb128 0x3b
 7855 01a4 05       		.uleb128 0x5
 7856 01a5 49       		.uleb128 0x49
 7857 01a6 13       		.uleb128 0x13
 7858 01a7 02       		.uleb128 0x2
 7859 01a8 18       		.uleb128 0x18
 7860 01a9 00       		.byte	0
 7861 01aa 00       		.byte	0
 7862 01ab 22       		.uleb128 0x22
 7863 01ac 34       		.uleb128 0x34
 7864 01ad 00       		.byte	0
 7865 01ae 03       		.uleb128 0x3
 7866 01af 0E       		.uleb128 0xe
 7867 01b0 3A       		.uleb128 0x3a
 7868 01b1 0B       		.uleb128 0xb
 7869 01b2 3B       		.uleb128 0x3b
 7870 01b3 05       		.uleb128 0x5
 7871 01b4 49       		.uleb128 0x49
 7872 01b5 13       		.uleb128 0x13
 7873 01b6 02       		.uleb128 0x2
 7874 01b7 18       		.uleb128 0x18
 7875 01b8 00       		.byte	0
 7876 01b9 00       		.byte	0
 7877 01ba 23       		.uleb128 0x23
 7878 01bb 2E       		.uleb128 0x2e
 7879 01bc 01       		.byte	0x1
 7880 01bd 3F       		.uleb128 0x3f
 7881 01be 19       		.uleb128 0x19
 7882 01bf 03       		.uleb128 0x3
 7883 01c0 0E       		.uleb128 0xe
 7884 01c1 3A       		.uleb128 0x3a
 7885 01c2 0B       		.uleb128 0xb
 7886 01c3 3B       		.uleb128 0x3b
 7887 01c4 05       		.uleb128 0x5
 7888 01c5 27       		.uleb128 0x27
 7889 01c6 19       		.uleb128 0x19
 7890 01c7 49       		.uleb128 0x49
 7891 01c8 13       		.uleb128 0x13
 7892 01c9 11       		.uleb128 0x11
 7893 01ca 01       		.uleb128 0x1
 7894 01cb 12       		.uleb128 0x12
 7895 01cc 06       		.uleb128 0x6
 7896 01cd 40       		.uleb128 0x40
 7897 01ce 18       		.uleb128 0x18
 7898 01cf 9742     		.uleb128 0x2117
 7899 01d1 19       		.uleb128 0x19
 7900 01d2 01       		.uleb128 0x1
 7901 01d3 13       		.uleb128 0x13
 7902 01d4 00       		.byte	0
 7903 01d5 00       		.byte	0
 7904 01d6 24       		.uleb128 0x24
 7905 01d7 2E       		.uleb128 0x2e
 7906 01d8 01       		.byte	0x1
 7907 01d9 03       		.uleb128 0x3
 7908 01da 0E       		.uleb128 0xe
 7909 01db 3A       		.uleb128 0x3a
 7910 01dc 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 182


 7911 01dd 3B       		.uleb128 0x3b
 7912 01de 05       		.uleb128 0x5
 7913 01df 27       		.uleb128 0x27
 7914 01e0 19       		.uleb128 0x19
 7915 01e1 11       		.uleb128 0x11
 7916 01e2 01       		.uleb128 0x1
 7917 01e3 12       		.uleb128 0x12
 7918 01e4 06       		.uleb128 0x6
 7919 01e5 40       		.uleb128 0x40
 7920 01e6 18       		.uleb128 0x18
 7921 01e7 9642     		.uleb128 0x2116
 7922 01e9 19       		.uleb128 0x19
 7923 01ea 01       		.uleb128 0x1
 7924 01eb 13       		.uleb128 0x13
 7925 01ec 00       		.byte	0
 7926 01ed 00       		.byte	0
 7927 01ee 25       		.uleb128 0x25
 7928 01ef 2E       		.uleb128 0x2e
 7929 01f0 01       		.byte	0x1
 7930 01f1 3F       		.uleb128 0x3f
 7931 01f2 19       		.uleb128 0x19
 7932 01f3 03       		.uleb128 0x3
 7933 01f4 0E       		.uleb128 0xe
 7934 01f5 3A       		.uleb128 0x3a
 7935 01f6 0B       		.uleb128 0xb
 7936 01f7 3B       		.uleb128 0x3b
 7937 01f8 05       		.uleb128 0x5
 7938 01f9 27       		.uleb128 0x27
 7939 01fa 19       		.uleb128 0x19
 7940 01fb 49       		.uleb128 0x49
 7941 01fc 13       		.uleb128 0x13
 7942 01fd 11       		.uleb128 0x11
 7943 01fe 01       		.uleb128 0x1
 7944 01ff 12       		.uleb128 0x12
 7945 0200 06       		.uleb128 0x6
 7946 0201 40       		.uleb128 0x40
 7947 0202 18       		.uleb128 0x18
 7948 0203 9642     		.uleb128 0x2116
 7949 0205 19       		.uleb128 0x19
 7950 0206 01       		.uleb128 0x1
 7951 0207 13       		.uleb128 0x13
 7952 0208 00       		.byte	0
 7953 0209 00       		.byte	0
 7954 020a 26       		.uleb128 0x26
 7955 020b 2E       		.uleb128 0x2e
 7956 020c 01       		.byte	0x1
 7957 020d 03       		.uleb128 0x3
 7958 020e 0E       		.uleb128 0xe
 7959 020f 3A       		.uleb128 0x3a
 7960 0210 0B       		.uleb128 0xb
 7961 0211 3B       		.uleb128 0x3b
 7962 0212 05       		.uleb128 0x5
 7963 0213 27       		.uleb128 0x27
 7964 0214 19       		.uleb128 0x19
 7965 0215 49       		.uleb128 0x49
 7966 0216 13       		.uleb128 0x13
 7967 0217 11       		.uleb128 0x11
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 183


 7968 0218 01       		.uleb128 0x1
 7969 0219 12       		.uleb128 0x12
 7970 021a 06       		.uleb128 0x6
 7971 021b 40       		.uleb128 0x40
 7972 021c 18       		.uleb128 0x18
 7973 021d 9742     		.uleb128 0x2117
 7974 021f 19       		.uleb128 0x19
 7975 0220 01       		.uleb128 0x1
 7976 0221 13       		.uleb128 0x13
 7977 0222 00       		.byte	0
 7978 0223 00       		.byte	0
 7979 0224 27       		.uleb128 0x27
 7980 0225 0B       		.uleb128 0xb
 7981 0226 01       		.byte	0x1
 7982 0227 11       		.uleb128 0x11
 7983 0228 01       		.uleb128 0x1
 7984 0229 12       		.uleb128 0x12
 7985 022a 06       		.uleb128 0x6
 7986 022b 01       		.uleb128 0x1
 7987 022c 13       		.uleb128 0x13
 7988 022d 00       		.byte	0
 7989 022e 00       		.byte	0
 7990 022f 28       		.uleb128 0x28
 7991 0230 0B       		.uleb128 0xb
 7992 0231 01       		.byte	0x1
 7993 0232 11       		.uleb128 0x11
 7994 0233 01       		.uleb128 0x1
 7995 0234 12       		.uleb128 0x12
 7996 0235 06       		.uleb128 0x6
 7997 0236 00       		.byte	0
 7998 0237 00       		.byte	0
 7999 0238 29       		.uleb128 0x29
 8000 0239 2E       		.uleb128 0x2e
 8001 023a 01       		.byte	0x1
 8002 023b 03       		.uleb128 0x3
 8003 023c 0E       		.uleb128 0xe
 8004 023d 3A       		.uleb128 0x3a
 8005 023e 0B       		.uleb128 0xb
 8006 023f 3B       		.uleb128 0x3b
 8007 0240 05       		.uleb128 0x5
 8008 0241 27       		.uleb128 0x27
 8009 0242 19       		.uleb128 0x19
 8010 0243 49       		.uleb128 0x49
 8011 0244 13       		.uleb128 0x13
 8012 0245 11       		.uleb128 0x11
 8013 0246 01       		.uleb128 0x1
 8014 0247 12       		.uleb128 0x12
 8015 0248 06       		.uleb128 0x6
 8016 0249 40       		.uleb128 0x40
 8017 024a 18       		.uleb128 0x18
 8018 024b 9642     		.uleb128 0x2116
 8019 024d 19       		.uleb128 0x19
 8020 024e 01       		.uleb128 0x1
 8021 024f 13       		.uleb128 0x13
 8022 0250 00       		.byte	0
 8023 0251 00       		.byte	0
 8024 0252 2A       		.uleb128 0x2a
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 184


 8025 0253 2E       		.uleb128 0x2e
 8026 0254 00       		.byte	0
 8027 0255 3F       		.uleb128 0x3f
 8028 0256 19       		.uleb128 0x19
 8029 0257 03       		.uleb128 0x3
 8030 0258 0E       		.uleb128 0xe
 8031 0259 3A       		.uleb128 0x3a
 8032 025a 0B       		.uleb128 0xb
 8033 025b 3B       		.uleb128 0x3b
 8034 025c 05       		.uleb128 0x5
 8035 025d 27       		.uleb128 0x27
 8036 025e 19       		.uleb128 0x19
 8037 025f 11       		.uleb128 0x11
 8038 0260 01       		.uleb128 0x1
 8039 0261 12       		.uleb128 0x12
 8040 0262 06       		.uleb128 0x6
 8041 0263 40       		.uleb128 0x40
 8042 0264 18       		.uleb128 0x18
 8043 0265 9742     		.uleb128 0x2117
 8044 0267 19       		.uleb128 0x19
 8045 0268 00       		.byte	0
 8046 0269 00       		.byte	0
 8047 026a 2B       		.uleb128 0x2b
 8048 026b 2E       		.uleb128 0x2e
 8049 026c 01       		.byte	0x1
 8050 026d 3F       		.uleb128 0x3f
 8051 026e 19       		.uleb128 0x19
 8052 026f 03       		.uleb128 0x3
 8053 0270 0E       		.uleb128 0xe
 8054 0271 3A       		.uleb128 0x3a
 8055 0272 0B       		.uleb128 0xb
 8056 0273 3B       		.uleb128 0x3b
 8057 0274 05       		.uleb128 0x5
 8058 0275 27       		.uleb128 0x27
 8059 0276 19       		.uleb128 0x19
 8060 0277 11       		.uleb128 0x11
 8061 0278 01       		.uleb128 0x1
 8062 0279 12       		.uleb128 0x12
 8063 027a 06       		.uleb128 0x6
 8064 027b 40       		.uleb128 0x40
 8065 027c 18       		.uleb128 0x18
 8066 027d 9742     		.uleb128 0x2117
 8067 027f 19       		.uleb128 0x19
 8068 0280 01       		.uleb128 0x1
 8069 0281 13       		.uleb128 0x13
 8070 0282 00       		.byte	0
 8071 0283 00       		.byte	0
 8072 0284 2C       		.uleb128 0x2c
 8073 0285 2E       		.uleb128 0x2e
 8074 0286 01       		.byte	0x1
 8075 0287 3F       		.uleb128 0x3f
 8076 0288 19       		.uleb128 0x19
 8077 0289 03       		.uleb128 0x3
 8078 028a 0E       		.uleb128 0xe
 8079 028b 3A       		.uleb128 0x3a
 8080 028c 0B       		.uleb128 0xb
 8081 028d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 185


 8082 028e 05       		.uleb128 0x5
 8083 028f 27       		.uleb128 0x27
 8084 0290 19       		.uleb128 0x19
 8085 0291 3C       		.uleb128 0x3c
 8086 0292 19       		.uleb128 0x19
 8087 0293 00       		.byte	0
 8088 0294 00       		.byte	0
 8089 0295 2D       		.uleb128 0x2d
 8090 0296 2E       		.uleb128 0x2e
 8091 0297 01       		.byte	0x1
 8092 0298 3F       		.uleb128 0x3f
 8093 0299 19       		.uleb128 0x19
 8094 029a 03       		.uleb128 0x3
 8095 029b 0E       		.uleb128 0xe
 8096 029c 3A       		.uleb128 0x3a
 8097 029d 0B       		.uleb128 0xb
 8098 029e 3B       		.uleb128 0x3b
 8099 029f 05       		.uleb128 0x5
 8100 02a0 27       		.uleb128 0x27
 8101 02a1 19       		.uleb128 0x19
 8102 02a2 3C       		.uleb128 0x3c
 8103 02a3 19       		.uleb128 0x19
 8104 02a4 01       		.uleb128 0x1
 8105 02a5 13       		.uleb128 0x13
 8106 02a6 00       		.byte	0
 8107 02a7 00       		.byte	0
 8108 02a8 2E       		.uleb128 0x2e
 8109 02a9 0B       		.uleb128 0xb
 8110 02aa 01       		.byte	0x1
 8111 02ab 55       		.uleb128 0x55
 8112 02ac 17       		.uleb128 0x17
 8113 02ad 00       		.byte	0
 8114 02ae 00       		.byte	0
 8115 02af 2F       		.uleb128 0x2f
 8116 02b0 2E       		.uleb128 0x2e
 8117 02b1 00       		.byte	0
 8118 02b2 3F       		.uleb128 0x3f
 8119 02b3 19       		.uleb128 0x19
 8120 02b4 03       		.uleb128 0x3
 8121 02b5 0E       		.uleb128 0xe
 8122 02b6 3A       		.uleb128 0x3a
 8123 02b7 0B       		.uleb128 0xb
 8124 02b8 3B       		.uleb128 0x3b
 8125 02b9 05       		.uleb128 0x5
 8126 02ba 27       		.uleb128 0x27
 8127 02bb 19       		.uleb128 0x19
 8128 02bc 49       		.uleb128 0x49
 8129 02bd 13       		.uleb128 0x13
 8130 02be 11       		.uleb128 0x11
 8131 02bf 01       		.uleb128 0x1
 8132 02c0 12       		.uleb128 0x12
 8133 02c1 06       		.uleb128 0x6
 8134 02c2 40       		.uleb128 0x40
 8135 02c3 18       		.uleb128 0x18
 8136 02c4 9742     		.uleb128 0x2117
 8137 02c6 19       		.uleb128 0x19
 8138 02c7 00       		.byte	0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 186


 8139 02c8 00       		.byte	0
 8140 02c9 30       		.uleb128 0x30
 8141 02ca 2E       		.uleb128 0x2e
 8142 02cb 00       		.byte	0
 8143 02cc 3F       		.uleb128 0x3f
 8144 02cd 19       		.uleb128 0x19
 8145 02ce 03       		.uleb128 0x3
 8146 02cf 0E       		.uleb128 0xe
 8147 02d0 3A       		.uleb128 0x3a
 8148 02d1 0B       		.uleb128 0xb
 8149 02d2 3B       		.uleb128 0x3b
 8150 02d3 05       		.uleb128 0x5
 8151 02d4 27       		.uleb128 0x27
 8152 02d5 19       		.uleb128 0x19
 8153 02d6 11       		.uleb128 0x11
 8154 02d7 01       		.uleb128 0x1
 8155 02d8 12       		.uleb128 0x12
 8156 02d9 06       		.uleb128 0x6
 8157 02da 40       		.uleb128 0x40
 8158 02db 18       		.uleb128 0x18
 8159 02dc 9642     		.uleb128 0x2116
 8160 02de 19       		.uleb128 0x19
 8161 02df 00       		.byte	0
 8162 02e0 00       		.byte	0
 8163 02e1 31       		.uleb128 0x31
 8164 02e2 2E       		.uleb128 0x2e
 8165 02e3 01       		.byte	0x1
 8166 02e4 3F       		.uleb128 0x3f
 8167 02e5 19       		.uleb128 0x19
 8168 02e6 03       		.uleb128 0x3
 8169 02e7 0E       		.uleb128 0xe
 8170 02e8 3A       		.uleb128 0x3a
 8171 02e9 0B       		.uleb128 0xb
 8172 02ea 3B       		.uleb128 0x3b
 8173 02eb 05       		.uleb128 0x5
 8174 02ec 27       		.uleb128 0x27
 8175 02ed 19       		.uleb128 0x19
 8176 02ee 49       		.uleb128 0x49
 8177 02ef 13       		.uleb128 0x13
 8178 02f0 11       		.uleb128 0x11
 8179 02f1 01       		.uleb128 0x1
 8180 02f2 12       		.uleb128 0x12
 8181 02f3 06       		.uleb128 0x6
 8182 02f4 40       		.uleb128 0x40
 8183 02f5 18       		.uleb128 0x18
 8184 02f6 9642     		.uleb128 0x2116
 8185 02f8 19       		.uleb128 0x19
 8186 02f9 00       		.byte	0
 8187 02fa 00       		.byte	0
 8188 02fb 00       		.byte	0
 8189              		.section	.debug_aranges,"",%progbits
 8190 0000 5C010000 		.4byte	0x15c
 8191 0004 0200     		.2byte	0x2
 8192 0006 00000000 		.4byte	.Ldebug_info0
 8193 000a 04       		.byte	0x4
 8194 000b 00       		.byte	0
 8195 000c 0000     		.2byte	0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 187


 8196 000e 0000     		.2byte	0
 8197 0010 00000000 		.4byte	.LFB1
 8198 0014 58010000 		.4byte	.LFE1-.LFB1
 8199 0018 00000000 		.4byte	.LFB2
 8200 001c 98000000 		.4byte	.LFE2-.LFB2
 8201 0020 00000000 		.4byte	.LFB3
 8202 0024 D4000000 		.4byte	.LFE3-.LFB3
 8203 0028 00000000 		.4byte	.LFB4
 8204 002c 8C000000 		.4byte	.LFE4-.LFB4
 8205 0030 00000000 		.4byte	.LFB5
 8206 0034 34000000 		.4byte	.LFE5-.LFB5
 8207 0038 00000000 		.4byte	.LFB6
 8208 003c FC000000 		.4byte	.LFE6-.LFB6
 8209 0040 00000000 		.4byte	.LFB7
 8210 0044 98000000 		.4byte	.LFE7-.LFB7
 8211 0048 00000000 		.4byte	.LFB8
 8212 004c 44000000 		.4byte	.LFE8-.LFB8
 8213 0050 00000000 		.4byte	.LFB9
 8214 0054 90000000 		.4byte	.LFE9-.LFB9
 8215 0058 00000000 		.4byte	.LFB10
 8216 005c A0000000 		.4byte	.LFE10-.LFB10
 8217 0060 00000000 		.4byte	.LFB11
 8218 0064 64000000 		.4byte	.LFE11-.LFB11
 8219 0068 00000000 		.4byte	.LFB12
 8220 006c 20000000 		.4byte	.LFE12-.LFB12
 8221 0070 00000000 		.4byte	.LFB13
 8222 0074 1C000000 		.4byte	.LFE13-.LFB13
 8223 0078 00000000 		.4byte	.LFB14
 8224 007c 00010000 		.4byte	.LFE14-.LFB14
 8225 0080 00000000 		.4byte	.LFB15
 8226 0084 24000000 		.4byte	.LFE15-.LFB15
 8227 0088 00000000 		.4byte	.LFB16
 8228 008c 14000000 		.4byte	.LFE16-.LFB16
 8229 0090 00000000 		.4byte	.LFB17
 8230 0094 14000000 		.4byte	.LFE17-.LFB17
 8231 0098 00000000 		.4byte	.LFB18
 8232 009c E8000000 		.4byte	.LFE18-.LFB18
 8233 00a0 00000000 		.4byte	.LFB19
 8234 00a4 00010000 		.4byte	.LFE19-.LFB19
 8235 00a8 00000000 		.4byte	.LFB20
 8236 00ac 48000000 		.4byte	.LFE20-.LFB20
 8237 00b0 00000000 		.4byte	.LFB21
 8238 00b4 38000000 		.4byte	.LFE21-.LFB21
 8239 00b8 00000000 		.4byte	.LFB22
 8240 00bc E0000000 		.4byte	.LFE22-.LFB22
 8241 00c0 00000000 		.4byte	.LFB23
 8242 00c4 78010000 		.4byte	.LFE23-.LFB23
 8243 00c8 00000000 		.4byte	.LFB24
 8244 00cc 9C000000 		.4byte	.LFE24-.LFB24
 8245 00d0 00000000 		.4byte	.LFB25
 8246 00d4 AC000000 		.4byte	.LFE25-.LFB25
 8247 00d8 00000000 		.4byte	.LFB26
 8248 00dc 2C000000 		.4byte	.LFE26-.LFB26
 8249 00e0 00000000 		.4byte	.LFB27
 8250 00e4 88000000 		.4byte	.LFE27-.LFB27
 8251 00e8 00000000 		.4byte	.LFB28
 8252 00ec 18000000 		.4byte	.LFE28-.LFB28
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 188


 8253 00f0 00000000 		.4byte	.LFB29
 8254 00f4 20000000 		.4byte	.LFE29-.LFB29
 8255 00f8 00000000 		.4byte	.LFB30
 8256 00fc 72000000 		.4byte	.LFE30-.LFB30
 8257 0100 00000000 		.4byte	.LFB31
 8258 0104 80000000 		.4byte	.LFE31-.LFB31
 8259 0108 00000000 		.4byte	.LFB32
 8260 010c 84000000 		.4byte	.LFE32-.LFB32
 8261 0110 00000000 		.4byte	.LFB33
 8262 0114 62000000 		.4byte	.LFE33-.LFB33
 8263 0118 00000000 		.4byte	.LFB34
 8264 011c BC000000 		.4byte	.LFE34-.LFB34
 8265 0120 00000000 		.4byte	.LFB35
 8266 0124 E8000000 		.4byte	.LFE35-.LFB35
 8267 0128 00000000 		.4byte	.LFB36
 8268 012c 30000000 		.4byte	.LFE36-.LFB36
 8269 0130 00000000 		.4byte	.LFB37
 8270 0134 38000000 		.4byte	.LFE37-.LFB37
 8271 0138 00000000 		.4byte	.LFB38
 8272 013c 20000000 		.4byte	.LFE38-.LFB38
 8273 0140 00000000 		.4byte	.LFB39
 8274 0144 1C000000 		.4byte	.LFE39-.LFB39
 8275 0148 00000000 		.4byte	.LFB40
 8276 014c A4000000 		.4byte	.LFE40-.LFB40
 8277 0150 00000000 		.4byte	.LFB41
 8278 0154 7C000000 		.4byte	.LFE41-.LFB41
 8279 0158 00000000 		.4byte	0
 8280 015c 00000000 		.4byte	0
 8281              		.section	.debug_ranges,"",%progbits
 8282              	.Ldebug_ranges0:
 8283 0000 3E000000 		.4byte	.LBB5
 8284 0004 A6000000 		.4byte	.LBE5
 8285 0008 B4000000 		.4byte	.LBB6
 8286 000c B6000000 		.4byte	.LBE6
 8287 0010 00000000 		.4byte	0
 8288 0014 00000000 		.4byte	0
 8289 0018 00000000 		.4byte	.LFB1
 8290 001c 58010000 		.4byte	.LFE1
 8291 0020 00000000 		.4byte	.LFB2
 8292 0024 98000000 		.4byte	.LFE2
 8293 0028 00000000 		.4byte	.LFB3
 8294 002c D4000000 		.4byte	.LFE3
 8295 0030 00000000 		.4byte	.LFB4
 8296 0034 8C000000 		.4byte	.LFE4
 8297 0038 00000000 		.4byte	.LFB5
 8298 003c 34000000 		.4byte	.LFE5
 8299 0040 00000000 		.4byte	.LFB6
 8300 0044 FC000000 		.4byte	.LFE6
 8301 0048 00000000 		.4byte	.LFB7
 8302 004c 98000000 		.4byte	.LFE7
 8303 0050 00000000 		.4byte	.LFB8
 8304 0054 44000000 		.4byte	.LFE8
 8305 0058 00000000 		.4byte	.LFB9
 8306 005c 90000000 		.4byte	.LFE9
 8307 0060 00000000 		.4byte	.LFB10
 8308 0064 A0000000 		.4byte	.LFE10
 8309 0068 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 189


 8310 006c 64000000 		.4byte	.LFE11
 8311 0070 00000000 		.4byte	.LFB12
 8312 0074 20000000 		.4byte	.LFE12
 8313 0078 00000000 		.4byte	.LFB13
 8314 007c 1C000000 		.4byte	.LFE13
 8315 0080 00000000 		.4byte	.LFB14
 8316 0084 00010000 		.4byte	.LFE14
 8317 0088 00000000 		.4byte	.LFB15
 8318 008c 24000000 		.4byte	.LFE15
 8319 0090 00000000 		.4byte	.LFB16
 8320 0094 14000000 		.4byte	.LFE16
 8321 0098 00000000 		.4byte	.LFB17
 8322 009c 14000000 		.4byte	.LFE17
 8323 00a0 00000000 		.4byte	.LFB18
 8324 00a4 E8000000 		.4byte	.LFE18
 8325 00a8 00000000 		.4byte	.LFB19
 8326 00ac 00010000 		.4byte	.LFE19
 8327 00b0 00000000 		.4byte	.LFB20
 8328 00b4 48000000 		.4byte	.LFE20
 8329 00b8 00000000 		.4byte	.LFB21
 8330 00bc 38000000 		.4byte	.LFE21
 8331 00c0 00000000 		.4byte	.LFB22
 8332 00c4 E0000000 		.4byte	.LFE22
 8333 00c8 00000000 		.4byte	.LFB23
 8334 00cc 78010000 		.4byte	.LFE23
 8335 00d0 00000000 		.4byte	.LFB24
 8336 00d4 9C000000 		.4byte	.LFE24
 8337 00d8 00000000 		.4byte	.LFB25
 8338 00dc AC000000 		.4byte	.LFE25
 8339 00e0 00000000 		.4byte	.LFB26
 8340 00e4 2C000000 		.4byte	.LFE26
 8341 00e8 00000000 		.4byte	.LFB27
 8342 00ec 88000000 		.4byte	.LFE27
 8343 00f0 00000000 		.4byte	.LFB28
 8344 00f4 18000000 		.4byte	.LFE28
 8345 00f8 00000000 		.4byte	.LFB29
 8346 00fc 20000000 		.4byte	.LFE29
 8347 0100 00000000 		.4byte	.LFB30
 8348 0104 72000000 		.4byte	.LFE30
 8349 0108 00000000 		.4byte	.LFB31
 8350 010c 80000000 		.4byte	.LFE31
 8351 0110 00000000 		.4byte	.LFB32
 8352 0114 84000000 		.4byte	.LFE32
 8353 0118 00000000 		.4byte	.LFB33
 8354 011c 62000000 		.4byte	.LFE33
 8355 0120 00000000 		.4byte	.LFB34
 8356 0124 BC000000 		.4byte	.LFE34
 8357 0128 00000000 		.4byte	.LFB35
 8358 012c E8000000 		.4byte	.LFE35
 8359 0130 00000000 		.4byte	.LFB36
 8360 0134 30000000 		.4byte	.LFE36
 8361 0138 00000000 		.4byte	.LFB37
 8362 013c 38000000 		.4byte	.LFE37
 8363 0140 00000000 		.4byte	.LFB38
 8364 0144 20000000 		.4byte	.LFE38
 8365 0148 00000000 		.4byte	.LFB39
 8366 014c 1C000000 		.4byte	.LFE39
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 190


 8367 0150 00000000 		.4byte	.LFB40
 8368 0154 A4000000 		.4byte	.LFE40
 8369 0158 00000000 		.4byte	.LFB41
 8370 015c 7C000000 		.4byte	.LFE41
 8371 0160 00000000 		.4byte	0
 8372 0164 00000000 		.4byte	0
 8373              		.section	.debug_macro,"",%progbits
 8374              	.Ldebug_macro0:
 8375 0000 0400     		.2byte	0x4
 8376 0002 02       		.byte	0x2
 8377 0003 00000000 		.4byte	.Ldebug_line0
 8378 0007 07       		.byte	0x7
 8379 0008 00000000 		.4byte	.Ldebug_macro1
 8380 000c 03       		.byte	0x3
 8381 000d 00       		.uleb128 0
 8382 000e 01       		.uleb128 0x1
 8383              		.file 12 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\stdio.h"
 8384 000f 03       		.byte	0x3
 8385 0010 37       		.uleb128 0x37
 8386 0011 0C       		.uleb128 0xc
 8387 0012 05       		.byte	0x5
 8388 0013 1B       		.uleb128 0x1b
 8389 0014 C76E0000 		.4byte	.LASF364
 8390              		.file 13 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\_ansi.h"
 8391 0018 03       		.byte	0x3
 8392 0019 1D       		.uleb128 0x1d
 8393 001a 0D       		.uleb128 0xd
 8394 001b 05       		.byte	0x5
 8395 001c 0D       		.uleb128 0xd
 8396 001d A0530000 		.4byte	.LASF365
 8397              		.file 14 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\newlib.h"
 8398 0021 03       		.byte	0x3
 8399 0022 0F       		.uleb128 0xf
 8400 0023 0E       		.uleb128 0xe
 8401 0024 05       		.byte	0x5
 8402 0025 08       		.uleb128 0x8
 8403 0026 85130000 		.4byte	.LASF366
 8404              		.file 15 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\_newlib_version.h"
 8405 002a 03       		.byte	0x3
 8406 002b 0E       		.uleb128 0xe
 8407 002c 0F       		.uleb128 0xf
 8408 002d 07       		.byte	0x7
 8409 002e 00000000 		.4byte	.Ldebug_macro2
 8410 0032 04       		.byte	0x4
 8411 0033 07       		.byte	0x7
 8412 0034 00000000 		.4byte	.Ldebug_macro3
 8413 0038 04       		.byte	0x4
 8414              		.file 16 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\sys\\config.h"
 8415 0039 03       		.byte	0x3
 8416 003a 10       		.uleb128 0x10
 8417 003b 10       		.uleb128 0x10
 8418 003c 05       		.byte	0x5
 8419 003d 02       		.uleb128 0x2
 8420 003e D3830000 		.4byte	.LASF381
 8421              		.file 17 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\machine\\ieeefp.h"
 8422 0042 03       		.byte	0x3
 8423 0043 04       		.uleb128 0x4
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 191


 8424 0044 11       		.uleb128 0x11
 8425 0045 05       		.byte	0x5
 8426 0046 3C       		.uleb128 0x3c
 8427 0047 465D0000 		.4byte	.LASF382
 8428 004b 04       		.byte	0x4
 8429              		.file 18 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\sys\\features.h"
 8430 004c 03       		.byte	0x3
 8431 004d 05       		.uleb128 0x5
 8432 004e 12       		.uleb128 0x12
 8433 004f 07       		.byte	0x7
 8434 0050 00000000 		.4byte	.Ldebug_macro4
 8435 0054 04       		.byte	0x4
 8436 0055 07       		.byte	0x7
 8437 0056 00000000 		.4byte	.Ldebug_macro5
 8438 005a 04       		.byte	0x4
 8439 005b 07       		.byte	0x7
 8440 005c 00000000 		.4byte	.Ldebug_macro6
 8441 0060 04       		.byte	0x4
 8442 0061 07       		.byte	0x7
 8443 0062 00000000 		.4byte	.Ldebug_macro7
 8444              		.file 19 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\sys\\cdefs.h"
 8445 0066 03       		.byte	0x3
 8446 0067 23       		.uleb128 0x23
 8447 0068 13       		.uleb128 0x13
 8448 0069 05       		.byte	0x5
 8449 006a 29       		.uleb128 0x29
 8450 006b 60880000 		.4byte	.LASF439
 8451              		.file 20 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\machine\\_default_typ
 8452 006f 03       		.byte	0x3
 8453 0070 2B       		.uleb128 0x2b
 8454 0071 14       		.uleb128 0x14
 8455 0072 07       		.byte	0x7
 8456 0073 00000000 		.4byte	.Ldebug_macro8
 8457 0077 04       		.byte	0x4
 8458 0078 03       		.byte	0x3
 8459 0079 2D       		.uleb128 0x2d
 8460 007a 02       		.uleb128 0x2
 8461 007b 07       		.byte	0x7
 8462 007c 00000000 		.4byte	.Ldebug_macro9
 8463 0080 04       		.byte	0x4
 8464 0081 07       		.byte	0x7
 8465 0082 00000000 		.4byte	.Ldebug_macro10
 8466 0086 04       		.byte	0x4
 8467 0087 03       		.byte	0x3
 8468 0088 24       		.uleb128 0x24
 8469 0089 02       		.uleb128 0x2
 8470 008a 07       		.byte	0x7
 8471 008b 00000000 		.4byte	.Ldebug_macro11
 8472 008f 04       		.byte	0x4
 8473 0090 05       		.byte	0x5
 8474 0091 27       		.uleb128 0x27
 8475 0092 F80B0000 		.4byte	.LASF625
 8476              		.file 21 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\lib\\gcc\\arm-none-eabi\\6.3.0\\include\\stda
 8477 0096 03       		.byte	0x3
 8478 0097 28       		.uleb128 0x28
 8479 0098 15       		.uleb128 0x15
 8480 0099 07       		.byte	0x7
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 192


 8481 009a 00000000 		.4byte	.Ldebug_macro12
 8482 009e 04       		.byte	0x4
 8483 009f 05       		.byte	0x5
 8484 00a0 2F       		.uleb128 0x2f
 8485 00a1 A4360000 		.4byte	.LASF628
 8486 00a5 03       		.byte	0x3
 8487 00a6 3C       		.uleb128 0x3c
 8488 00a7 05       		.uleb128 0x5
 8489 00a8 05       		.byte	0x5
 8490 00a9 0B       		.uleb128 0xb
 8491 00aa 50580000 		.4byte	.LASF629
 8492 00ae 03       		.byte	0x3
 8493 00af 0D       		.uleb128 0xd
 8494 00b0 0D       		.uleb128 0xd
 8495 00b1 04       		.byte	0x4
 8496 00b2 03       		.byte	0x3
 8497 00b3 0E       		.uleb128 0xe
 8498 00b4 02       		.uleb128 0x2
 8499 00b5 04       		.byte	0x4
 8500 00b6 03       		.byte	0x3
 8501 00b7 0F       		.uleb128 0xf
 8502 00b8 04       		.uleb128 0x4
 8503 00b9 05       		.byte	0x5
 8504 00ba 14       		.uleb128 0x14
 8505 00bb F8960000 		.4byte	.LASF630
 8506              		.file 22 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\machine\\_types.h"
 8507 00bf 03       		.byte	0x3
 8508 00c0 18       		.uleb128 0x18
 8509 00c1 16       		.uleb128 0x16
 8510 00c2 05       		.byte	0x5
 8511 00c3 06       		.uleb128 0x6
 8512 00c4 125D0000 		.4byte	.LASF631
 8513 00c8 04       		.byte	0x4
 8514 00c9 03       		.byte	0x3
 8515 00ca 19       		.uleb128 0x19
 8516 00cb 03       		.uleb128 0x3
 8517 00cc 07       		.byte	0x7
 8518 00cd 00000000 		.4byte	.Ldebug_macro13
 8519 00d1 04       		.byte	0x4
 8520 00d2 07       		.byte	0x7
 8521 00d3 00000000 		.4byte	.Ldebug_macro14
 8522 00d7 03       		.byte	0x3
 8523 00d8 9F01     		.uleb128 0x9f
 8524 00da 02       		.uleb128 0x2
 8525 00db 07       		.byte	0x7
 8526 00dc 00000000 		.4byte	.Ldebug_macro15
 8527 00e0 04       		.byte	0x4
 8528 00e1 07       		.byte	0x7
 8529 00e2 00000000 		.4byte	.Ldebug_macro16
 8530 00e6 04       		.byte	0x4
 8531 00e7 07       		.byte	0x7
 8532 00e8 00000000 		.4byte	.Ldebug_macro17
 8533 00ec 04       		.byte	0x4
 8534              		.file 23 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\sys\\types.h"
 8535 00ed 03       		.byte	0x3
 8536 00ee 3D       		.uleb128 0x3d
 8537 00ef 17       		.uleb128 0x17
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 193


 8538 00f0 07       		.byte	0x7
 8539 00f1 00000000 		.4byte	.Ldebug_macro18
 8540 00f5 03       		.byte	0x3
 8541 00f6 3E       		.uleb128 0x3e
 8542 00f7 02       		.uleb128 0x2
 8543 00f8 04       		.byte	0x4
 8544              		.file 24 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\sys\\_stdint.h"
 8545 00f9 03       		.byte	0x3
 8546 00fa 40       		.uleb128 0x40
 8547 00fb 18       		.uleb128 0x18
 8548 00fc 07       		.byte	0x7
 8549 00fd 00000000 		.4byte	.Ldebug_macro19
 8550 0101 04       		.byte	0x4
 8551              		.file 25 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\machine\\endian.h"
 8552 0102 03       		.byte	0x3
 8553 0103 43       		.uleb128 0x43
 8554 0104 19       		.uleb128 0x19
 8555 0105 05       		.byte	0x5
 8556 0106 02       		.uleb128 0x2
 8557 0107 C87A0000 		.4byte	.LASF734
 8558              		.file 26 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\machine\\_endian.h"
 8559 010b 03       		.byte	0x3
 8560 010c 06       		.uleb128 0x6
 8561 010d 1A       		.uleb128 0x1a
 8562 010e 07       		.byte	0x7
 8563 010f 00000000 		.4byte	.Ldebug_macro20
 8564 0113 04       		.byte	0x4
 8565 0114 07       		.byte	0x7
 8566 0115 00000000 		.4byte	.Ldebug_macro21
 8567 0119 04       		.byte	0x4
 8568              		.file 27 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\sys\\select.h"
 8569 011a 03       		.byte	0x3
 8570 011b 44       		.uleb128 0x44
 8571 011c 1B       		.uleb128 0x1b
 8572 011d 05       		.byte	0x5
 8573 011e 0D       		.uleb128 0xd
 8574 011f 89440000 		.4byte	.LASF752
 8575              		.file 28 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\sys\\_sigset.h"
 8576 0123 03       		.byte	0x3
 8577 0124 19       		.uleb128 0x19
 8578 0125 1C       		.uleb128 0x1c
 8579 0126 05       		.byte	0x5
 8580 0127 27       		.uleb128 0x27
 8581 0128 42790000 		.4byte	.LASF753
 8582 012c 04       		.byte	0x4
 8583              		.file 29 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\sys\\_timeval.h"
 8584 012d 03       		.byte	0x3
 8585 012e 1A       		.uleb128 0x1a
 8586 012f 1D       		.uleb128 0x1d
 8587 0130 07       		.byte	0x7
 8588 0131 00000000 		.4byte	.Ldebug_macro22
 8589 0135 04       		.byte	0x4
 8590              		.file 30 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\sys\\timespec.h"
 8591 0136 03       		.byte	0x3
 8592 0137 1B       		.uleb128 0x1b
 8593 0138 1E       		.uleb128 0x1e
 8594 0139 05       		.byte	0x5
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 194


 8595 013a 23       		.uleb128 0x23
 8596 013b BB1B0000 		.4byte	.LASF764
 8597              		.file 31 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\sys\\_timespec.h"
 8598 013f 03       		.byte	0x3
 8599 0140 26       		.uleb128 0x26
 8600 0141 1F       		.uleb128 0x1f
 8601 0142 05       		.byte	0x5
 8602 0143 23       		.uleb128 0x23
 8603 0144 94000000 		.4byte	.LASF765
 8604 0148 04       		.byte	0x4
 8605 0149 07       		.byte	0x7
 8606 014a 00000000 		.4byte	.Ldebug_macro23
 8607 014e 04       		.byte	0x4
 8608 014f 07       		.byte	0x7
 8609 0150 00000000 		.4byte	.Ldebug_macro24
 8610 0154 04       		.byte	0x4
 8611 0155 07       		.byte	0x7
 8612 0156 00000000 		.4byte	.Ldebug_macro25
 8613              		.file 32 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\sys\\_pthreadtypes.h"
 8614 015a 03       		.byte	0x3
 8615 015b EF01     		.uleb128 0xef
 8616 015d 20       		.uleb128 0x20
 8617 015e 05       		.byte	0x5
 8618 015f 13       		.uleb128 0x13
 8619 0160 36980000 		.4byte	.LASF810
 8620 0164 04       		.byte	0x4
 8621              		.file 33 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\machine\\types.h"
 8622 0165 03       		.byte	0x3
 8623 0166 F001     		.uleb128 0xf0
 8624 0168 21       		.uleb128 0x21
 8625 0169 04       		.byte	0x4
 8626 016a 06       		.byte	0x6
 8627 016b F401     		.uleb128 0xf4
 8628 016d 6F6D0000 		.4byte	.LASF811
 8629 0171 04       		.byte	0x4
 8630 0172 05       		.byte	0x5
 8631 0173 43       		.uleb128 0x43
 8632 0174 E3290000 		.4byte	.LASF812
 8633              		.file 34 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\sys\\stdio.h"
 8634 0178 03       		.byte	0x3
 8635 0179 4F       		.uleb128 0x4f
 8636 017a 22       		.uleb128 0x22
 8637 017b 07       		.byte	0x7
 8638 017c 00000000 		.4byte	.Ldebug_macro26
 8639 0180 04       		.byte	0x4
 8640 0181 07       		.byte	0x7
 8641 0182 00000000 		.4byte	.Ldebug_macro27
 8642 0186 04       		.byte	0x4
 8643 0187 03       		.byte	0x3
 8644 0188 38       		.uleb128 0x38
 8645 0189 06       		.uleb128 0x6
 8646 018a 05       		.byte	0x5
 8647 018b 08       		.uleb128 0x8
 8648 018c CA840000 		.4byte	.LASF869
 8649 0190 03       		.byte	0x3
 8650 0191 0A       		.uleb128 0xa
 8651 0192 11       		.uleb128 0x11
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 195


 8652 0193 04       		.byte	0x4
 8653 0194 07       		.byte	0x7
 8654 0195 00000000 		.4byte	.Ldebug_macro28
 8655 0199 03       		.byte	0x3
 8656 019a 10       		.uleb128 0x10
 8657 019b 02       		.uleb128 0x2
 8658 019c 07       		.byte	0x7
 8659 019d 00000000 		.4byte	.Ldebug_macro29
 8660 01a1 04       		.byte	0x4
 8661              		.file 35 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\machine\\stdlib.h"
 8662 01a2 03       		.byte	0x3
 8663 01a3 14       		.uleb128 0x14
 8664 01a4 23       		.uleb128 0x23
 8665 01a5 05       		.byte	0x5
 8666 01a6 02       		.uleb128 0x2
 8667 01a7 56840000 		.4byte	.LASF871
 8668 01ab 04       		.byte	0x4
 8669              		.file 36 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\alloca.h"
 8670 01ac 03       		.byte	0x3
 8671 01ad 16       		.uleb128 0x16
 8672 01ae 24       		.uleb128 0x24
 8673 01af 07       		.byte	0x7
 8674 01b0 00000000 		.4byte	.Ldebug_macro30
 8675 01b4 04       		.byte	0x4
 8676 01b5 07       		.byte	0x7
 8677 01b6 00000000 		.4byte	.Ldebug_macro31
 8678 01ba 04       		.byte	0x4
 8679              		.file 37 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\string.h"
 8680 01bb 03       		.byte	0x3
 8681 01bc 39       		.uleb128 0x39
 8682 01bd 25       		.uleb128 0x25
 8683 01be 07       		.byte	0x7
 8684 01bf 00000000 		.4byte	.Ldebug_macro32
 8685 01c3 03       		.byte	0x3
 8686 01c4 11       		.uleb128 0x11
 8687 01c5 02       		.uleb128 0x2
 8688 01c6 07       		.byte	0x7
 8689 01c7 00000000 		.4byte	.Ldebug_macro29
 8690 01cb 04       		.byte	0x4
 8691              		.file 38 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\sys\\_locale.h"
 8692 01cc 03       		.byte	0x3
 8693 01cd 14       		.uleb128 0x14
 8694 01ce 26       		.uleb128 0x26
 8695 01cf 05       		.byte	0x5
 8696 01d0 04       		.uleb128 0x4
 8697 01d1 9A1D0000 		.4byte	.LASF882
 8698 01d5 04       		.byte	0x4
 8699              		.file 39 "c:\\stm32\\arm-none-eabi-gcc-6.3.0-170107\\arm-none-eabi\\include\\sys\\string.h"
 8700 01d6 03       		.byte	0x3
 8701 01d7 C001     		.uleb128 0xc0
 8702 01d9 27       		.uleb128 0x27
 8703 01da 04       		.byte	0x4
 8704 01db 04       		.byte	0x4
 8705 01dc 05       		.byte	0x5
 8706 01dd 3E       		.uleb128 0x3e
 8707 01de 9B7F0000 		.4byte	.LASF883
 8708              		.file 40 "RtosV611/Source/include/FreeRTOS.h"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 196


 8709 01e2 03       		.byte	0x3
 8710 01e3 40       		.uleb128 0x40
 8711 01e4 28       		.uleb128 0x28
 8712 01e5 05       		.byte	0x5
 8713 01e6 37       		.uleb128 0x37
 8714 01e7 D7640000 		.4byte	.LASF884
 8715 01eb 03       		.byte	0x3
 8716 01ec 3D       		.uleb128 0x3d
 8717 01ed 02       		.uleb128 0x2
 8718 01ee 04       		.byte	0x4
 8719 01ef 03       		.byte	0x3
 8720 01f0 40       		.uleb128 0x40
 8721 01f1 07       		.uleb128 0x7
 8722 01f2 07       		.byte	0x7
 8723 01f3 00000000 		.4byte	.Ldebug_macro33
 8724 01f7 04       		.byte	0x4
 8725 01f8 03       		.byte	0x3
 8726 01f9 43       		.uleb128 0x43
 8727 01fa 08       		.uleb128 0x8
 8728 01fb 07       		.byte	0x7
 8729 01fc 00000000 		.4byte	.Ldebug_macro34
 8730 0200 04       		.byte	0x4
 8731              		.file 41 "RtosV611/Source/include/portable.h"
 8732 0201 03       		.byte	0x3
 8733 0202 46       		.uleb128 0x46
 8734 0203 29       		.uleb128 0x29
 8735 0204 05       		.byte	0x5
 8736 0205 3B       		.uleb128 0x3b
 8737 0206 102D0000 		.4byte	.LASF931
 8738 020a 03       		.byte	0x3
 8739 020b B302     		.uleb128 0x133
 8740 020d 09       		.uleb128 0x9
 8741 020e 07       		.byte	0x7
 8742 020f 00000000 		.4byte	.Ldebug_macro35
 8743 0213 04       		.byte	0x4
 8744 0214 07       		.byte	0x7
 8745 0215 00000000 		.4byte	.Ldebug_macro36
 8746              		.file 42 "RtosV611/Source/include/mpu_wrappers.h"
 8747 0219 03       		.byte	0x3
 8748 021a D202     		.uleb128 0x152
 8749 021c 2A       		.uleb128 0x2a
 8750 021d 07       		.byte	0x7
 8751 021e 00000000 		.4byte	.Ldebug_macro37
 8752 0222 04       		.byte	0x4
 8753 0223 04       		.byte	0x4
 8754 0224 07       		.byte	0x7
 8755 0225 00000000 		.4byte	.Ldebug_macro38
 8756 0229 04       		.byte	0x4
 8757 022a 03       		.byte	0x3
 8758 022b 41       		.uleb128 0x41
 8759 022c 0B       		.uleb128 0xb
 8760 022d 05       		.byte	0x5
 8761 022e 3E       		.uleb128 0x3e
 8762 022f 1C140000 		.4byte	.LASF1015
 8763 0233 03       		.byte	0x3
 8764 0234 41       		.uleb128 0x41
 8765 0235 0A       		.uleb128 0xa
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 197


 8766 0236 07       		.byte	0x7
 8767 0237 00000000 		.4byte	.Ldebug_macro39
 8768 023b 04       		.byte	0x4
 8769 023c 07       		.byte	0x7
 8770 023d 00000000 		.4byte	.Ldebug_macro40
 8771 0241 04       		.byte	0x4
 8772              		.file 43 "RtosV611/Source/include/StackMacros.h"
 8773 0242 03       		.byte	0x3
 8774 0243 42       		.uleb128 0x42
 8775 0244 2B       		.uleb128 0x2b
 8776 0245 07       		.byte	0x7
 8777 0246 00000000 		.4byte	.Ldebug_macro41
 8778 024a 04       		.byte	0x4
 8779 024b 06       		.byte	0x6
 8780 024c 44       		.uleb128 0x44
 8781 024d B76F0000 		.4byte	.LASF1040
 8782 0251 05       		.byte	0x5
 8783 0252 49       		.uleb128 0x49
 8784 0253 AC620000 		.4byte	.LASF1041
 8785 0257 05       		.byte	0x5
 8786 0258 B301     		.uleb128 0xb3
 8787 025a C48B0000 		.4byte	.LASF1042
 8788 025e 05       		.byte	0x5
 8789 025f B801     		.uleb128 0xb8
 8790 0261 83960000 		.4byte	.LASF1043
 8791 0265 05       		.byte	0x5
 8792 0266 B901     		.uleb128 0xb9
 8793 0268 282B0000 		.4byte	.LASF1044
 8794 026c 05       		.byte	0x5
 8795 026d BA01     		.uleb128 0xba
 8796 026f 62970000 		.4byte	.LASF1045
 8797 0273 05       		.byte	0x5
 8798 0274 BB01     		.uleb128 0xbb
 8799 0276 05950000 		.4byte	.LASF1046
 8800 027a 05       		.byte	0x5
 8801 027b C201     		.uleb128 0xc2
 8802 027d AD890000 		.4byte	.LASF1047
 8803 0281 05       		.byte	0x5
 8804 0282 D601     		.uleb128 0xd6
 8805 0284 8A0C0000 		.4byte	.LASF1048
 8806 0288 05       		.byte	0x5
 8807 0289 FA01     		.uleb128 0xfa
 8808 028b 7B480000 		.4byte	.LASF1049
 8809 028f 05       		.byte	0x5
 8810 0290 8C02     		.uleb128 0x10c
 8811 0292 018C0000 		.4byte	.LASF1050
 8812 0296 05       		.byte	0x5
 8813 0297 A702     		.uleb128 0x127
 8814 0299 97740000 		.4byte	.LASF1051
 8815 029d 04       		.byte	0x4
 8816 029e 00       		.byte	0
 8817              		.section	.debug_macro,"G",%progbits,wm4.0.2d7fdbb0490084bf6f54c29442c0dcbf,comdat
 8818              	.Ldebug_macro1:
 8819 0000 0400     		.2byte	0x4
 8820 0002 00       		.byte	0
 8821 0003 05       		.byte	0x5
 8822 0004 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 198


 8823 0005 E05A0000 		.4byte	.LASF0
 8824 0009 05       		.byte	0x5
 8825 000a 00       		.uleb128 0
 8826 000b 35650000 		.4byte	.LASF1
 8827 000f 05       		.byte	0x5
 8828 0010 00       		.uleb128 0
 8829 0011 A5420000 		.4byte	.LASF2
 8830 0015 05       		.byte	0x5
 8831 0016 00       		.uleb128 0
 8832 0017 AD720000 		.4byte	.LASF3
 8833 001b 05       		.byte	0x5
 8834 001c 00       		.uleb128 0
 8835 001d 60240000 		.4byte	.LASF4
 8836 0021 05       		.byte	0x5
 8837 0022 00       		.uleb128 0
 8838 0023 244E0000 		.4byte	.LASF5
 8839 0027 05       		.byte	0x5
 8840 0028 00       		.uleb128 0
 8841 0029 477E0000 		.4byte	.LASF6
 8842 002d 05       		.byte	0x5
 8843 002e 00       		.uleb128 0
 8844 002f EC270000 		.4byte	.LASF7
 8845 0033 05       		.byte	0x5
 8846 0034 00       		.uleb128 0
 8847 0035 493F0000 		.4byte	.LASF8
 8848 0039 05       		.byte	0x5
 8849 003a 00       		.uleb128 0
 8850 003b 36470000 		.4byte	.LASF9
 8851 003f 05       		.byte	0x5
 8852 0040 00       		.uleb128 0
 8853 0041 85990000 		.4byte	.LASF10
 8854 0045 05       		.byte	0x5
 8855 0046 00       		.uleb128 0
 8856 0047 85030000 		.4byte	.LASF11
 8857 004b 05       		.byte	0x5
 8858 004c 00       		.uleb128 0
 8859 004d 596B0000 		.4byte	.LASF12
 8860 0051 05       		.byte	0x5
 8861 0052 00       		.uleb128 0
 8862 0053 F18A0000 		.4byte	.LASF13
 8863 0057 05       		.byte	0x5
 8864 0058 00       		.uleb128 0
 8865 0059 7C1F0000 		.4byte	.LASF14
 8866 005d 05       		.byte	0x5
 8867 005e 00       		.uleb128 0
 8868 005f 7B040000 		.4byte	.LASF15
 8869 0063 05       		.byte	0x5
 8870 0064 00       		.uleb128 0
 8871 0065 062A0000 		.4byte	.LASF16
 8872 0069 05       		.byte	0x5
 8873 006a 00       		.uleb128 0
 8874 006b B1260000 		.4byte	.LASF17
 8875 006f 05       		.byte	0x5
 8876 0070 00       		.uleb128 0
 8877 0071 EB1F0000 		.4byte	.LASF18
 8878 0075 05       		.byte	0x5
 8879 0076 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 199


 8880 0077 632C0000 		.4byte	.LASF19
 8881 007b 05       		.byte	0x5
 8882 007c 00       		.uleb128 0
 8883 007d 84880000 		.4byte	.LASF20
 8884 0081 05       		.byte	0x5
 8885 0082 00       		.uleb128 0
 8886 0083 D3500000 		.4byte	.LASF21
 8887 0087 05       		.byte	0x5
 8888 0088 00       		.uleb128 0
 8889 0089 8F600000 		.4byte	.LASF22
 8890 008d 05       		.byte	0x5
 8891 008e 00       		.uleb128 0
 8892 008f 91670000 		.4byte	.LASF23
 8893 0093 05       		.byte	0x5
 8894 0094 00       		.uleb128 0
 8895 0095 D6100000 		.4byte	.LASF24
 8896 0099 05       		.byte	0x5
 8897 009a 00       		.uleb128 0
 8898 009b 706A0000 		.4byte	.LASF25
 8899 009f 05       		.byte	0x5
 8900 00a0 00       		.uleb128 0
 8901 00a1 21530000 		.4byte	.LASF26
 8902 00a5 05       		.byte	0x5
 8903 00a6 00       		.uleb128 0
 8904 00a7 315B0000 		.4byte	.LASF27
 8905 00ab 05       		.byte	0x5
 8906 00ac 00       		.uleb128 0
 8907 00ad B31C0000 		.4byte	.LASF28
 8908 00b1 05       		.byte	0x5
 8909 00b2 00       		.uleb128 0
 8910 00b3 BD050000 		.4byte	.LASF29
 8911 00b7 05       		.byte	0x5
 8912 00b8 00       		.uleb128 0
 8913 00b9 10350000 		.4byte	.LASF30
 8914 00bd 05       		.byte	0x5
 8915 00be 00       		.uleb128 0
 8916 00bf AA2C0000 		.4byte	.LASF31
 8917 00c3 05       		.byte	0x5
 8918 00c4 00       		.uleb128 0
 8919 00c5 850B0000 		.4byte	.LASF32
 8920 00c9 05       		.byte	0x5
 8921 00ca 00       		.uleb128 0
 8922 00cb 79740000 		.4byte	.LASF33
 8923 00cf 05       		.byte	0x5
 8924 00d0 00       		.uleb128 0
 8925 00d1 47720000 		.4byte	.LASF34
 8926 00d5 05       		.byte	0x5
 8927 00d6 00       		.uleb128 0
 8928 00d7 20780000 		.4byte	.LASF35
 8929 00db 05       		.byte	0x5
 8930 00dc 00       		.uleb128 0
 8931 00dd 7A1E0000 		.4byte	.LASF36
 8932 00e1 05       		.byte	0x5
 8933 00e2 00       		.uleb128 0
 8934 00e3 14270000 		.4byte	.LASF37
 8935 00e7 05       		.byte	0x5
 8936 00e8 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 200


 8937 00e9 03060000 		.4byte	.LASF38
 8938 00ed 05       		.byte	0x5
 8939 00ee 00       		.uleb128 0
 8940 00ef 9D080000 		.4byte	.LASF39
 8941 00f3 05       		.byte	0x5
 8942 00f4 00       		.uleb128 0
 8943 00f5 98990000 		.4byte	.LASF40
 8944 00f9 05       		.byte	0x5
 8945 00fa 00       		.uleb128 0
 8946 00fb A3500000 		.4byte	.LASF41
 8947 00ff 05       		.byte	0x5
 8948 0100 00       		.uleb128 0
 8949 0101 5E5B0000 		.4byte	.LASF42
 8950 0105 05       		.byte	0x5
 8951 0106 00       		.uleb128 0
 8952 0107 DE420000 		.4byte	.LASF43
 8953 010b 05       		.byte	0x5
 8954 010c 00       		.uleb128 0
 8955 010d 68890000 		.4byte	.LASF44
 8956 0111 05       		.byte	0x5
 8957 0112 00       		.uleb128 0
 8958 0113 C0220000 		.4byte	.LASF45
 8959 0117 05       		.byte	0x5
 8960 0118 00       		.uleb128 0
 8961 0119 C81C0000 		.4byte	.LASF46
 8962 011d 05       		.byte	0x5
 8963 011e 00       		.uleb128 0
 8964 011f BF8F0000 		.4byte	.LASF47
 8965 0123 05       		.byte	0x5
 8966 0124 00       		.uleb128 0
 8967 0125 A8660000 		.4byte	.LASF48
 8968 0129 05       		.byte	0x5
 8969 012a 00       		.uleb128 0
 8970 012b CC9B0000 		.4byte	.LASF49
 8971 012f 05       		.byte	0x5
 8972 0130 00       		.uleb128 0
 8973 0131 1F1A0000 		.4byte	.LASF50
 8974 0135 05       		.byte	0x5
 8975 0136 00       		.uleb128 0
 8976 0137 F5690000 		.4byte	.LASF51
 8977 013b 05       		.byte	0x5
 8978 013c 00       		.uleb128 0
 8979 013d BE720000 		.4byte	.LASF52
 8980 0141 05       		.byte	0x5
 8981 0142 00       		.uleb128 0
 8982 0143 4D460000 		.4byte	.LASF53
 8983 0147 05       		.byte	0x5
 8984 0148 00       		.uleb128 0
 8985 0149 151C0000 		.4byte	.LASF54
 8986 014d 05       		.byte	0x5
 8987 014e 00       		.uleb128 0
 8988 014f 9E690000 		.4byte	.LASF55
 8989 0153 05       		.byte	0x5
 8990 0154 00       		.uleb128 0
 8991 0155 0F560000 		.4byte	.LASF56
 8992 0159 05       		.byte	0x5
 8993 015a 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 201


 8994 015b 630B0000 		.4byte	.LASF57
 8995 015f 05       		.byte	0x5
 8996 0160 00       		.uleb128 0
 8997 0161 D9430000 		.4byte	.LASF58
 8998 0165 05       		.byte	0x5
 8999 0166 00       		.uleb128 0
 9000 0167 8E8D0000 		.4byte	.LASF59
 9001 016b 05       		.byte	0x5
 9002 016c 00       		.uleb128 0
 9003 016d 6E260000 		.4byte	.LASF60
 9004 0171 05       		.byte	0x5
 9005 0172 00       		.uleb128 0
 9006 0173 EC2D0000 		.4byte	.LASF61
 9007 0177 05       		.byte	0x5
 9008 0178 00       		.uleb128 0
 9009 0179 0C780000 		.4byte	.LASF62
 9010 017d 05       		.byte	0x5
 9011 017e 00       		.uleb128 0
 9012 017f 43780000 		.4byte	.LASF63
 9013 0183 05       		.byte	0x5
 9014 0184 00       		.uleb128 0
 9015 0185 14400000 		.4byte	.LASF64
 9016 0189 05       		.byte	0x5
 9017 018a 00       		.uleb128 0
 9018 018b 35330000 		.4byte	.LASF65
 9019 018f 05       		.byte	0x5
 9020 0190 00       		.uleb128 0
 9021 0191 53310000 		.4byte	.LASF66
 9022 0195 05       		.byte	0x5
 9023 0196 00       		.uleb128 0
 9024 0197 8F580000 		.4byte	.LASF67
 9025 019b 05       		.byte	0x5
 9026 019c 00       		.uleb128 0
 9027 019d 98680000 		.4byte	.LASF68
 9028 01a1 05       		.byte	0x5
 9029 01a2 00       		.uleb128 0
 9030 01a3 B59B0000 		.4byte	.LASF69
 9031 01a7 05       		.byte	0x5
 9032 01a8 00       		.uleb128 0
 9033 01a9 BF950000 		.4byte	.LASF70
 9034 01ad 05       		.byte	0x5
 9035 01ae 00       		.uleb128 0
 9036 01af 85620000 		.4byte	.LASF71
 9037 01b3 05       		.byte	0x5
 9038 01b4 00       		.uleb128 0
 9039 01b5 AC030000 		.4byte	.LASF72
 9040 01b9 05       		.byte	0x5
 9041 01ba 00       		.uleb128 0
 9042 01bb 5C4C0000 		.4byte	.LASF73
 9043 01bf 05       		.byte	0x5
 9044 01c0 00       		.uleb128 0
 9045 01c1 4B8F0000 		.4byte	.LASF74
 9046 01c5 05       		.byte	0x5
 9047 01c6 00       		.uleb128 0
 9048 01c7 F48E0000 		.4byte	.LASF75
 9049 01cb 05       		.byte	0x5
 9050 01cc 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 202


 9051 01cd 61020000 		.4byte	.LASF76
 9052 01d1 05       		.byte	0x5
 9053 01d2 00       		.uleb128 0
 9054 01d3 2F950000 		.4byte	.LASF77
 9055 01d7 05       		.byte	0x5
 9056 01d8 00       		.uleb128 0
 9057 01d9 AF020000 		.4byte	.LASF78
 9058 01dd 05       		.byte	0x5
 9059 01de 00       		.uleb128 0
 9060 01df B3010000 		.4byte	.LASF79
 9061 01e3 05       		.byte	0x5
 9062 01e4 00       		.uleb128 0
 9063 01e5 319B0000 		.4byte	.LASF80
 9064 01e9 05       		.byte	0x5
 9065 01ea 00       		.uleb128 0
 9066 01eb 9B1C0000 		.4byte	.LASF81
 9067 01ef 05       		.byte	0x5
 9068 01f0 00       		.uleb128 0
 9069 01f1 F07E0000 		.4byte	.LASF82
 9070 01f5 05       		.byte	0x5
 9071 01f6 00       		.uleb128 0
 9072 01f7 32390000 		.4byte	.LASF83
 9073 01fb 05       		.byte	0x5
 9074 01fc 00       		.uleb128 0
 9075 01fd 9C410000 		.4byte	.LASF84
 9076 0201 05       		.byte	0x5
 9077 0202 00       		.uleb128 0
 9078 0203 BE830000 		.4byte	.LASF85
 9079 0207 05       		.byte	0x5
 9080 0208 00       		.uleb128 0
 9081 0209 6F440000 		.4byte	.LASF86
 9082 020d 05       		.byte	0x5
 9083 020e 00       		.uleb128 0
 9084 020f 2D580000 		.4byte	.LASF87
 9085 0213 05       		.byte	0x5
 9086 0214 00       		.uleb128 0
 9087 0215 1F300000 		.4byte	.LASF88
 9088 0219 05       		.byte	0x5
 9089 021a 00       		.uleb128 0
 9090 021b 09290000 		.4byte	.LASF89
 9091 021f 05       		.byte	0x5
 9092 0220 00       		.uleb128 0
 9093 0221 AE470000 		.4byte	.LASF90
 9094 0225 05       		.byte	0x5
 9095 0226 00       		.uleb128 0
 9096 0227 A33D0000 		.4byte	.LASF91
 9097 022b 05       		.byte	0x5
 9098 022c 00       		.uleb128 0
 9099 022d E93E0000 		.4byte	.LASF92
 9100 0231 05       		.byte	0x5
 9101 0232 00       		.uleb128 0
 9102 0233 F8630000 		.4byte	.LASF93
 9103 0237 05       		.byte	0x5
 9104 0238 00       		.uleb128 0
 9105 0239 B0310000 		.4byte	.LASF94
 9106 023d 05       		.byte	0x5
 9107 023e 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 203


 9108 023f 4D980000 		.4byte	.LASF95
 9109 0243 05       		.byte	0x5
 9110 0244 00       		.uleb128 0
 9111 0245 5F520000 		.4byte	.LASF96
 9112 0249 05       		.byte	0x5
 9113 024a 00       		.uleb128 0
 9114 024b B2100000 		.4byte	.LASF97
 9115 024f 05       		.byte	0x5
 9116 0250 00       		.uleb128 0
 9117 0251 DE440000 		.4byte	.LASF98
 9118 0255 05       		.byte	0x5
 9119 0256 00       		.uleb128 0
 9120 0257 DB790000 		.4byte	.LASF99
 9121 025b 05       		.byte	0x5
 9122 025c 00       		.uleb128 0
 9123 025d AE4C0000 		.4byte	.LASF100
 9124 0261 05       		.byte	0x5
 9125 0262 00       		.uleb128 0
 9126 0263 8E080000 		.4byte	.LASF101
 9127 0267 05       		.byte	0x5
 9128 0268 00       		.uleb128 0
 9129 0269 E3240000 		.4byte	.LASF102
 9130 026d 05       		.byte	0x5
 9131 026e 00       		.uleb128 0
 9132 026f 067D0000 		.4byte	.LASF103
 9133 0273 05       		.byte	0x5
 9134 0274 00       		.uleb128 0
 9135 0275 8A400000 		.4byte	.LASF104
 9136 0279 05       		.byte	0x5
 9137 027a 00       		.uleb128 0
 9138 027b 87330000 		.4byte	.LASF105
 9139 027f 05       		.byte	0x5
 9140 0280 00       		.uleb128 0
 9141 0281 2A670000 		.4byte	.LASF106
 9142 0285 05       		.byte	0x5
 9143 0286 00       		.uleb128 0
 9144 0287 36460000 		.4byte	.LASF107
 9145 028b 05       		.byte	0x5
 9146 028c 00       		.uleb128 0
 9147 028d 81870000 		.4byte	.LASF108
 9148 0291 05       		.byte	0x5
 9149 0292 00       		.uleb128 0
 9150 0293 7B6B0000 		.4byte	.LASF109
 9151 0297 05       		.byte	0x5
 9152 0298 00       		.uleb128 0
 9153 0299 CE270000 		.4byte	.LASF110
 9154 029d 05       		.byte	0x5
 9155 029e 00       		.uleb128 0
 9156 029f 401B0000 		.4byte	.LASF111
 9157 02a3 05       		.byte	0x5
 9158 02a4 00       		.uleb128 0
 9159 02a5 E2120000 		.4byte	.LASF112
 9160 02a9 05       		.byte	0x5
 9161 02aa 00       		.uleb128 0
 9162 02ab 5D140000 		.4byte	.LASF113
 9163 02af 05       		.byte	0x5
 9164 02b0 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 204


 9165 02b1 3F1F0000 		.4byte	.LASF114
 9166 02b5 05       		.byte	0x5
 9167 02b6 00       		.uleb128 0
 9168 02b7 5B4E0000 		.4byte	.LASF115
 9169 02bb 05       		.byte	0x5
 9170 02bc 00       		.uleb128 0
 9171 02bd 56150000 		.4byte	.LASF116
 9172 02c1 05       		.byte	0x5
 9173 02c2 00       		.uleb128 0
 9174 02c3 7E450000 		.4byte	.LASF117
 9175 02c7 05       		.byte	0x5
 9176 02c8 00       		.uleb128 0
 9177 02c9 80270000 		.4byte	.LASF118
 9178 02cd 05       		.byte	0x5
 9179 02ce 00       		.uleb128 0
 9180 02cf 65420000 		.4byte	.LASF119
 9181 02d3 05       		.byte	0x5
 9182 02d4 00       		.uleb128 0
 9183 02d5 5F580000 		.4byte	.LASF120
 9184 02d9 05       		.byte	0x5
 9185 02da 00       		.uleb128 0
 9186 02db 3F3B0000 		.4byte	.LASF121
 9187 02df 05       		.byte	0x5
 9188 02e0 00       		.uleb128 0
 9189 02e1 804D0000 		.4byte	.LASF122
 9190 02e5 05       		.byte	0x5
 9191 02e6 00       		.uleb128 0
 9192 02e7 80470000 		.4byte	.LASF123
 9193 02eb 05       		.byte	0x5
 9194 02ec 00       		.uleb128 0
 9195 02ed B4570000 		.4byte	.LASF124
 9196 02f1 05       		.byte	0x5
 9197 02f2 00       		.uleb128 0
 9198 02f3 D2560000 		.4byte	.LASF125
 9199 02f7 05       		.byte	0x5
 9200 02f8 00       		.uleb128 0
 9201 02f9 6B680000 		.4byte	.LASF126
 9202 02fd 05       		.byte	0x5
 9203 02fe 00       		.uleb128 0
 9204 02ff 681F0000 		.4byte	.LASF127
 9205 0303 05       		.byte	0x5
 9206 0304 00       		.uleb128 0
 9207 0305 00830000 		.4byte	.LASF128
 9208 0309 05       		.byte	0x5
 9209 030a 00       		.uleb128 0
 9210 030b 5F220000 		.4byte	.LASF129
 9211 030f 05       		.byte	0x5
 9212 0310 00       		.uleb128 0
 9213 0311 914B0000 		.4byte	.LASF130
 9214 0315 05       		.byte	0x5
 9215 0316 00       		.uleb128 0
 9216 0317 D92A0000 		.4byte	.LASF131
 9217 031b 05       		.byte	0x5
 9218 031c 00       		.uleb128 0
 9219 031d 50340000 		.4byte	.LASF132
 9220 0321 05       		.byte	0x5
 9221 0322 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 205


 9222 0323 20320000 		.4byte	.LASF133
 9223 0327 05       		.byte	0x5
 9224 0328 00       		.uleb128 0
 9225 0329 EE050000 		.4byte	.LASF134
 9226 032d 05       		.byte	0x5
 9227 032e 00       		.uleb128 0
 9228 032f 27410000 		.4byte	.LASF135
 9229 0333 05       		.byte	0x5
 9230 0334 00       		.uleb128 0
 9231 0335 A7000000 		.4byte	.LASF136
 9232 0339 05       		.byte	0x5
 9233 033a 00       		.uleb128 0
 9234 033b 629B0000 		.4byte	.LASF137
 9235 033f 05       		.byte	0x5
 9236 0340 00       		.uleb128 0
 9237 0341 DE780000 		.4byte	.LASF138
 9238 0345 05       		.byte	0x5
 9239 0346 00       		.uleb128 0
 9240 0347 9F640000 		.4byte	.LASF139
 9241 034b 05       		.byte	0x5
 9242 034c 00       		.uleb128 0
 9243 034d D5990000 		.4byte	.LASF140
 9244 0351 05       		.byte	0x5
 9245 0352 00       		.uleb128 0
 9246 0353 21470000 		.4byte	.LASF141
 9247 0357 05       		.byte	0x5
 9248 0358 00       		.uleb128 0
 9249 0359 9F040000 		.4byte	.LASF142
 9250 035d 05       		.byte	0x5
 9251 035e 00       		.uleb128 0
 9252 035f 6D820000 		.4byte	.LASF143
 9253 0363 05       		.byte	0x5
 9254 0364 00       		.uleb128 0
 9255 0365 04900000 		.4byte	.LASF144
 9256 0369 05       		.byte	0x5
 9257 036a 00       		.uleb128 0
 9258 036b 188E0000 		.4byte	.LASF145
 9259 036f 05       		.byte	0x5
 9260 0370 00       		.uleb128 0
 9261 0371 BA400000 		.4byte	.LASF146
 9262 0375 05       		.byte	0x5
 9263 0376 00       		.uleb128 0
 9264 0377 FB870000 		.4byte	.LASF147
 9265 037b 05       		.byte	0x5
 9266 037c 00       		.uleb128 0
 9267 037d E0300000 		.4byte	.LASF148
 9268 0381 05       		.byte	0x5
 9269 0382 00       		.uleb128 0
 9270 0383 9C7E0000 		.4byte	.LASF149
 9271 0387 05       		.byte	0x5
 9272 0388 00       		.uleb128 0
 9273 0389 D6750000 		.4byte	.LASF150
 9274 038d 05       		.byte	0x5
 9275 038e 00       		.uleb128 0
 9276 038f 54080000 		.4byte	.LASF151
 9277 0393 05       		.byte	0x5
 9278 0394 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 206


 9279 0395 088E0000 		.4byte	.LASF152
 9280 0399 05       		.byte	0x5
 9281 039a 00       		.uleb128 0
 9282 039b 4F1E0000 		.4byte	.LASF153
 9283 039f 05       		.byte	0x5
 9284 03a0 00       		.uleb128 0
 9285 03a1 5C5D0000 		.4byte	.LASF154
 9286 03a5 05       		.byte	0x5
 9287 03a6 00       		.uleb128 0
 9288 03a7 5A300000 		.4byte	.LASF155
 9289 03ab 05       		.byte	0x5
 9290 03ac 00       		.uleb128 0
 9291 03ad 3A550000 		.4byte	.LASF156
 9292 03b1 05       		.byte	0x5
 9293 03b2 00       		.uleb128 0
 9294 03b3 50000000 		.4byte	.LASF157
 9295 03b7 05       		.byte	0x5
 9296 03b8 00       		.uleb128 0
 9297 03b9 4B320000 		.4byte	.LASF158
 9298 03bd 05       		.byte	0x5
 9299 03be 00       		.uleb128 0
 9300 03bf 487B0000 		.4byte	.LASF159
 9301 03c3 05       		.byte	0x5
 9302 03c4 00       		.uleb128 0
 9303 03c5 8F460000 		.4byte	.LASF160
 9304 03c9 05       		.byte	0x5
 9305 03ca 00       		.uleb128 0
 9306 03cb 98490000 		.4byte	.LASF161
 9307 03cf 05       		.byte	0x5
 9308 03d0 00       		.uleb128 0
 9309 03d1 AA650000 		.4byte	.LASF162
 9310 03d5 05       		.byte	0x5
 9311 03d6 00       		.uleb128 0
 9312 03d7 10370000 		.4byte	.LASF163
 9313 03db 05       		.byte	0x5
 9314 03dc 00       		.uleb128 0
 9315 03dd E04D0000 		.4byte	.LASF164
 9316 03e1 05       		.byte	0x5
 9317 03e2 00       		.uleb128 0
 9318 03e3 13600000 		.4byte	.LASF165
 9319 03e7 05       		.byte	0x5
 9320 03e8 00       		.uleb128 0
 9321 03e9 252F0000 		.4byte	.LASF166
 9322 03ed 05       		.byte	0x5
 9323 03ee 00       		.uleb128 0
 9324 03ef 69430000 		.4byte	.LASF167
 9325 03f3 05       		.byte	0x5
 9326 03f4 00       		.uleb128 0
 9327 03f5 3A050000 		.4byte	.LASF168
 9328 03f9 05       		.byte	0x5
 9329 03fa 00       		.uleb128 0
 9330 03fb 66160000 		.4byte	.LASF169
 9331 03ff 05       		.byte	0x5
 9332 0400 00       		.uleb128 0
 9333 0401 01130000 		.4byte	.LASF170
 9334 0405 05       		.byte	0x5
 9335 0406 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 207


 9336 0407 E3020000 		.4byte	.LASF171
 9337 040b 05       		.byte	0x5
 9338 040c 00       		.uleb128 0
 9339 040d 04680000 		.4byte	.LASF172
 9340 0411 05       		.byte	0x5
 9341 0412 00       		.uleb128 0
 9342 0413 255A0000 		.4byte	.LASF173
 9343 0417 05       		.byte	0x5
 9344 0418 00       		.uleb128 0
 9345 0419 D8050000 		.4byte	.LASF174
 9346 041d 05       		.byte	0x5
 9347 041e 00       		.uleb128 0
 9348 041f 26820000 		.4byte	.LASF175
 9349 0423 05       		.byte	0x5
 9350 0424 00       		.uleb128 0
 9351 0425 F2200000 		.4byte	.LASF176
 9352 0429 05       		.byte	0x5
 9353 042a 00       		.uleb128 0
 9354 042b 1C8F0000 		.4byte	.LASF177
 9355 042f 05       		.byte	0x5
 9356 0430 00       		.uleb128 0
 9357 0431 0C3C0000 		.4byte	.LASF178
 9358 0435 05       		.byte	0x5
 9359 0436 00       		.uleb128 0
 9360 0437 A65C0000 		.4byte	.LASF179
 9361 043b 05       		.byte	0x5
 9362 043c 00       		.uleb128 0
 9363 043d FA1B0000 		.4byte	.LASF180
 9364 0441 05       		.byte	0x5
 9365 0442 00       		.uleb128 0
 9366 0443 3A770000 		.4byte	.LASF181
 9367 0447 05       		.byte	0x5
 9368 0448 00       		.uleb128 0
 9369 0449 C2790000 		.4byte	.LASF182
 9370 044d 05       		.byte	0x5
 9371 044e 00       		.uleb128 0
 9372 044f 2C270000 		.4byte	.LASF183
 9373 0453 05       		.byte	0x5
 9374 0454 00       		.uleb128 0
 9375 0455 BF000000 		.4byte	.LASF184
 9376 0459 05       		.byte	0x5
 9377 045a 00       		.uleb128 0
 9378 045b 99780000 		.4byte	.LASF185
 9379 045f 05       		.byte	0x5
 9380 0460 00       		.uleb128 0
 9381 0461 8D010000 		.4byte	.LASF186
 9382 0465 05       		.byte	0x5
 9383 0466 00       		.uleb128 0
 9384 0467 7F520000 		.4byte	.LASF187
 9385 046b 05       		.byte	0x5
 9386 046c 00       		.uleb128 0
 9387 046d 26750000 		.4byte	.LASF188
 9388 0471 05       		.byte	0x5
 9389 0472 00       		.uleb128 0
 9390 0473 C82D0000 		.4byte	.LASF189
 9391 0477 05       		.byte	0x5
 9392 0478 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 208


 9393 0479 7A100000 		.4byte	.LASF190
 9394 047d 05       		.byte	0x5
 9395 047e 00       		.uleb128 0
 9396 047f 1F3D0000 		.4byte	.LASF191
 9397 0483 05       		.byte	0x5
 9398 0484 00       		.uleb128 0
 9399 0485 3D2F0000 		.4byte	.LASF192
 9400 0489 05       		.byte	0x5
 9401 048a 00       		.uleb128 0
 9402 048b 8E2F0000 		.4byte	.LASF193
 9403 048f 05       		.byte	0x5
 9404 0490 00       		.uleb128 0
 9405 0491 6F0C0000 		.4byte	.LASF194
 9406 0495 05       		.byte	0x5
 9407 0496 00       		.uleb128 0
 9408 0497 3D3C0000 		.4byte	.LASF195
 9409 049b 05       		.byte	0x5
 9410 049c 00       		.uleb128 0
 9411 049d 2F240000 		.4byte	.LASF196
 9412 04a1 05       		.byte	0x5
 9413 04a2 00       		.uleb128 0
 9414 04a3 68670000 		.4byte	.LASF197
 9415 04a7 05       		.byte	0x5
 9416 04a8 00       		.uleb128 0
 9417 04a9 D6040000 		.4byte	.LASF198
 9418 04ad 05       		.byte	0x5
 9419 04ae 00       		.uleb128 0
 9420 04af 66270000 		.4byte	.LASF199
 9421 04b3 05       		.byte	0x5
 9422 04b4 00       		.uleb128 0
 9423 04b5 0E440000 		.4byte	.LASF200
 9424 04b9 05       		.byte	0x5
 9425 04ba 00       		.uleb128 0
 9426 04bb E7540000 		.4byte	.LASF201
 9427 04bf 05       		.byte	0x5
 9428 04c0 00       		.uleb128 0
 9429 04c1 9C630000 		.4byte	.LASF202
 9430 04c5 05       		.byte	0x5
 9431 04c6 00       		.uleb128 0
 9432 04c7 82160000 		.4byte	.LASF203
 9433 04cb 05       		.byte	0x5
 9434 04cc 00       		.uleb128 0
 9435 04cd C9510000 		.4byte	.LASF204
 9436 04d1 05       		.byte	0x5
 9437 04d2 00       		.uleb128 0
 9438 04d3 3F4C0000 		.4byte	.LASF205
 9439 04d7 05       		.byte	0x5
 9440 04d8 00       		.uleb128 0
 9441 04d9 C0500000 		.4byte	.LASF206
 9442 04dd 05       		.byte	0x5
 9443 04de 00       		.uleb128 0
 9444 04df 06640000 		.4byte	.LASF207
 9445 04e3 05       		.byte	0x5
 9446 04e4 00       		.uleb128 0
 9447 04e5 F6400000 		.4byte	.LASF208
 9448 04e9 05       		.byte	0x5
 9449 04ea 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 209


 9450 04eb A95A0000 		.4byte	.LASF209
 9451 04ef 05       		.byte	0x5
 9452 04f0 00       		.uleb128 0
 9453 04f1 035E0000 		.4byte	.LASF210
 9454 04f5 05       		.byte	0x5
 9455 04f6 00       		.uleb128 0
 9456 04f7 950F0000 		.4byte	.LASF211
 9457 04fb 05       		.byte	0x5
 9458 04fc 00       		.uleb128 0
 9459 04fd 7C9B0000 		.4byte	.LASF212
 9460 0501 05       		.byte	0x5
 9461 0502 00       		.uleb128 0
 9462 0503 3D6D0000 		.4byte	.LASF213
 9463 0507 05       		.byte	0x5
 9464 0508 00       		.uleb128 0
 9465 0509 4B820000 		.4byte	.LASF214
 9466 050d 05       		.byte	0x5
 9467 050e 00       		.uleb128 0
 9468 050f ED780000 		.4byte	.LASF215
 9469 0513 05       		.byte	0x5
 9470 0514 00       		.uleb128 0
 9471 0515 6D900000 		.4byte	.LASF216
 9472 0519 05       		.byte	0x5
 9473 051a 00       		.uleb128 0
 9474 051b 1D8B0000 		.4byte	.LASF217
 9475 051f 05       		.byte	0x5
 9476 0520 00       		.uleb128 0
 9477 0521 CD860000 		.4byte	.LASF218
 9478 0525 05       		.byte	0x5
 9479 0526 00       		.uleb128 0
 9480 0527 10770000 		.4byte	.LASF219
 9481 052b 05       		.byte	0x5
 9482 052c 00       		.uleb128 0
 9483 052d 43970000 		.4byte	.LASF220
 9484 0531 05       		.byte	0x5
 9485 0532 00       		.uleb128 0
 9486 0533 F40A0000 		.4byte	.LASF221
 9487 0537 05       		.byte	0x5
 9488 0538 00       		.uleb128 0
 9489 0539 584A0000 		.4byte	.LASF222
 9490 053d 05       		.byte	0x5
 9491 053e 00       		.uleb128 0
 9492 053f A38A0000 		.4byte	.LASF223
 9493 0543 05       		.byte	0x5
 9494 0544 00       		.uleb128 0
 9495 0545 C01D0000 		.4byte	.LASF224
 9496 0549 05       		.byte	0x5
 9497 054a 00       		.uleb128 0
 9498 054b 39860000 		.4byte	.LASF225
 9499 054f 05       		.byte	0x5
 9500 0550 00       		.uleb128 0
 9501 0551 EF9B0000 		.4byte	.LASF226
 9502 0555 05       		.byte	0x5
 9503 0556 00       		.uleb128 0
 9504 0557 C4260000 		.4byte	.LASF227
 9505 055b 05       		.byte	0x5
 9506 055c 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 210


 9507 055d CB690000 		.4byte	.LASF228
 9508 0561 05       		.byte	0x5
 9509 0562 00       		.uleb128 0
 9510 0563 F1770000 		.4byte	.LASF229
 9511 0567 05       		.byte	0x5
 9512 0568 00       		.uleb128 0
 9513 0569 868B0000 		.4byte	.LASF230
 9514 056d 05       		.byte	0x5
 9515 056e 00       		.uleb128 0
 9516 056f 49360000 		.4byte	.LASF231
 9517 0573 05       		.byte	0x5
 9518 0574 00       		.uleb128 0
 9519 0575 16570000 		.4byte	.LASF232
 9520 0579 05       		.byte	0x5
 9521 057a 00       		.uleb128 0
 9522 057b C4600000 		.4byte	.LASF233
 9523 057f 05       		.byte	0x5
 9524 0580 00       		.uleb128 0
 9525 0581 1D050000 		.4byte	.LASF234
 9526 0585 05       		.byte	0x5
 9527 0586 00       		.uleb128 0
 9528 0587 B8750000 		.4byte	.LASF235
 9529 058b 05       		.byte	0x5
 9530 058c 00       		.uleb128 0
 9531 058d 8F1A0000 		.4byte	.LASF236
 9532 0591 05       		.byte	0x5
 9533 0592 00       		.uleb128 0
 9534 0593 6E7B0000 		.4byte	.LASF237
 9535 0597 05       		.byte	0x5
 9536 0598 00       		.uleb128 0
 9537 0599 1D660000 		.4byte	.LASF238
 9538 059d 05       		.byte	0x5
 9539 059e 00       		.uleb128 0
 9540 059f 55410000 		.4byte	.LASF239
 9541 05a3 05       		.byte	0x5
 9542 05a4 00       		.uleb128 0
 9543 05a5 CE8D0000 		.4byte	.LASF240
 9544 05a9 05       		.byte	0x5
 9545 05aa 00       		.uleb128 0
 9546 05ab B54B0000 		.4byte	.LASF241
 9547 05af 05       		.byte	0x5
 9548 05b0 00       		.uleb128 0
 9549 05b1 D4700000 		.4byte	.LASF242
 9550 05b5 05       		.byte	0x5
 9551 05b6 00       		.uleb128 0
 9552 05b7 81390000 		.4byte	.LASF243
 9553 05bb 05       		.byte	0x5
 9554 05bc 00       		.uleb128 0
 9555 05bd 3E5A0000 		.4byte	.LASF244
 9556 05c1 05       		.byte	0x5
 9557 05c2 00       		.uleb128 0
 9558 05c3 C2570000 		.4byte	.LASF245
 9559 05c7 05       		.byte	0x5
 9560 05c8 00       		.uleb128 0
 9561 05c9 5A100000 		.4byte	.LASF246
 9562 05cd 05       		.byte	0x5
 9563 05ce 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 211


 9564 05cf 4F130000 		.4byte	.LASF247
 9565 05d3 05       		.byte	0x5
 9566 05d4 00       		.uleb128 0
 9567 05d5 5D870000 		.4byte	.LASF248
 9568 05d9 05       		.byte	0x5
 9569 05da 00       		.uleb128 0
 9570 05db 406A0000 		.4byte	.LASF249
 9571 05df 05       		.byte	0x5
 9572 05e0 00       		.uleb128 0
 9573 05e1 B14D0000 		.4byte	.LASF250
 9574 05e5 05       		.byte	0x5
 9575 05e6 00       		.uleb128 0
 9576 05e7 98030000 		.4byte	.LASF251
 9577 05eb 05       		.byte	0x5
 9578 05ec 00       		.uleb128 0
 9579 05ed 84680000 		.4byte	.LASF252
 9580 05f1 05       		.byte	0x5
 9581 05f2 00       		.uleb128 0
 9582 05f3 FB4C0000 		.4byte	.LASF253
 9583 05f7 05       		.byte	0x5
 9584 05f8 00       		.uleb128 0
 9585 05f9 7B090000 		.4byte	.LASF254
 9586 05fd 05       		.byte	0x5
 9587 05fe 00       		.uleb128 0
 9588 05ff E98D0000 		.4byte	.LASF255
 9589 0603 05       		.byte	0x5
 9590 0604 00       		.uleb128 0
 9591 0605 F5250000 		.4byte	.LASF256
 9592 0609 05       		.byte	0x5
 9593 060a 00       		.uleb128 0
 9594 060b FA430000 		.4byte	.LASF257
 9595 060f 05       		.byte	0x5
 9596 0610 00       		.uleb128 0
 9597 0611 1F020000 		.4byte	.LASF258
 9598 0615 05       		.byte	0x5
 9599 0616 00       		.uleb128 0
 9600 0617 323D0000 		.4byte	.LASF259
 9601 061b 05       		.byte	0x5
 9602 061c 00       		.uleb128 0
 9603 061d 41240000 		.4byte	.LASF260
 9604 0621 05       		.byte	0x5
 9605 0622 00       		.uleb128 0
 9606 0623 192A0000 		.4byte	.LASF261
 9607 0627 05       		.byte	0x5
 9608 0628 00       		.uleb128 0
 9609 0629 C1850000 		.4byte	.LASF262
 9610 062d 05       		.byte	0x5
 9611 062e 00       		.uleb128 0
 9612 062f 31880000 		.4byte	.LASF263
 9613 0633 05       		.byte	0x5
 9614 0634 00       		.uleb128 0
 9615 0635 F1040000 		.4byte	.LASF264
 9616 0639 05       		.byte	0x5
 9617 063a 00       		.uleb128 0
 9618 063b D0680000 		.4byte	.LASF265
 9619 063f 05       		.byte	0x5
 9620 0640 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 212


 9621 0641 E38F0000 		.4byte	.LASF266
 9622 0645 05       		.byte	0x5
 9623 0646 00       		.uleb128 0
 9624 0647 3A710000 		.4byte	.LASF267
 9625 064b 05       		.byte	0x5
 9626 064c 00       		.uleb128 0
 9627 064d 70910000 		.4byte	.LASF268
 9628 0651 05       		.byte	0x5
 9629 0652 00       		.uleb128 0
 9630 0653 3B360000 		.4byte	.LASF269
 9631 0657 05       		.byte	0x5
 9632 0658 00       		.uleb128 0
 9633 0659 2D110000 		.4byte	.LASF270
 9634 065d 05       		.byte	0x5
 9635 065e 00       		.uleb128 0
 9636 065f A0050000 		.4byte	.LASF271
 9637 0663 05       		.byte	0x5
 9638 0664 00       		.uleb128 0
 9639 0665 02690000 		.4byte	.LASF272
 9640 0669 05       		.byte	0x5
 9641 066a 00       		.uleb128 0
 9642 066b 616D0000 		.4byte	.LASF273
 9643 066f 05       		.byte	0x5
 9644 0670 00       		.uleb128 0
 9645 0671 76290000 		.4byte	.LASF274
 9646 0675 05       		.byte	0x5
 9647 0676 00       		.uleb128 0
 9648 0677 0A030000 		.4byte	.LASF275
 9649 067b 05       		.byte	0x5
 9650 067c 00       		.uleb128 0
 9651 067d 9C590000 		.4byte	.LASF276
 9652 0681 05       		.byte	0x5
 9653 0682 00       		.uleb128 0
 9654 0683 07390000 		.4byte	.LASF277
 9655 0687 05       		.byte	0x5
 9656 0688 00       		.uleb128 0
 9657 0689 AC110000 		.4byte	.LASF278
 9658 068d 05       		.byte	0x5
 9659 068e 00       		.uleb128 0
 9660 068f 01740000 		.4byte	.LASF279
 9661 0693 05       		.byte	0x5
 9662 0694 00       		.uleb128 0
 9663 0695 C6100000 		.4byte	.LASF280
 9664 0699 05       		.byte	0x5
 9665 069a 00       		.uleb128 0
 9666 069b 9E720000 		.4byte	.LASF281
 9667 069f 05       		.byte	0x5
 9668 06a0 00       		.uleb128 0
 9669 06a1 FA540000 		.4byte	.LASF282
 9670 06a5 05       		.byte	0x5
 9671 06a6 00       		.uleb128 0
 9672 06a7 CA470000 		.4byte	.LASF283
 9673 06ab 05       		.byte	0x5
 9674 06ac 00       		.uleb128 0
 9675 06ad B76A0000 		.4byte	.LASF284
 9676 06b1 05       		.byte	0x5
 9677 06b2 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 213


 9678 06b3 60700000 		.4byte	.LASF285
 9679 06b7 05       		.byte	0x5
 9680 06b8 00       		.uleb128 0
 9681 06b9 662E0000 		.4byte	.LASF286
 9682 06bd 05       		.byte	0x5
 9683 06be 00       		.uleb128 0
 9684 06bf B44E0000 		.4byte	.LASF287
 9685 06c3 05       		.byte	0x5
 9686 06c4 00       		.uleb128 0
 9687 06c5 6F700000 		.4byte	.LASF288
 9688 06c9 05       		.byte	0x5
 9689 06ca 00       		.uleb128 0
 9690 06cb 18420000 		.4byte	.LASF289
 9691 06cf 05       		.byte	0x5
 9692 06d0 00       		.uleb128 0
 9693 06d1 85310000 		.4byte	.LASF290
 9694 06d5 05       		.byte	0x5
 9695 06d6 00       		.uleb128 0
 9696 06d7 860F0000 		.4byte	.LASF291
 9697 06db 05       		.byte	0x5
 9698 06dc 00       		.uleb128 0
 9699 06dd 3B370000 		.4byte	.LASF292
 9700 06e1 05       		.byte	0x5
 9701 06e2 00       		.uleb128 0
 9702 06e3 75610000 		.4byte	.LASF293
 9703 06e7 05       		.byte	0x5
 9704 06e8 00       		.uleb128 0
 9705 06e9 70000000 		.4byte	.LASF294
 9706 06ed 05       		.byte	0x5
 9707 06ee 00       		.uleb128 0
 9708 06ef B08D0000 		.4byte	.LASF295
 9709 06f3 05       		.byte	0x5
 9710 06f4 00       		.uleb128 0
 9711 06f5 F55C0000 		.4byte	.LASF296
 9712 06f9 05       		.byte	0x5
 9713 06fa 00       		.uleb128 0
 9714 06fb 352D0000 		.4byte	.LASF297
 9715 06ff 05       		.byte	0x5
 9716 0700 00       		.uleb128 0
 9717 0701 551C0000 		.4byte	.LASF298
 9718 0705 05       		.byte	0x5
 9719 0706 00       		.uleb128 0
 9720 0707 7D7D0000 		.4byte	.LASF299
 9721 070b 05       		.byte	0x5
 9722 070c 00       		.uleb128 0
 9723 070d 3A220000 		.4byte	.LASF300
 9724 0711 05       		.byte	0x5
 9725 0712 00       		.uleb128 0
 9726 0713 B1850000 		.4byte	.LASF301
 9727 0717 05       		.byte	0x5
 9728 0718 00       		.uleb128 0
 9729 0719 84780000 		.4byte	.LASF302
 9730 071d 05       		.byte	0x5
 9731 071e 00       		.uleb128 0
 9732 071f 8C3D0000 		.4byte	.LASF303
 9733 0723 05       		.byte	0x5
 9734 0724 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 214


 9735 0725 1B0C0000 		.4byte	.LASF304
 9736 0729 05       		.byte	0x5
 9737 072a 00       		.uleb128 0
 9738 072b EC7D0000 		.4byte	.LASF305
 9739 072f 05       		.byte	0x5
 9740 0730 00       		.uleb128 0
 9741 0731 48010000 		.4byte	.LASF306
 9742 0735 05       		.byte	0x5
 9743 0736 00       		.uleb128 0
 9744 0737 754C0000 		.4byte	.LASF307
 9745 073b 05       		.byte	0x5
 9746 073c 00       		.uleb128 0
 9747 073d 452D0000 		.4byte	.LASF308
 9748 0741 05       		.byte	0x5
 9749 0742 00       		.uleb128 0
 9750 0743 79690000 		.4byte	.LASF309
 9751 0747 05       		.byte	0x5
 9752 0748 00       		.uleb128 0
 9753 0749 161D0000 		.4byte	.LASF310
 9754 074d 05       		.byte	0x5
 9755 074e 00       		.uleb128 0
 9756 074f F6260000 		.4byte	.LASF311
 9757 0753 05       		.byte	0x5
 9758 0754 00       		.uleb128 0
 9759 0755 F3460000 		.4byte	.LASF312
 9760 0759 05       		.byte	0x5
 9761 075a 00       		.uleb128 0
 9762 075b 76240000 		.4byte	.LASF313
 9763 075f 05       		.byte	0x5
 9764 0760 00       		.uleb128 0
 9765 0761 27010000 		.4byte	.LASF314
 9766 0765 05       		.byte	0x5
 9767 0766 00       		.uleb128 0
 9768 0767 F8350000 		.4byte	.LASF315
 9769 076b 05       		.byte	0x5
 9770 076c 00       		.uleb128 0
 9771 076d 02750000 		.4byte	.LASF316
 9772 0771 05       		.byte	0x5
 9773 0772 00       		.uleb128 0
 9774 0773 DD4C0000 		.4byte	.LASF317
 9775 0777 05       		.byte	0x5
 9776 0778 00       		.uleb128 0
 9777 0779 EB4E0000 		.4byte	.LASF318
 9778 077d 05       		.byte	0x5
 9779 077e 00       		.uleb128 0
 9780 077f 5C360000 		.4byte	.LASF319
 9781 0783 05       		.byte	0x5
 9782 0784 00       		.uleb128 0
 9783 0785 3C140000 		.4byte	.LASF320
 9784 0789 05       		.byte	0x5
 9785 078a 00       		.uleb128 0
 9786 078b CA410000 		.4byte	.LASF321
 9787 078f 05       		.byte	0x5
 9788 0790 00       		.uleb128 0
 9789 0791 8E2C0000 		.4byte	.LASF322
 9790 0795 05       		.byte	0x5
 9791 0796 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 215


 9792 0797 E2500000 		.4byte	.LASF323
 9793 079b 05       		.byte	0x5
 9794 079c 00       		.uleb128 0
 9795 079d 9A860000 		.4byte	.LASF324
 9796 07a1 05       		.byte	0x5
 9797 07a2 00       		.uleb128 0
 9798 07a3 C95A0000 		.4byte	.LASF325
 9799 07a7 06       		.byte	0x6
 9800 07a8 00       		.uleb128 0
 9801 07a9 C24E0000 		.4byte	.LASF326
 9802 07ad 05       		.byte	0x5
 9803 07ae 00       		.uleb128 0
 9804 07af 083F0000 		.4byte	.LASF327
 9805 07b3 05       		.byte	0x5
 9806 07b4 00       		.uleb128 0
 9807 07b5 CF490000 		.4byte	.LASF328
 9808 07b9 06       		.byte	0x6
 9809 07ba 00       		.uleb128 0
 9810 07bb 7E660000 		.4byte	.LASF329
 9811 07bf 05       		.byte	0x5
 9812 07c0 00       		.uleb128 0
 9813 07c1 B3860000 		.4byte	.LASF330
 9814 07c5 06       		.byte	0x6
 9815 07c6 00       		.uleb128 0
 9816 07c7 15620000 		.4byte	.LASF331
 9817 07cb 05       		.byte	0x5
 9818 07cc 00       		.uleb128 0
 9819 07cd AE630000 		.4byte	.LASF332
 9820 07d1 05       		.byte	0x5
 9821 07d2 00       		.uleb128 0
 9822 07d3 CF960000 		.4byte	.LASF333
 9823 07d7 05       		.byte	0x5
 9824 07d8 00       		.uleb128 0
 9825 07d9 1D3F0000 		.4byte	.LASF334
 9826 07dd 06       		.byte	0x6
 9827 07de 00       		.uleb128 0
 9828 07df 8A970000 		.4byte	.LASF335
 9829 07e3 05       		.byte	0x5
 9830 07e4 00       		.uleb128 0
 9831 07e5 BA5E0000 		.4byte	.LASF336
 9832 07e9 05       		.byte	0x5
 9833 07ea 00       		.uleb128 0
 9834 07eb ED3F0000 		.4byte	.LASF337
 9835 07ef 05       		.byte	0x5
 9836 07f0 00       		.uleb128 0
 9837 07f1 1D060000 		.4byte	.LASF338
 9838 07f5 05       		.byte	0x5
 9839 07f6 00       		.uleb128 0
 9840 07f7 0E5F0000 		.4byte	.LASF339
 9841 07fb 05       		.byte	0x5
 9842 07fc 00       		.uleb128 0
 9843 07fd 2B4D0000 		.4byte	.LASF340
 9844 0801 05       		.byte	0x5
 9845 0802 00       		.uleb128 0
 9846 0803 A70A0000 		.4byte	.LASF341
 9847 0807 05       		.byte	0x5
 9848 0808 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 216


 9849 0809 8B900000 		.4byte	.LASF342
 9850 080d 05       		.byte	0x5
 9851 080e 00       		.uleb128 0
 9852 080f 148A0000 		.4byte	.LASF343
 9853 0813 05       		.byte	0x5
 9854 0814 00       		.uleb128 0
 9855 0815 F1700000 		.4byte	.LASF344
 9856 0819 05       		.byte	0x5
 9857 081a 00       		.uleb128 0
 9858 081b 65620000 		.4byte	.LASF345
 9859 081f 05       		.byte	0x5
 9860 0820 00       		.uleb128 0
 9861 0821 C2900000 		.4byte	.LASF346
 9862 0825 05       		.byte	0x5
 9863 0826 00       		.uleb128 0
 9864 0827 30430000 		.4byte	.LASF347
 9865 082b 05       		.byte	0x5
 9866 082c 00       		.uleb128 0
 9867 082d F5130000 		.4byte	.LASF348
 9868 0831 06       		.byte	0x6
 9869 0832 00       		.uleb128 0
 9870 0833 AB4E0000 		.4byte	.LASF349
 9871 0837 06       		.byte	0x6
 9872 0838 00       		.uleb128 0
 9873 0839 2E6A0000 		.4byte	.LASF350
 9874 083d 06       		.byte	0x6
 9875 083e 00       		.uleb128 0
 9876 083f 621D0000 		.4byte	.LASF351
 9877 0843 06       		.byte	0x6
 9878 0844 00       		.uleb128 0
 9879 0845 E52F0000 		.4byte	.LASF352
 9880 0849 06       		.byte	0x6
 9881 084a 00       		.uleb128 0
 9882 084b DB6F0000 		.4byte	.LASF353
 9883 084f 05       		.byte	0x5
 9884 0850 00       		.uleb128 0
 9885 0851 AA1D0000 		.4byte	.LASF354
 9886 0855 05       		.byte	0x5
 9887 0856 00       		.uleb128 0
 9888 0857 E81B0000 		.4byte	.LASF355
 9889 085b 05       		.byte	0x5
 9890 085c 00       		.uleb128 0
 9891 085d A3380000 		.4byte	.LASF356
 9892 0861 05       		.byte	0x5
 9893 0862 00       		.uleb128 0
 9894 0863 C0700000 		.4byte	.LASF357
 9895 0867 05       		.byte	0x5
 9896 0868 00       		.uleb128 0
 9897 0869 8B380000 		.4byte	.LASF358
 9898 086d 05       		.byte	0x5
 9899 086e 00       		.uleb128 0
 9900 086f 165B0000 		.4byte	.LASF359
 9901 0873 05       		.byte	0x5
 9902 0874 00       		.uleb128 0
 9903 0875 27890000 		.4byte	.LASF360
 9904 0879 05       		.byte	0x5
 9905 087a 00       		.uleb128 0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 217


 9906 087b AB440000 		.4byte	.LASF361
 9907 087f 05       		.byte	0x5
 9908 0880 00       		.uleb128 0
 9909 0881 E7700000 		.4byte	.LASF362
 9910 0885 05       		.byte	0x5
 9911 0886 00       		.uleb128 0
 9912 0887 EE810000 		.4byte	.LASF363
 9913 088b 00       		.byte	0
 9914              		.section	.debug_macro,"G",%progbits,wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19,comda
 9915              	.Ldebug_macro2:
 9916 0000 0400     		.2byte	0x4
 9917 0002 00       		.byte	0
 9918 0003 05       		.byte	0x5
 9919 0004 04       		.uleb128 0x4
 9920 0005 C74C0000 		.4byte	.LASF367
 9921 0009 05       		.byte	0x5
 9922 000a 06       		.uleb128 0x6
 9923 000b 9F970000 		.4byte	.LASF368
 9924 000f 05       		.byte	0x5
 9925 0010 07       		.uleb128 0x7
 9926 0011 18210000 		.4byte	.LASF369
 9927 0015 05       		.byte	0x5
 9928 0016 08       		.uleb128 0x8
 9929 0017 E9560000 		.4byte	.LASF370
 9930 001b 05       		.byte	0x5
 9931 001c 09       		.uleb128 0x9
 9932 001d 79670000 		.4byte	.LASF371
 9933 0021 00       		.byte	0
 9934              		.section	.debug_macro,"G",%progbits,wm4.newlib.h.18.10680ba4e7596ffe0380d5395a330371,comdat
 9935              	.Ldebug_macro3:
 9936 0000 0400     		.2byte	0x4
 9937 0002 00       		.byte	0
 9938 0003 05       		.byte	0x5
 9939 0004 12       		.uleb128 0x12
 9940 0005 681B0000 		.4byte	.LASF372
 9941 0009 05       		.byte	0x5
 9942 000a 15       		.uleb128 0x15
 9943 000b 129A0000 		.4byte	.LASF373
 9944 000f 05       		.byte	0x5
 9945 0010 22       		.uleb128 0x22
 9946 0011 2B520000 		.4byte	.LASF374
 9947 0015 05       		.byte	0x5
 9948 0016 28       		.uleb128 0x28
 9949 0017 29310000 		.4byte	.LASF375
 9950 001b 05       		.byte	0x5
 9951 001c 32       		.uleb128 0x32
 9952 001d F0790000 		.4byte	.LASF376
 9953 0021 05       		.byte	0x5
 9954 0022 39       		.uleb128 0x39
 9955 0023 DE230000 		.4byte	.LASF377
 9956 0027 05       		.byte	0x5
 9957 0028 3C       		.uleb128 0x3c
 9958 0029 65500000 		.4byte	.LASF378
 9959 002d 05       		.byte	0x5
 9960 002e 3F       		.uleb128 0x3f
 9961 002f 090B0000 		.4byte	.LASF379
 9962 0033 05       		.byte	0x5
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 218


 9963 0034 51       		.uleb128 0x51
 9964 0035 3E410000 		.4byte	.LASF380
 9965 0039 00       		.byte	0
 9966              		.section	.debug_macro,"G",%progbits,wm4.features.h.22.692cd1f2e947ca7b8fea300222f5f1f2,comdat
 9967              	.Ldebug_macro4:
 9968 0000 0400     		.2byte	0x4
 9969 0002 00       		.byte	0
 9970 0003 05       		.byte	0x5
 9971 0004 16       		.uleb128 0x16
 9972 0005 FD2A0000 		.4byte	.LASF383
 9973 0009 05       		.byte	0x5
 9974 000a 21       		.uleb128 0x21
 9975 000b A11A0000 		.4byte	.LASF384
 9976 000f 05       		.byte	0x5
 9977 0010 28       		.uleb128 0x28
 9978 0011 5C850000 		.4byte	.LASF385
 9979 0015 06       		.byte	0x6
 9980 0016 8001     		.uleb128 0x80
 9981 0018 548A0000 		.4byte	.LASF386
 9982 001c 05       		.byte	0x5
 9983 001d 8101     		.uleb128 0x81
 9984 001f 6C450000 		.4byte	.LASF387
 9985 0023 06       		.byte	0x6
 9986 0024 8501     		.uleb128 0x85
 9987 0026 01430000 		.4byte	.LASF388
 9988 002a 05       		.byte	0x5
 9989 002b 8601     		.uleb128 0x86
 9990 002d F18B0000 		.4byte	.LASF389
 9991 0031 06       		.byte	0x6
 9992 0032 8701     		.uleb128 0x87
 9993 0034 219B0000 		.4byte	.LASF390
 9994 0038 05       		.byte	0x5
 9995 0039 8801     		.uleb128 0x88
 9996 003b 041F0000 		.4byte	.LASF391
 9997 003f 06       		.byte	0x6
 9998 0040 9B01     		.uleb128 0x9b
 9999 0042 1A3E0000 		.4byte	.LASF392
 10000 0046 05       		.byte	0x5
 10001 0047 9C01     		.uleb128 0x9c
 10002 0049 9D520000 		.4byte	.LASF393
 10003 004d 05       		.byte	0x5
 10004 004e F201     		.uleb128 0xf2
 10005 0050 865D0000 		.4byte	.LASF394
 10006 0054 05       		.byte	0x5
 10007 0055 F801     		.uleb128 0xf8
 10008 0057 1A510000 		.4byte	.LASF395
 10009 005b 05       		.byte	0x5
 10010 005c 8002     		.uleb128 0x100
 10011 005e 11690000 		.4byte	.LASF396
 10012 0062 05       		.byte	0x5
 10013 0063 8802     		.uleb128 0x108
 10014 0065 4A220000 		.4byte	.LASF397
 10015 0069 05       		.byte	0x5
 10016 006a 9002     		.uleb128 0x110
 10017 006c DC200000 		.4byte	.LASF398
 10018 0070 05       		.byte	0x5
 10019 0071 9402     		.uleb128 0x114
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 219


 10020 0073 93360000 		.4byte	.LASF399
 10021 0077 05       		.byte	0x5
 10022 0078 9A02     		.uleb128 0x11a
 10023 007a 99540000 		.4byte	.LASF400
 10024 007e 05       		.byte	0x5
 10025 007f AA02     		.uleb128 0x12a
 10026 0081 EB5A0000 		.4byte	.LASF401
 10027 0085 05       		.byte	0x5
 10028 0086 BA02     		.uleb128 0x13a
 10029 0088 A1840000 		.4byte	.LASF402
 10030 008c 00       		.byte	0
 10031              		.section	.debug_macro,"G",%progbits,wm4.config.h.219.341816d1cc54601a0d2a3e284e3d034c,comdat
 10032              	.Ldebug_macro5:
 10033 0000 0400     		.2byte	0x4
 10034 0002 00       		.byte	0
 10035 0003 05       		.byte	0x5
 10036 0004 DB01     		.uleb128 0xdb
 10037 0006 D65E0000 		.4byte	.LASF403
 10038 000a 06       		.byte	0x6
 10039 000b E101     		.uleb128 0xe1
 10040 000d 31140000 		.4byte	.LASF404
 10041 0011 05       		.byte	0x5
 10042 0012 E501     		.uleb128 0xe5
 10043 0014 07630000 		.4byte	.LASF405
 10044 0018 05       		.byte	0x5
 10045 0019 F401     		.uleb128 0xf4
 10046 001b C5490000 		.4byte	.LASF406
 10047 001f 05       		.byte	0x5
 10048 0020 F801     		.uleb128 0xf8
 10049 0022 C45C0000 		.4byte	.LASF407
 10050 0026 05       		.byte	0x5
 10051 0027 FF01     		.uleb128 0xff
 10052 0029 FF270000 		.4byte	.LASF408
 10053 002d 05       		.byte	0x5
 10054 002e 8502     		.uleb128 0x105
 10055 0030 5C5C0000 		.4byte	.LASF409
 10056 0034 05       		.byte	0x5
 10057 0035 9202     		.uleb128 0x112
 10058 0037 308B0000 		.4byte	.LASF410
 10059 003b 00       		.byte	0
 10060              		.section	.debug_macro,"G",%progbits,wm4._ansi.h.23.84af8eb8cd468d25cc5f45f5eb13ec51,comdat
 10061              	.Ldebug_macro6:
 10062 0000 0400     		.2byte	0x4
 10063 0002 00       		.byte	0
 10064 0003 05       		.byte	0x5
 10065 0004 17       		.uleb128 0x17
 10066 0005 2B7A0000 		.4byte	.LASF411
 10067 0009 05       		.byte	0x5
 10068 000a 2C       		.uleb128 0x2c
 10069 000b 405E0000 		.4byte	.LASF412
 10070 000f 05       		.byte	0x5
 10071 0010 2D       		.uleb128 0x2d
 10072 0011 E7320000 		.4byte	.LASF413
 10073 0015 05       		.byte	0x5
 10074 0016 2E       		.uleb128 0x2e
 10075 0017 5A530000 		.4byte	.LASF414
 10076 001b 05       		.byte	0x5
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 220


 10077 001c 32       		.uleb128 0x32
 10078 001d 61900000 		.4byte	.LASF415
 10079 0021 05       		.byte	0x5
 10080 0022 33       		.uleb128 0x33
 10081 0023 87980000 		.4byte	.LASF416
 10082 0027 05       		.byte	0x5
 10083 0028 34       		.uleb128 0x34
 10084 0029 6F720000 		.4byte	.LASF417
 10085 002d 05       		.byte	0x5
 10086 002e 35       		.uleb128 0x35
 10087 002f C5160000 		.4byte	.LASF418
 10088 0033 05       		.byte	0x5
 10089 0034 36       		.uleb128 0x36
 10090 0035 F3290000 		.4byte	.LASF419
 10091 0039 05       		.byte	0x5
 10092 003a 37       		.uleb128 0x37
 10093 003b EE490000 		.4byte	.LASF420
 10094 003f 05       		.byte	0x5
 10095 0040 38       		.uleb128 0x38
 10096 0041 744D0000 		.4byte	.LASF421
 10097 0045 05       		.byte	0x5
 10098 0046 39       		.uleb128 0x39
 10099 0047 41870000 		.4byte	.LASF422
 10100 004b 05       		.byte	0x5
 10101 004c 40       		.uleb128 0x40
 10102 004d D4580000 		.4byte	.LASF423
 10103 0051 05       		.byte	0x5
 10104 0052 41       		.uleb128 0x41
 10105 0053 52060000 		.4byte	.LASF424
 10106 0057 05       		.byte	0x5
 10107 0058 42       		.uleb128 0x42
 10108 0059 B4300000 		.4byte	.LASF425
 10109 005d 05       		.byte	0x5
 10110 005e 43       		.uleb128 0x43
 10111 005f 2E2A0000 		.4byte	.LASF426
 10112 0063 05       		.byte	0x5
 10113 0064 45       		.uleb128 0x45
 10114 0065 82250000 		.4byte	.LASF427
 10115 0069 05       		.byte	0x5
 10116 006a 46       		.uleb128 0x46
 10117 006b 5B6E0000 		.4byte	.LASF428
 10118 006f 05       		.byte	0x5
 10119 0070 47       		.uleb128 0x47
 10120 0071 AE700000 		.4byte	.LASF429
 10121 0075 05       		.byte	0x5
 10122 0076 49       		.uleb128 0x49
 10123 0077 7C020000 		.4byte	.LASF430
 10124 007b 05       		.byte	0x5
 10125 007c 4C       		.uleb128 0x4c
 10126 007d A11F0000 		.4byte	.LASF431
 10127 0081 05       		.byte	0x5
 10128 0082 65       		.uleb128 0x65
 10129 0083 5A7E0000 		.4byte	.LASF432
 10130 0087 05       		.byte	0x5
 10131 0088 7B       		.uleb128 0x7b
 10132 0089 6F5F0000 		.4byte	.LASF433
 10133 008d 05       		.byte	0x5
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 221


 10134 008e 8301     		.uleb128 0x83
 10135 0090 2C1C0000 		.4byte	.LASF434
 10136 0094 05       		.byte	0x5
 10137 0095 8401     		.uleb128 0x84
 10138 0097 1A760000 		.4byte	.LASF435
 10139 009b 00       		.byte	0
 10140              		.section	.debug_macro,"G",%progbits,wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760,comdat
 10141              	.Ldebug_macro7:
 10142 0000 0400     		.2byte	0x4
 10143 0002 00       		.byte	0
 10144 0003 05       		.byte	0x5
 10145 0004 1F       		.uleb128 0x1f
 10146 0005 4A5F0000 		.4byte	.LASF436
 10147 0009 05       		.byte	0x5
 10148 000a 21       		.uleb128 0x21
 10149 000b 572E0000 		.4byte	.LASF437
 10150 000f 05       		.byte	0x5
 10151 0010 22       		.uleb128 0x22
 10152 0011 5F450000 		.4byte	.LASF438
 10153 0015 00       		.byte	0
 10154              		.section	.debug_macro,"G",%progbits,wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd,comdat
 10155              	.Ldebug_macro8:
 10156 0000 0400     		.2byte	0x4
 10157 0002 00       		.byte	0
 10158 0003 05       		.byte	0x5
 10159 0004 06       		.uleb128 0x6
 10160 0005 74600000 		.4byte	.LASF440
 10161 0009 05       		.byte	0x5
 10162 000a 0F       		.uleb128 0xf
 10163 000b 0C530000 		.4byte	.LASF441
 10164 000f 05       		.byte	0x5
 10165 0010 1A       		.uleb128 0x1a
 10166 0011 996B0000 		.4byte	.LASF442
 10167 0015 05       		.byte	0x5
 10168 0016 21       		.uleb128 0x21
 10169 0017 8C820000 		.4byte	.LASF443
 10170 001b 05       		.byte	0x5
 10171 001c 2F       		.uleb128 0x2f
 10172 001d E6410000 		.4byte	.LASF444
 10173 0021 05       		.byte	0x5
 10174 0022 3D       		.uleb128 0x3d
 10175 0023 32300000 		.4byte	.LASF445
 10176 0027 05       		.byte	0x5
 10177 0028 53       		.uleb128 0x53
 10178 0029 41500000 		.4byte	.LASF446
 10179 002d 05       		.byte	0x5
 10180 002e 6D       		.uleb128 0x6d
 10181 002f 461D0000 		.4byte	.LASF447
 10182 0033 05       		.byte	0x5
 10183 0034 8C01     		.uleb128 0x8c
 10184 0036 FC5A0000 		.4byte	.LASF448
 10185 003a 05       		.byte	0x5
 10186 003b A601     		.uleb128 0xa6
 10187 003d CD1B0000 		.4byte	.LASF449
 10188 0041 05       		.byte	0x5
 10189 0042 BC01     		.uleb128 0xbc
 10190 0044 86750000 		.4byte	.LASF450
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 222


 10191 0048 05       		.byte	0x5
 10192 0049 CE01     		.uleb128 0xce
 10193 004b E5510000 		.4byte	.LASF451
 10194 004f 06       		.byte	0x6
 10195 0050 F401     		.uleb128 0xf4
 10196 0052 9C650000 		.4byte	.LASF452
 10197 0056 00       		.byte	0
 10198              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3,comdat
 10199              	.Ldebug_macro9:
 10200 0000 0400     		.2byte	0x4
 10201 0002 00       		.byte	0
 10202 0003 05       		.byte	0x5
 10203 0004 BB01     		.uleb128 0xbb
 10204 0006 651C0000 		.4byte	.LASF453
 10205 000a 05       		.byte	0x5
 10206 000b BC01     		.uleb128 0xbc
 10207 000d EC0B0000 		.4byte	.LASF454
 10208 0011 05       		.byte	0x5
 10209 0012 BD01     		.uleb128 0xbd
 10210 0014 D7300000 		.4byte	.LASF455
 10211 0018 05       		.byte	0x5
 10212 0019 BE01     		.uleb128 0xbe
 10213 001b D2160000 		.4byte	.LASF456
 10214 001f 05       		.byte	0x5
 10215 0020 BF01     		.uleb128 0xbf
 10216 0022 93430000 		.4byte	.LASF457
 10217 0026 05       		.byte	0x5
 10218 0027 C001     		.uleb128 0xc0
 10219 0029 19330000 		.4byte	.LASF458
 10220 002d 05       		.byte	0x5
 10221 002e C101     		.uleb128 0xc1
 10222 0030 153D0000 		.4byte	.LASF459
 10223 0034 05       		.byte	0x5
 10224 0035 C201     		.uleb128 0xc2
 10225 0037 6A4D0000 		.4byte	.LASF460
 10226 003b 05       		.byte	0x5
 10227 003c C301     		.uleb128 0xc3
 10228 003e 7B6E0000 		.4byte	.LASF461
 10229 0042 05       		.byte	0x5
 10230 0043 C401     		.uleb128 0xc4
 10231 0045 6F560000 		.4byte	.LASF462
 10232 0049 05       		.byte	0x5
 10233 004a C501     		.uleb128 0xc5
 10234 004c F1680000 		.4byte	.LASF463
 10235 0050 05       		.byte	0x5
 10236 0051 C601     		.uleb128 0xc6
 10237 0053 3E260000 		.4byte	.LASF464
 10238 0057 05       		.byte	0x5
 10239 0058 C701     		.uleb128 0xc7
 10240 005a 681E0000 		.4byte	.LASF465
 10241 005e 05       		.byte	0x5
 10242 005f C801     		.uleb128 0xc8
 10243 0061 90260000 		.4byte	.LASF466
 10244 0065 05       		.byte	0x5
 10245 0066 C901     		.uleb128 0xc9
 10246 0068 648A0000 		.4byte	.LASF467
 10247 006c 05       		.byte	0x5
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 223


 10248 006d CA01     		.uleb128 0xca
 10249 006f A1750000 		.4byte	.LASF468
 10250 0073 05       		.byte	0x5
 10251 0074 D201     		.uleb128 0xd2
 10252 0076 1D100000 		.4byte	.LASF469
 10253 007a 06       		.byte	0x6
 10254 007b EE01     		.uleb128 0xee
 10255 007d 124D0000 		.4byte	.LASF470
 10256 0081 06       		.byte	0x6
 10257 0082 9103     		.uleb128 0x191
 10258 0084 AD3F0000 		.4byte	.LASF471
 10259 0088 05       		.byte	0x5
 10260 0089 9603     		.uleb128 0x196
 10261 008b 5B3C0000 		.4byte	.LASF472
 10262 008f 06       		.byte	0x6
 10263 0090 9C03     		.uleb128 0x19c
 10264 0092 F94D0000 		.4byte	.LASF473
 10265 0096 00       		.byte	0
 10266              		.section	.debug_macro,"G",%progbits,wm4.cdefs.h.47.f745493e6f8d3a68c4c4a8153fc4d157,comdat
 10267              	.Ldebug_macro10:
 10268 0000 0400     		.2byte	0x4
 10269 0002 00       		.byte	0
 10270 0003 05       		.byte	0x5
 10271 0004 2F       		.uleb128 0x2f
 10272 0005 5B3A0000 		.4byte	.LASF474
 10273 0009 05       		.byte	0x5
 10274 000a 30       		.uleb128 0x30
 10275 000b F7670000 		.4byte	.LASF475
 10276 000f 05       		.byte	0x5
 10277 0010 31       		.uleb128 0x31
 10278 0011 3F520000 		.4byte	.LASF476
 10279 0015 05       		.byte	0x5
 10280 0016 34       		.uleb128 0x34
 10281 0017 C60E0000 		.4byte	.LASF477
 10282 001b 05       		.byte	0x5
 10283 001c 37       		.uleb128 0x37
 10284 001d CF230000 		.4byte	.LASF478
 10285 0021 05       		.byte	0x5
 10286 0022 38       		.uleb128 0x38
 10287 0023 A38F0000 		.4byte	.LASF479
 10288 0027 05       		.byte	0x5
 10289 0028 3A       		.uleb128 0x3a
 10290 0029 6C3A0000 		.4byte	.LASF480
 10291 002d 05       		.byte	0x5
 10292 002e 3B       		.uleb128 0x3b
 10293 002f 90340000 		.4byte	.LASF481
 10294 0033 05       		.byte	0x5
 10295 0034 3C       		.uleb128 0x3c
 10296 0035 1B260000 		.4byte	.LASF482
 10297 0039 05       		.byte	0x5
 10298 003a 3D       		.uleb128 0x3d
 10299 003b 3D820000 		.4byte	.LASF483
 10300 003f 05       		.byte	0x5
 10301 0040 40       		.uleb128 0x40
 10302 0041 27100000 		.4byte	.LASF484
 10303 0045 05       		.byte	0x5
 10304 0046 41       		.uleb128 0x41
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 224


 10305 0047 840A0000 		.4byte	.LASF485
 10306 004b 05       		.byte	0x5
 10307 004c 42       		.uleb128 0x42
 10308 004d 35500000 		.4byte	.LASF486
 10309 0051 05       		.byte	0x5
 10310 0052 4C       		.uleb128 0x4c
 10311 0053 1A130000 		.4byte	.LASF487
 10312 0057 05       		.byte	0x5
 10313 0058 4F       		.uleb128 0x4f
 10314 0059 14410000 		.4byte	.LASF488
 10315 005d 05       		.byte	0x5
 10316 005e 55       		.uleb128 0x55
 10317 005f E97B0000 		.4byte	.LASF489
 10318 0063 05       		.byte	0x5
 10319 0064 5C       		.uleb128 0x5c
 10320 0065 0E660000 		.4byte	.LASF490
 10321 0069 05       		.byte	0x5
 10322 006a 5D       		.uleb128 0x5d
 10323 006b BB7A0000 		.4byte	.LASF491
 10324 006f 05       		.byte	0x5
 10325 0070 69       		.uleb128 0x69
 10326 0071 4C870000 		.4byte	.LASF492
 10327 0075 05       		.byte	0x5
 10328 0076 6A       		.uleb128 0x6a
 10329 0077 8A890000 		.4byte	.LASF493
 10330 007b 05       		.byte	0x5
 10331 007c 6E       		.uleb128 0x6e
 10332 007d 4A040000 		.4byte	.LASF494
 10333 0081 05       		.byte	0x5
 10334 0082 6F       		.uleb128 0x6f
 10335 0083 AA790000 		.4byte	.LASF495
 10336 0087 05       		.byte	0x5
 10337 0088 70       		.uleb128 0x70
 10338 0089 D44E0000 		.4byte	.LASF496
 10339 008d 05       		.byte	0x5
 10340 008e 73       		.uleb128 0x73
 10341 008f 57750000 		.4byte	.LASF497
 10342 0093 05       		.byte	0x5
 10343 0094 76       		.uleb128 0x76
 10344 0095 89150000 		.4byte	.LASF498
 10345 0099 05       		.byte	0x5
 10346 009a 7D       		.uleb128 0x7d
 10347 009b B9350000 		.4byte	.LASF499
 10348 009f 05       		.byte	0x5
 10349 00a0 7E       		.uleb128 0x7e
 10350 00a1 B35F0000 		.4byte	.LASF500
 10351 00a5 05       		.byte	0x5
 10352 00a6 7F       		.uleb128 0x7f
 10353 00a7 98880000 		.4byte	.LASF501
 10354 00ab 05       		.byte	0x5
 10355 00ac 8301     		.uleb128 0x83
 10356 00ae 5F660000 		.4byte	.LASF502
 10357 00b2 05       		.byte	0x5
 10358 00b3 8A01     		.uleb128 0x8a
 10359 00b5 37910000 		.4byte	.LASF503
 10360 00b9 05       		.byte	0x5
 10361 00ba 8E01     		.uleb128 0x8e
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 225


 10362 00bc 3C610000 		.4byte	.LASF504
 10363 00c0 05       		.byte	0x5
 10364 00c1 8F01     		.uleb128 0x8f
 10365 00c3 D6260000 		.4byte	.LASF505
 10366 00c7 05       		.byte	0x5
 10367 00c8 9201     		.uleb128 0x92
 10368 00ca 1E550000 		.4byte	.LASF506
 10369 00ce 05       		.byte	0x5
 10370 00cf 9501     		.uleb128 0x95
 10371 00d1 E0670000 		.4byte	.LASF507
 10372 00d5 05       		.byte	0x5
 10373 00d6 9601     		.uleb128 0x96
 10374 00d8 10310000 		.4byte	.LASF508
 10375 00dc 05       		.byte	0x5
 10376 00dd 9701     		.uleb128 0x97
 10377 00df 627D0000 		.4byte	.LASF509
 10378 00e3 05       		.byte	0x5
 10379 00e4 9901     		.uleb128 0x99
 10380 00e6 30480000 		.4byte	.LASF510
 10381 00ea 05       		.byte	0x5
 10382 00eb 9A01     		.uleb128 0x9a
 10383 00ed 313F0000 		.4byte	.LASF511
 10384 00f1 05       		.byte	0x5
 10385 00f2 9C01     		.uleb128 0x9c
 10386 00f4 78770000 		.4byte	.LASF512
 10387 00f8 05       		.byte	0x5
 10388 00f9 9E01     		.uleb128 0x9e
 10389 00fb 1C1F0000 		.4byte	.LASF513
 10390 00ff 05       		.byte	0x5
 10391 0100 AF01     		.uleb128 0xaf
 10392 0102 8E1F0000 		.4byte	.LASF514
 10393 0106 05       		.byte	0x5
 10394 0107 B001     		.uleb128 0xb0
 10395 0109 96100000 		.4byte	.LASF515
 10396 010d 05       		.byte	0x5
 10397 010e B101     		.uleb128 0xb1
 10398 0110 F5030000 		.4byte	.LASF516
 10399 0114 05       		.byte	0x5
 10400 0115 B201     		.uleb128 0xb2
 10401 0117 D75F0000 		.4byte	.LASF517
 10402 011b 05       		.byte	0x5
 10403 011c B301     		.uleb128 0xb3
 10404 011e 77340000 		.4byte	.LASF518
 10405 0122 05       		.byte	0x5
 10406 0123 B501     		.uleb128 0xb5
 10407 0125 FB4A0000 		.4byte	.LASF519
 10408 0129 05       		.byte	0x5
 10409 012a B601     		.uleb128 0xb6
 10410 012c 29620000 		.4byte	.LASF520
 10411 0130 05       		.byte	0x5
 10412 0131 B701     		.uleb128 0xb7
 10413 0133 D8950000 		.4byte	.LASF521
 10414 0137 05       		.byte	0x5
 10415 0138 EF01     		.uleb128 0xef
 10416 013a 662F0000 		.4byte	.LASF522
 10417 013e 05       		.byte	0x5
 10418 013f FC01     		.uleb128 0xfc
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 226


 10419 0141 47650000 		.4byte	.LASF523
 10420 0145 05       		.byte	0x5
 10421 0146 FD01     		.uleb128 0xfd
 10422 0148 D0460000 		.4byte	.LASF524
 10423 014c 05       		.byte	0x5
 10424 014d FE01     		.uleb128 0xfe
 10425 014f 2A510000 		.4byte	.LASF525
 10426 0153 05       		.byte	0x5
 10427 0154 FF01     		.uleb128 0xff
 10428 0156 A52F0000 		.4byte	.LASF526
 10429 015a 05       		.byte	0x5
 10430 015b 8002     		.uleb128 0x100
 10431 015d B0990000 		.4byte	.LASF527
 10432 0161 05       		.byte	0x5
 10433 0162 8102     		.uleb128 0x101
 10434 0164 B6080000 		.4byte	.LASF528
 10435 0168 05       		.byte	0x5
 10436 0169 8202     		.uleb128 0x102
 10437 016b D1450000 		.4byte	.LASF529
 10438 016f 05       		.byte	0x5
 10439 0170 8502     		.uleb128 0x105
 10440 0172 094B0000 		.4byte	.LASF530
 10441 0176 05       		.byte	0x5
 10442 0177 8A02     		.uleb128 0x10a
 10443 0179 98240000 		.4byte	.LASF531
 10444 017d 05       		.byte	0x5
 10445 017e A002     		.uleb128 0x120
 10446 0180 BA290000 		.4byte	.LASF532
 10447 0184 05       		.byte	0x5
 10448 0185 A702     		.uleb128 0x127
 10449 0187 12520000 		.4byte	.LASF533
 10450 018b 05       		.byte	0x5
 10451 018c AF02     		.uleb128 0x12f
 10452 018e 478E0000 		.4byte	.LASF534
 10453 0192 05       		.byte	0x5
 10454 0193 B502     		.uleb128 0x135
 10455 0195 E95B0000 		.4byte	.LASF535
 10456 0199 05       		.byte	0x5
 10457 019a D202     		.uleb128 0x152
 10458 019c 6C3C0000 		.4byte	.LASF536
 10459 01a0 05       		.byte	0x5
 10460 01a1 E602     		.uleb128 0x166
 10461 01a3 DE7A0000 		.4byte	.LASF537
 10462 01a7 05       		.byte	0x5
 10463 01a8 EC02     		.uleb128 0x16c
 10464 01aa 6A5E0000 		.4byte	.LASF538
 10465 01ae 05       		.byte	0x5
 10466 01af ED02     		.uleb128 0x16d
 10467 01b1 E6380000 		.4byte	.LASF539
 10468 01b5 05       		.byte	0x5
 10469 01b6 F402     		.uleb128 0x174
 10470 01b8 FC230000 		.4byte	.LASF540
 10471 01bc 05       		.byte	0x5
 10472 01bd FA02     		.uleb128 0x17a
 10473 01bf D32E0000 		.4byte	.LASF541
 10474 01c3 05       		.byte	0x5
 10475 01c4 8003     		.uleb128 0x180
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 227


 10476 01c6 92950000 		.4byte	.LASF542
 10477 01ca 05       		.byte	0x5
 10478 01cb 8103     		.uleb128 0x181
 10479 01cd 7C510000 		.4byte	.LASF543
 10480 01d1 05       		.byte	0x5
 10481 01d2 8803     		.uleb128 0x188
 10482 01d4 FC7D0000 		.4byte	.LASF544
 10483 01d8 05       		.byte	0x5
 10484 01d9 8903     		.uleb128 0x189
 10485 01db 66840000 		.4byte	.LASF545
 10486 01df 05       		.byte	0x5
 10487 01e0 9003     		.uleb128 0x190
 10488 01e2 CC390000 		.4byte	.LASF546
 10489 01e6 05       		.byte	0x5
 10490 01e7 9603     		.uleb128 0x196
 10491 01e9 FF000000 		.4byte	.LASF547
 10492 01ed 05       		.byte	0x5
 10493 01ee A803     		.uleb128 0x1a8
 10494 01f0 66570000 		.4byte	.LASF548
 10495 01f4 05       		.byte	0x5
 10496 01f5 CB03     		.uleb128 0x1cb
 10497 01f7 A7250000 		.4byte	.LASF549
 10498 01fb 05       		.byte	0x5
 10499 01fc CC03     		.uleb128 0x1cc
 10500 01fe 72570000 		.4byte	.LASF550
 10501 0202 05       		.byte	0x5
 10502 0203 D303     		.uleb128 0x1d3
 10503 0205 CF630000 		.4byte	.LASF551
 10504 0209 05       		.byte	0x5
 10505 020a D403     		.uleb128 0x1d4
 10506 020c 19200000 		.4byte	.LASF552
 10507 0210 05       		.byte	0x5
 10508 0211 D703     		.uleb128 0x1d7
 10509 0213 772D0000 		.4byte	.LASF553
 10510 0217 05       		.byte	0x5
 10511 0218 E103     		.uleb128 0x1e1
 10512 021a 38420000 		.4byte	.LASF554
 10513 021e 05       		.byte	0x5
 10514 021f E203     		.uleb128 0x1e2
 10515 0221 B81E0000 		.4byte	.LASF555
 10516 0225 05       		.byte	0x5
 10517 0226 EC03     		.uleb128 0x1ec
 10518 0228 BB6D0000 		.4byte	.LASF556
 10519 022c 05       		.byte	0x5
 10520 022d 8204     		.uleb128 0x202
 10521 022f 8D7D0000 		.4byte	.LASF557
 10522 0233 05       		.byte	0x5
 10523 0234 8404     		.uleb128 0x204
 10524 0236 9E870000 		.4byte	.LASF558
 10525 023a 05       		.byte	0x5
 10526 023b 8604     		.uleb128 0x206
 10527 023d F9900000 		.4byte	.LASF559
 10528 0241 05       		.byte	0x5
 10529 0242 8704     		.uleb128 0x207
 10530 0244 DB600000 		.4byte	.LASF560
 10531 0248 05       		.byte	0x5
 10532 0249 8904     		.uleb128 0x209
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 228


 10533 024b BD980000 		.4byte	.LASF561
 10534 024f 05       		.byte	0x5
 10535 0250 9504     		.uleb128 0x215
 10536 0252 B37E0000 		.4byte	.LASF562
 10537 0256 05       		.byte	0x5
 10538 0257 A304     		.uleb128 0x223
 10539 0259 ED640000 		.4byte	.LASF563
 10540 025d 05       		.byte	0x5
 10541 025e A804     		.uleb128 0x228
 10542 0260 D6850000 		.4byte	.LASF564
 10543 0264 05       		.byte	0x5
 10544 0265 AD04     		.uleb128 0x22d
 10545 0267 68120000 		.4byte	.LASF565
 10546 026b 05       		.byte	0x5
 10547 026c B004     		.uleb128 0x230
 10548 026e C84B0000 		.4byte	.LASF566
 10549 0272 05       		.byte	0x5
 10550 0273 B404     		.uleb128 0x234
 10551 0275 167D0000 		.4byte	.LASF567
 10552 0279 05       		.byte	0x5
 10553 027a B604     		.uleb128 0x236
 10554 027c A6280000 		.4byte	.LASF568
 10555 0280 05       		.byte	0x5
 10556 0281 D904     		.uleb128 0x259
 10557 0283 40100000 		.4byte	.LASF569
 10558 0287 05       		.byte	0x5
 10559 0288 DD04     		.uleb128 0x25d
 10560 028a 0C790000 		.4byte	.LASF570
 10561 028e 05       		.byte	0x5
 10562 028f E104     		.uleb128 0x261
 10563 0291 B6040000 		.4byte	.LASF571
 10564 0295 05       		.byte	0x5
 10565 0296 E504     		.uleb128 0x265
 10566 0298 D78A0000 		.4byte	.LASF572
 10567 029c 05       		.byte	0x5
 10568 029d E904     		.uleb128 0x269
 10569 029f 7F630000 		.4byte	.LASF573
 10570 02a3 05       		.byte	0x5
 10571 02a4 ED04     		.uleb128 0x26d
 10572 02a6 9C2A0000 		.4byte	.LASF574
 10573 02aa 05       		.byte	0x5
 10574 02ab F104     		.uleb128 0x271
 10575 02ad 06840000 		.4byte	.LASF575
 10576 02b1 05       		.byte	0x5
 10577 02b2 F504     		.uleb128 0x275
 10578 02b4 2B990000 		.4byte	.LASF576
 10579 02b8 05       		.byte	0x5
 10580 02b9 8605     		.uleb128 0x286
 10581 02bb D8620000 		.4byte	.LASF577
 10582 02bf 05       		.byte	0x5
 10583 02c0 8705     		.uleb128 0x287
 10584 02c2 D4940000 		.4byte	.LASF578
 10585 02c6 05       		.byte	0x5
 10586 02c7 9905     		.uleb128 0x299
 10587 02c9 337E0000 		.4byte	.LASF579
 10588 02cd 05       		.byte	0x5
 10589 02ce 9D05     		.uleb128 0x29d
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 229


 10590 02d0 067A0000 		.4byte	.LASF580
 10591 02d4 05       		.byte	0x5
 10592 02d5 A005     		.uleb128 0x2a0
 10593 02d7 421A0000 		.4byte	.LASF581
 10594 02db 05       		.byte	0x5
 10595 02dc A205     		.uleb128 0x2a2
 10596 02de EE860000 		.4byte	.LASF582
 10597 02e2 05       		.byte	0x5
 10598 02e3 A605     		.uleb128 0x2a6
 10599 02e5 916C0000 		.4byte	.LASF583
 10600 02e9 05       		.byte	0x5
 10601 02ea A805     		.uleb128 0x2a8
 10602 02ec 9C3E0000 		.4byte	.LASF584
 10603 02f0 05       		.byte	0x5
 10604 02f1 AC05     		.uleb128 0x2ac
 10605 02f3 835B0000 		.4byte	.LASF585
 10606 02f7 05       		.byte	0x5
 10607 02f8 AF05     		.uleb128 0x2af
 10608 02fa 39230000 		.4byte	.LASF586
 10609 02fe 05       		.byte	0x5
 10610 02ff B105     		.uleb128 0x2b1
 10611 0301 279A0000 		.4byte	.LASF587
 10612 0305 05       		.byte	0x5
 10613 0306 B505     		.uleb128 0x2b5
 10614 0308 10740000 		.4byte	.LASF588
 10615 030c 05       		.byte	0x5
 10616 030d B705     		.uleb128 0x2b7
 10617 030f 9C320000 		.4byte	.LASF589
 10618 0313 05       		.byte	0x5
 10619 0314 B905     		.uleb128 0x2b9
 10620 0316 29440000 		.4byte	.LASF590
 10621 031a 05       		.byte	0x5
 10622 031b BD05     		.uleb128 0x2bd
 10623 031d 896E0000 		.4byte	.LASF591
 10624 0321 05       		.byte	0x5
 10625 0322 C005     		.uleb128 0x2c0
 10626 0324 947C0000 		.4byte	.LASF592
 10627 0328 05       		.byte	0x5
 10628 0329 C105     		.uleb128 0x2c1
 10629 032b 5F7C0000 		.4byte	.LASF593
 10630 032f 00       		.byte	0
 10631              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.39.a231a87e043a95babfd62cebe88e50f8,comdat
 10632              	.Ldebug_macro11:
 10633 0000 0400     		.2byte	0x4
 10634 0002 00       		.byte	0
 10635 0003 05       		.byte	0x5
 10636 0004 27       		.uleb128 0x27
 10637 0005 547C0000 		.4byte	.LASF594
 10638 0009 05       		.byte	0x5
 10639 000a 28       		.uleb128 0x28
 10640 000b 30640000 		.4byte	.LASF595
 10641 000f 05       		.byte	0x5
 10642 0010 2A       		.uleb128 0x2a
 10643 0011 04400000 		.4byte	.LASF596
 10644 0015 05       		.byte	0x5
 10645 0016 8901     		.uleb128 0x89
 10646 0018 94530000 		.4byte	.LASF597
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 230


 10647 001c 05       		.byte	0x5
 10648 001d 8A01     		.uleb128 0x8a
 10649 001f 8B490000 		.4byte	.LASF598
 10650 0023 05       		.byte	0x5
 10651 0024 8B01     		.uleb128 0x8b
 10652 0026 90590000 		.4byte	.LASF599
 10653 002a 05       		.byte	0x5
 10654 002b 8C01     		.uleb128 0x8c
 10655 002d 34690000 		.4byte	.LASF600
 10656 0031 05       		.byte	0x5
 10657 0032 8D01     		.uleb128 0x8d
 10658 0034 6C4A0000 		.4byte	.LASF601
 10659 0038 05       		.byte	0x5
 10660 0039 8E01     		.uleb128 0x8e
 10661 003b 643D0000 		.4byte	.LASF602
 10662 003f 05       		.byte	0x5
 10663 0040 8F01     		.uleb128 0x8f
 10664 0042 06480000 		.4byte	.LASF603
 10665 0046 05       		.byte	0x5
 10666 0047 9001     		.uleb128 0x90
 10667 0049 F05F0000 		.4byte	.LASF604
 10668 004d 05       		.byte	0x5
 10669 004e 9101     		.uleb128 0x91
 10670 0050 93660000 		.4byte	.LASF605
 10671 0054 06       		.byte	0x6
 10672 0055 A101     		.uleb128 0xa1
 10673 0057 3E130000 		.4byte	.LASF606
 10674 005b 06       		.byte	0x6
 10675 005c EE01     		.uleb128 0xee
 10676 005e 124D0000 		.4byte	.LASF470
 10677 0062 05       		.byte	0x5
 10678 0063 8B02     		.uleb128 0x10b
 10679 0065 FE750000 		.4byte	.LASF607
 10680 0069 05       		.byte	0x5
 10681 006a 8C02     		.uleb128 0x10c
 10682 006c 49840000 		.4byte	.LASF608
 10683 0070 05       		.byte	0x5
 10684 0071 8D02     		.uleb128 0x10d
 10685 0073 E65F0000 		.4byte	.LASF609
 10686 0077 05       		.byte	0x5
 10687 0078 8E02     		.uleb128 0x10e
 10688 007a BC8A0000 		.4byte	.LASF610
 10689 007e 05       		.byte	0x5
 10690 007f 8F02     		.uleb128 0x10f
 10691 0081 AF380000 		.4byte	.LASF611
 10692 0085 05       		.byte	0x5
 10693 0086 9002     		.uleb128 0x110
 10694 0088 09500000 		.4byte	.LASF612
 10695 008c 05       		.byte	0x5
 10696 008d 9102     		.uleb128 0x111
 10697 008f 56710000 		.4byte	.LASF613
 10698 0093 05       		.byte	0x5
 10699 0094 9202     		.uleb128 0x112
 10700 0096 96390000 		.4byte	.LASF614
 10701 009a 05       		.byte	0x5
 10702 009b 9302     		.uleb128 0x113
 10703 009d 89650000 		.4byte	.LASF615
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 231


 10704 00a1 05       		.byte	0x5
 10705 00a2 9402     		.uleb128 0x114
 10706 00a4 676C0000 		.4byte	.LASF616
 10707 00a8 05       		.byte	0x5
 10708 00a9 9502     		.uleb128 0x115
 10709 00ab E5610000 		.4byte	.LASF617
 10710 00af 05       		.byte	0x5
 10711 00b0 9602     		.uleb128 0x116
 10712 00b2 F9330000 		.4byte	.LASF618
 10713 00b6 05       		.byte	0x5
 10714 00b7 9702     		.uleb128 0x117
 10715 00b9 7E700000 		.4byte	.LASF619
 10716 00bd 05       		.byte	0x5
 10717 00be 9802     		.uleb128 0x118
 10718 00c0 FF700000 		.4byte	.LASF620
 10719 00c4 05       		.byte	0x5
 10720 00c5 9902     		.uleb128 0x119
 10721 00c7 EE570000 		.4byte	.LASF621
 10722 00cb 06       		.byte	0x6
 10723 00cc A602     		.uleb128 0x126
 10724 00ce 028B0000 		.4byte	.LASF622
 10725 00d2 06       		.byte	0x6
 10726 00d3 DB02     		.uleb128 0x15b
 10727 00d5 FF0E0000 		.4byte	.LASF623
 10728 00d9 06       		.byte	0x6
 10729 00da 9103     		.uleb128 0x191
 10730 00dc AD3F0000 		.4byte	.LASF471
 10731 00e0 05       		.byte	0x5
 10732 00e1 9603     		.uleb128 0x196
 10733 00e3 5B3C0000 		.4byte	.LASF472
 10734 00e7 06       		.byte	0x6
 10735 00e8 9C03     		.uleb128 0x19c
 10736 00ea F94D0000 		.4byte	.LASF473
 10737 00ee 05       		.byte	0x5
 10738 00ef A103     		.uleb128 0x1a1
 10739 00f1 FE450000 		.4byte	.LASF624
 10740 00f5 00       		.byte	0
 10741              		.section	.debug_macro,"G",%progbits,wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6,comdat
 10742              	.Ldebug_macro12:
 10743 0000 0400     		.2byte	0x4
 10744 0002 00       		.byte	0
 10745 0003 06       		.byte	0x6
 10746 0004 22       		.uleb128 0x22
 10747 0005 F4940000 		.4byte	.LASF626
 10748 0009 05       		.byte	0x5
 10749 000a 27       		.uleb128 0x27
 10750 000b 57380000 		.4byte	.LASF627
 10751 000f 00       		.byte	0
 10752              		.section	.debug_macro,"G",%progbits,wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea,comdat
 10753              	.Ldebug_macro13:
 10754 0000 0400     		.2byte	0x4
 10755 0002 00       		.byte	0
 10756 0003 05       		.byte	0x5
 10757 0004 02       		.uleb128 0x2
 10758 0005 6E9A0000 		.4byte	.LASF632
 10759 0009 05       		.byte	0x5
 10760 000a 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 232


 10761 000b AE610000 		.4byte	.LASF633
 10762 000f 05       		.byte	0x5
 10763 0010 0C       		.uleb128 0xc
 10764 0011 63860000 		.4byte	.LASF634
 10765 0015 05       		.byte	0x5
 10766 0016 0D       		.uleb128 0xd
 10767 0017 255D0000 		.4byte	.LASF635
 10768 001b 05       		.byte	0x5
 10769 001c 0E       		.uleb128 0xe
 10770 001d CE900000 		.4byte	.LASF636
 10771 0021 05       		.byte	0x5
 10772 0022 0F       		.uleb128 0xf
 10773 0023 0C980000 		.4byte	.LASF637
 10774 0027 05       		.byte	0x5
 10775 0028 10       		.uleb128 0x10
 10776 0029 210F0000 		.4byte	.LASF638
 10777 002d 05       		.byte	0x5
 10778 002e 11       		.uleb128 0x11
 10779 002f D74A0000 		.4byte	.LASF639
 10780 0033 05       		.byte	0x5
 10781 0034 12       		.uleb128 0x12
 10782 0035 283A0000 		.4byte	.LASF640
 10783 0039 05       		.byte	0x5
 10784 003a 13       		.uleb128 0x13
 10785 003b FD2E0000 		.4byte	.LASF641
 10786 003f 05       		.byte	0x5
 10787 0040 14       		.uleb128 0x14
 10788 0041 F76B0000 		.4byte	.LASF642
 10789 0045 05       		.byte	0x5
 10790 0046 15       		.uleb128 0x15
 10791 0047 F1610000 		.4byte	.LASF643
 10792 004b 05       		.byte	0x5
 10793 004c 16       		.uleb128 0x16
 10794 004d 33900000 		.4byte	.LASF644
 10795 0051 00       		.byte	0
 10796              		.section	.debug_macro,"G",%progbits,wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068,comdat
 10797              	.Ldebug_macro14:
 10798 0000 0400     		.2byte	0x4
 10799 0002 00       		.byte	0
 10800 0003 06       		.byte	0x6
 10801 0004 7D       		.uleb128 0x7d
 10802 0005 AE670000 		.4byte	.LASF645
 10803 0009 05       		.byte	0x5
 10804 000a 9001     		.uleb128 0x90
 10805 000c 6C5A0000 		.4byte	.LASF646
 10806 0010 06       		.byte	0x6
 10807 0011 9201     		.uleb128 0x92
 10808 0013 AF7B0000 		.4byte	.LASF647
 10809 0017 05       		.byte	0x5
 10810 0018 9E01     		.uleb128 0x9e
 10811 001a BF8D0000 		.4byte	.LASF648
 10812 001e 00       		.byte	0
 10813              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34,comdat
 10814              	.Ldebug_macro15:
 10815 0000 0400     		.2byte	0x4
 10816 0002 00       		.byte	0
 10817 0003 06       		.byte	0x6
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 233


 10818 0004 A101     		.uleb128 0xa1
 10819 0006 3E130000 		.4byte	.LASF606
 10820 000a 06       		.byte	0x6
 10821 000b EE01     		.uleb128 0xee
 10822 000d 124D0000 		.4byte	.LASF470
 10823 0011 06       		.byte	0x6
 10824 0012 DB02     		.uleb128 0x15b
 10825 0014 FF0E0000 		.4byte	.LASF623
 10826 0018 05       		.byte	0x5
 10827 0019 E002     		.uleb128 0x160
 10828 001b 472E0000 		.4byte	.LASF649
 10829 001f 06       		.byte	0x6
 10830 0020 E702     		.uleb128 0x167
 10831 0022 794A0000 		.4byte	.LASF650
 10832 0026 06       		.byte	0x6
 10833 0027 9103     		.uleb128 0x191
 10834 0029 AD3F0000 		.4byte	.LASF471
 10835 002d 05       		.byte	0x5
 10836 002e 9603     		.uleb128 0x196
 10837 0030 5B3C0000 		.4byte	.LASF472
 10838 0034 06       		.byte	0x6
 10839 0035 9C03     		.uleb128 0x19c
 10840 0037 F94D0000 		.4byte	.LASF473
 10841 003b 05       		.byte	0x5
 10842 003c A103     		.uleb128 0x1a1
 10843 003e FE450000 		.4byte	.LASF624
 10844 0042 00       		.byte	0
 10845              		.section	.debug_macro,"G",%progbits,wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098,comdat
 10846              	.Ldebug_macro16:
 10847 0000 0400     		.2byte	0x4
 10848 0002 00       		.byte	0
 10849 0003 05       		.byte	0x5
 10850 0004 B701     		.uleb128 0xb7
 10851 0006 842A0000 		.4byte	.LASF651
 10852 000a 05       		.byte	0x5
 10853 000b BA01     		.uleb128 0xba
 10854 000d 5E5A0000 		.4byte	.LASF652
 10855 0011 05       		.byte	0x5
 10856 0012 BD01     		.uleb128 0xbd
 10857 0014 35700000 		.4byte	.LASF653
 10858 0018 05       		.byte	0x5
 10859 0019 C001     		.uleb128 0xc0
 10860 001b 440C0000 		.4byte	.LASF654
 10861 001f 00       		.byte	0
 10862              		.section	.debug_macro,"G",%progbits,wm4.reent.h.17.a65699cb51f4bd6809a652bc416a088d,comdat
 10863              	.Ldebug_macro17:
 10864 0000 0400     		.2byte	0x4
 10865 0002 00       		.byte	0
 10866 0003 05       		.byte	0x5
 10867 0004 11       		.uleb128 0x11
 10868 0005 E6820000 		.4byte	.LASF655
 10869 0009 05       		.byte	0x5
 10870 000a 15       		.uleb128 0x15
 10871 000b 7A750000 		.4byte	.LASF656
 10872 000f 05       		.byte	0x5
 10873 0010 48       		.uleb128 0x48
 10874 0011 37310000 		.4byte	.LASF657
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 234


 10875 0015 05       		.byte	0x5
 10876 0016 5B       		.uleb128 0x5b
 10877 0017 F43A0000 		.4byte	.LASF658
 10878 001b 05       		.byte	0x5
 10879 001c 68       		.uleb128 0x68
 10880 001d 48850000 		.4byte	.LASF659
 10881 0021 05       		.byte	0x5
 10882 0022 AA01     		.uleb128 0xaa
 10883 0024 AE520000 		.4byte	.LASF660
 10884 0028 05       		.byte	0x5
 10885 0029 B802     		.uleb128 0x138
 10886 002b 02510000 		.4byte	.LASF661
 10887 002f 05       		.byte	0x5
 10888 0030 B902     		.uleb128 0x139
 10889 0032 A7510000 		.4byte	.LASF662
 10890 0036 05       		.byte	0x5
 10891 0037 BA02     		.uleb128 0x13a
 10892 0039 CE5C0000 		.4byte	.LASF663
 10893 003d 05       		.byte	0x5
 10894 003e BB02     		.uleb128 0x13b
 10895 0040 0E7F0000 		.4byte	.LASF664
 10896 0044 05       		.byte	0x5
 10897 0045 BC02     		.uleb128 0x13c
 10898 0047 61740000 		.4byte	.LASF665
 10899 004b 05       		.byte	0x5
 10900 004c BD02     		.uleb128 0x13d
 10901 004e BC580000 		.4byte	.LASF666
 10902 0052 05       		.byte	0x5
 10903 0053 BE02     		.uleb128 0x13e
 10904 0055 AB960000 		.4byte	.LASF667
 10905 0059 05       		.byte	0x5
 10906 005a CA02     		.uleb128 0x14a
 10907 005c C5110000 		.4byte	.LASF668
 10908 0060 05       		.byte	0x5
 10909 0061 CB02     		.uleb128 0x14b
 10910 0063 DB9A0000 		.4byte	.LASF669
 10911 0067 05       		.byte	0x5
 10912 0068 CC02     		.uleb128 0x14c
 10913 006a 36030000 		.4byte	.LASF670
 10914 006e 05       		.byte	0x5
 10915 006f A903     		.uleb128 0x1a9
 10916 0071 35210000 		.4byte	.LASF671
 10917 0075 05       		.byte	0x5
 10918 0076 C303     		.uleb128 0x1c3
 10919 0078 16830000 		.4byte	.LASF672
 10920 007c 05       		.byte	0x5
 10921 007d CE03     		.uleb128 0x1ce
 10922 007f 0F720000 		.4byte	.LASF673
 10923 0083 05       		.byte	0x5
 10924 0084 D603     		.uleb128 0x1d6
 10925 0086 A9150000 		.4byte	.LASF674
 10926 008a 05       		.byte	0x5
 10927 008b DF03     		.uleb128 0x1df
 10928 008d DE110000 		.4byte	.LASF675
 10929 0091 05       		.byte	0x5
 10930 0092 E303     		.uleb128 0x1e3
 10931 0094 206F0000 		.4byte	.LASF676
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 235


 10932 0098 05       		.byte	0x5
 10933 0099 E803     		.uleb128 0x1e8
 10934 009b FA060000 		.4byte	.LASF677
 10935 009f 05       		.byte	0x5
 10936 00a0 F303     		.uleb128 0x1f3
 10937 00a2 267F0000 		.4byte	.LASF678
 10938 00a6 05       		.byte	0x5
 10939 00a7 F603     		.uleb128 0x1f6
 10940 00a9 9F370000 		.4byte	.LASF679
 10941 00ad 05       		.byte	0x5
 10942 00ae FC03     		.uleb128 0x1fc
 10943 00b0 2C4F0000 		.4byte	.LASF680
 10944 00b4 05       		.byte	0x5
 10945 00b5 FF03     		.uleb128 0x1ff
 10946 00b7 FD490000 		.4byte	.LASF681
 10947 00bb 05       		.byte	0x5
 10948 00bc 8204     		.uleb128 0x202
 10949 00be 96910000 		.4byte	.LASF682
 10950 00c2 05       		.byte	0x5
 10951 00c3 9804     		.uleb128 0x218
 10952 00c5 1B590000 		.4byte	.LASF683
 10953 00c9 05       		.byte	0x5
 10954 00ca 9B04     		.uleb128 0x21b
 10955 00cc A90F0000 		.4byte	.LASF684
 10956 00d0 05       		.byte	0x5
 10957 00d1 9E04     		.uleb128 0x21e
 10958 00d3 C62C0000 		.4byte	.LASF685
 10959 00d7 05       		.byte	0x5
 10960 00d8 9F04     		.uleb128 0x21f
 10961 00da 0D6D0000 		.4byte	.LASF686
 10962 00de 05       		.byte	0x5
 10963 00df A004     		.uleb128 0x220
 10964 00e1 AF200000 		.4byte	.LASF687
 10965 00e5 05       		.byte	0x5
 10966 00e6 A104     		.uleb128 0x221
 10967 00e8 C94F0000 		.4byte	.LASF688
 10968 00ec 05       		.byte	0x5
 10969 00ed A204     		.uleb128 0x222
 10970 00ef D1010000 		.4byte	.LASF689
 10971 00f3 05       		.byte	0x5
 10972 00f4 A304     		.uleb128 0x223
 10973 00f6 898E0000 		.4byte	.LASF690
 10974 00fa 05       		.byte	0x5
 10975 00fb A404     		.uleb128 0x224
 10976 00fd 738F0000 		.4byte	.LASF691
 10977 0101 05       		.byte	0x5
 10978 0102 A504     		.uleb128 0x225
 10979 0104 F3320000 		.4byte	.LASF692
 10980 0108 05       		.byte	0x5
 10981 0109 A604     		.uleb128 0x226
 10982 010b F5590000 		.4byte	.LASF693
 10983 010f 05       		.byte	0x5
 10984 0110 A704     		.uleb128 0x227
 10985 0112 B0420000 		.4byte	.LASF694
 10986 0116 05       		.byte	0x5
 10987 0117 A804     		.uleb128 0x228
 10988 0119 A00B0000 		.4byte	.LASF695
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 236


 10989 011d 05       		.byte	0x5
 10990 011e A904     		.uleb128 0x229
 10991 0120 F02F0000 		.4byte	.LASF696
 10992 0124 05       		.byte	0x5
 10993 0125 AA04     		.uleb128 0x22a
 10994 0127 C83D0000 		.4byte	.LASF697
 10995 012b 05       		.byte	0x5
 10996 012c AB04     		.uleb128 0x22b
 10997 012e 742E0000 		.4byte	.LASF698
 10998 0132 05       		.byte	0x5
 10999 0133 AC04     		.uleb128 0x22c
 11000 0135 0B340000 		.4byte	.LASF699
 11001 0139 05       		.byte	0x5
 11002 013a AD04     		.uleb128 0x22d
 11003 013c B0540000 		.4byte	.LASF700
 11004 0140 05       		.byte	0x5
 11005 0141 AE04     		.uleb128 0x22e
 11006 0143 07450000 		.4byte	.LASF701
 11007 0147 05       		.byte	0x5
 11008 0148 AF04     		.uleb128 0x22f
 11009 014a BD3B0000 		.4byte	.LASF702
 11010 014e 05       		.byte	0x5
 11011 014f B004     		.uleb128 0x230
 11012 0151 50050000 		.4byte	.LASF703
 11013 0155 05       		.byte	0x5
 11014 0156 B104     		.uleb128 0x231
 11015 0158 0E000000 		.4byte	.LASF704
 11016 015c 05       		.byte	0x5
 11017 015d B204     		.uleb128 0x232
 11018 015f 4A370000 		.4byte	.LASF705
 11019 0163 05       		.byte	0x5
 11020 0164 B304     		.uleb128 0x233
 11021 0166 53790000 		.4byte	.LASF706
 11022 016a 05       		.byte	0x5
 11023 016b B404     		.uleb128 0x234
 11024 016d 31680000 		.4byte	.LASF707
 11025 0171 05       		.byte	0x5
 11026 0172 B504     		.uleb128 0x235
 11027 0174 C9590000 		.4byte	.LASF708
 11028 0178 05       		.byte	0x5
 11029 0179 EB05     		.uleb128 0x2eb
 11030 017b 27630000 		.4byte	.LASF709
 11031 017f 05       		.byte	0x5
 11032 0180 F305     		.uleb128 0x2f3
 11033 0182 68030000 		.4byte	.LASF710
 11034 0186 05       		.byte	0x5
 11035 0187 FB05     		.uleb128 0x2fb
 11036 0189 827E0000 		.4byte	.LASF711
 11037 018d 05       		.byte	0x5
 11038 018e 8B06     		.uleb128 0x30b
 11039 0190 47300000 		.4byte	.LASF712
 11040 0194 05       		.byte	0x5
 11041 0195 8E06     		.uleb128 0x30e
 11042 0197 828A0000 		.4byte	.LASF713
 11043 019b 05       		.byte	0x5
 11044 019c 9206     		.uleb128 0x312
 11045 019e D9470000 		.4byte	.LASF714
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 237


 11046 01a2 00       		.byte	0
 11047              		.section	.debug_macro,"G",%progbits,wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc,comdat
 11048              	.Ldebug_macro18:
 11049 0000 0400     		.2byte	0x4
 11050 0002 00       		.byte	0
 11051 0003 05       		.byte	0x5
 11052 0004 28       		.uleb128 0x28
 11053 0005 293E0000 		.4byte	.LASF715
 11054 0009 05       		.byte	0x5
 11055 000a 3C       		.uleb128 0x3c
 11056 000b 67330000 		.4byte	.LASF716
 11057 000f 00       		.byte	0
 11058              		.section	.debug_macro,"G",%progbits,wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841,comdat
 11059              	.Ldebug_macro19:
 11060 0000 0400     		.2byte	0x4
 11061 0002 00       		.byte	0
 11062 0003 05       		.byte	0x5
 11063 0004 0A       		.uleb128 0xa
 11064 0005 4F450000 		.4byte	.LASF717
 11065 0009 05       		.byte	0x5
 11066 000a 15       		.uleb128 0x15
 11067 000b 36850000 		.4byte	.LASF718
 11068 000f 05       		.byte	0x5
 11069 0010 19       		.uleb128 0x19
 11070 0011 CF6B0000 		.4byte	.LASF719
 11071 0015 05       		.byte	0x5
 11072 0016 1B       		.uleb128 0x1b
 11073 0017 3C1E0000 		.4byte	.LASF720
 11074 001b 05       		.byte	0x5
 11075 001c 21       		.uleb128 0x21
 11076 001d F18F0000 		.4byte	.LASF721
 11077 0021 05       		.byte	0x5
 11078 0022 25       		.uleb128 0x25
 11079 0023 5A110000 		.4byte	.LASF722
 11080 0027 05       		.byte	0x5
 11081 0028 27       		.uleb128 0x27
 11082 0029 EC950000 		.4byte	.LASF723
 11083 002d 05       		.byte	0x5
 11084 002e 2D       		.uleb128 0x2d
 11085 002f 23030000 		.4byte	.LASF724
 11086 0033 05       		.byte	0x5
 11087 0034 31       		.uleb128 0x31
 11088 0035 476E0000 		.4byte	.LASF725
 11089 0039 05       		.byte	0x5
 11090 003a 33       		.uleb128 0x33
 11091 003b E4350000 		.4byte	.LASF726
 11092 003f 05       		.byte	0x5
 11093 0040 39       		.uleb128 0x39
 11094 0041 84610000 		.4byte	.LASF727
 11095 0045 05       		.byte	0x5
 11096 0046 3D       		.uleb128 0x3d
 11097 0047 27560000 		.4byte	.LASF728
 11098 004b 05       		.byte	0x5
 11099 004c 3F       		.uleb128 0x3f
 11100 004d B8390000 		.4byte	.LASF729
 11101 0051 05       		.byte	0x5
 11102 0052 44       		.uleb128 0x44
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 238


 11103 0053 0A550000 		.4byte	.LASF730
 11104 0057 05       		.byte	0x5
 11105 0058 49       		.uleb128 0x49
 11106 0059 B6690000 		.4byte	.LASF731
 11107 005d 05       		.byte	0x5
 11108 005e 4E       		.uleb128 0x4e
 11109 005f B1160000 		.4byte	.LASF732
 11110 0063 05       		.byte	0x5
 11111 0064 53       		.uleb128 0x53
 11112 0065 466C0000 		.4byte	.LASF733
 11113 0069 00       		.byte	0
 11114              		.section	.debug_macro,"G",%progbits,wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891,comdat
 11115              	.Ldebug_macro20:
 11116 0000 0400     		.2byte	0x4
 11117 0002 00       		.byte	0
 11118 0003 05       		.byte	0x5
 11119 0004 1F       		.uleb128 0x1f
 11120 0005 C34A0000 		.4byte	.LASF735
 11121 0009 05       		.byte	0x5
 11122 000a 20       		.uleb128 0x20
 11123 000b B1900000 		.4byte	.LASF736
 11124 000f 05       		.byte	0x5
 11125 0010 21       		.uleb128 0x21
 11126 0011 7C010000 		.4byte	.LASF737
 11127 0015 05       		.byte	0x5
 11128 0016 26       		.uleb128 0x26
 11129 0017 F5300000 		.4byte	.LASF738
 11130 001b 00       		.byte	0
 11131              		.section	.debug_macro,"G",%progbits,wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb,comdat
 11132              	.Ldebug_macro21:
 11133 0000 0400     		.2byte	0x4
 11134 0002 00       		.byte	0
 11135 0003 05       		.byte	0x5
 11136 0004 09       		.uleb128 0x9
 11137 0005 A15D0000 		.4byte	.LASF739
 11138 0009 05       		.byte	0x5
 11139 000a 0A       		.uleb128 0xa
 11140 000b D3020000 		.4byte	.LASF740
 11141 000f 05       		.byte	0x5
 11142 0010 11       		.uleb128 0x11
 11143 0011 A7600000 		.4byte	.LASF741
 11144 0015 05       		.byte	0x5
 11145 0016 12       		.uleb128 0x12
 11146 0017 831D0000 		.4byte	.LASF742
 11147 001b 05       		.byte	0x5
 11148 001c 13       		.uleb128 0x13
 11149 001d 2C970000 		.4byte	.LASF743
 11150 0021 05       		.byte	0x5
 11151 0022 14       		.uleb128 0x14
 11152 0023 D03A0000 		.4byte	.LASF744
 11153 0027 05       		.byte	0x5
 11154 0028 18       		.uleb128 0x18
 11155 0029 67490000 		.4byte	.LASF745
 11156 002d 05       		.byte	0x5
 11157 002e 19       		.uleb128 0x19
 11158 002f 78320000 		.4byte	.LASF746
 11159 0033 05       		.byte	0x5
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 239


 11160 0034 1A       		.uleb128 0x1a
 11161 0035 B87B0000 		.4byte	.LASF747
 11162 0039 05       		.byte	0x5
 11163 003a 39       		.uleb128 0x39
 11164 003b B4270000 		.4byte	.LASF748
 11165 003f 05       		.byte	0x5
 11166 0040 3A       		.uleb128 0x3a
 11167 0041 10670000 		.4byte	.LASF749
 11168 0045 05       		.byte	0x5
 11169 0046 3B       		.uleb128 0x3b
 11170 0047 97900000 		.4byte	.LASF750
 11171 004b 05       		.byte	0x5
 11172 004c 3C       		.uleb128 0x3c
 11173 004d 28600000 		.4byte	.LASF751
 11174 0051 00       		.byte	0
 11175              		.section	.debug_macro,"G",%progbits,wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6,comdat
 11176              	.Ldebug_macro22:
 11177 0000 0400     		.2byte	0x4
 11178 0002 00       		.byte	0
 11179 0003 05       		.byte	0x5
 11180 0004 1E       		.uleb128 0x1e
 11181 0005 29360000 		.4byte	.LASF754
 11182 0009 05       		.byte	0x5
 11183 000a 24       		.uleb128 0x24
 11184 000b A1770000 		.4byte	.LASF755
 11185 000f 05       		.byte	0x5
 11186 0010 29       		.uleb128 0x29
 11187 0011 09260000 		.4byte	.LASF756
 11188 0015 05       		.byte	0x5
 11189 0016 2A       		.uleb128 0x2a
 11190 0017 00520000 		.4byte	.LASF757
 11191 001b 05       		.byte	0x5
 11192 001c 2F       		.uleb128 0x2f
 11193 001d 75330000 		.4byte	.LASF758
 11194 0021 05       		.byte	0x5
 11195 0022 3C       		.uleb128 0x3c
 11196 0023 944F0000 		.4byte	.LASF759
 11197 0027 05       		.byte	0x5
 11198 0028 3D       		.uleb128 0x3d
 11199 0029 42600000 		.4byte	.LASF760
 11200 002d 05       		.byte	0x5
 11201 002e 3E       		.uleb128 0x3e
 11202 002f 00960000 		.4byte	.LASF761
 11203 0033 05       		.byte	0x5
 11204 0034 42       		.uleb128 0x42
 11205 0035 A5090000 		.4byte	.LASF762
 11206 0039 05       		.byte	0x5
 11207 003a 4B       		.uleb128 0x4b
 11208 003b C9530000 		.4byte	.LASF763
 11209 003f 00       		.byte	0
 11210              		.section	.debug_macro,"G",%progbits,wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1,comdat
 11211              	.Ldebug_macro23:
 11212 0000 0400     		.2byte	0x4
 11213 0002 00       		.byte	0
 11214 0003 05       		.byte	0x5
 11215 0004 29       		.uleb128 0x29
 11216 0005 D66A0000 		.4byte	.LASF766
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 240


 11217 0009 05       		.byte	0x5
 11218 000a 2E       		.uleb128 0x2e
 11219 000b 7F810000 		.4byte	.LASF767
 11220 000f 00       		.byte	0
 11221              		.section	.debug_macro,"G",%progbits,wm4.select.h.30.bbece7fa40993a78092dcc5805132560,comdat
 11222              	.Ldebug_macro24:
 11223 0000 0400     		.2byte	0x4
 11224 0002 00       		.byte	0
 11225 0003 05       		.byte	0x5
 11226 0004 1E       		.uleb128 0x1e
 11227 0005 D10A0000 		.4byte	.LASF768
 11228 0009 05       		.byte	0x5
 11229 000a 22       		.uleb128 0x22
 11230 000b 0E0F0000 		.4byte	.LASF769
 11231 000f 05       		.byte	0x5
 11232 0010 2A       		.uleb128 0x2a
 11233 0011 257E0000 		.4byte	.LASF770
 11234 0015 05       		.byte	0x5
 11235 0016 2E       		.uleb128 0x2e
 11236 0017 2E8A0000 		.4byte	.LASF771
 11237 001b 05       		.byte	0x5
 11238 001c 30       		.uleb128 0x30
 11239 001d 49470000 		.4byte	.LASF772
 11240 0021 05       		.byte	0x5
 11241 0022 39       		.uleb128 0x39
 11242 0023 807B0000 		.4byte	.LASF773
 11243 0027 05       		.byte	0x5
 11244 0028 3B       		.uleb128 0x3b
 11245 0029 DC310000 		.4byte	.LASF774
 11246 002d 05       		.byte	0x5
 11247 002e 3C       		.uleb128 0x3c
 11248 002f A1130000 		.4byte	.LASF775
 11249 0033 05       		.byte	0x5
 11250 0034 3D       		.uleb128 0x3d
 11251 0035 1E0B0000 		.4byte	.LASF776
 11252 0039 05       		.byte	0x5
 11253 003a 3E       		.uleb128 0x3e
 11254 003b 377A0000 		.4byte	.LASF777
 11255 003f 00       		.byte	0
 11256              		.section	.debug_macro,"G",%progbits,wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1,comdat
 11257              	.Ldebug_macro25:
 11258 0000 0400     		.2byte	0x4
 11259 0002 00       		.byte	0
 11260 0003 05       		.byte	0x5
 11261 0004 45       		.uleb128 0x45
 11262 0005 A2570000 		.4byte	.LASF778
 11263 0009 05       		.byte	0x5
 11264 000a 46       		.uleb128 0x46
 11265 000b 2C9C0000 		.4byte	.LASF779
 11266 000f 05       		.byte	0x5
 11267 0010 4A       		.uleb128 0x4a
 11268 0011 7D950000 		.4byte	.LASF780
 11269 0015 05       		.byte	0x5
 11270 0016 4F       		.uleb128 0x4f
 11271 0017 21850000 		.4byte	.LASF781
 11272 001b 05       		.byte	0x5
 11273 001c 58       		.uleb128 0x58
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 241


 11274 001d 73990000 		.4byte	.LASF782
 11275 0021 05       		.byte	0x5
 11276 0022 5C       		.uleb128 0x5c
 11277 0023 A4340000 		.4byte	.LASF783
 11278 0027 05       		.byte	0x5
 11279 0028 60       		.uleb128 0x60
 11280 0029 92200000 		.4byte	.LASF784
 11281 002d 05       		.byte	0x5
 11282 002e 64       		.uleb128 0x64
 11283 002f 989B0000 		.4byte	.LASF785
 11284 0033 05       		.byte	0x5
 11285 0034 66       		.uleb128 0x66
 11286 0035 E5960000 		.4byte	.LASF786
 11287 0039 05       		.byte	0x5
 11288 003a 72       		.uleb128 0x72
 11289 003b 456B0000 		.4byte	.LASF787
 11290 003f 05       		.byte	0x5
 11291 0040 77       		.uleb128 0x77
 11292 0041 53890000 		.4byte	.LASF788
 11293 0045 05       		.byte	0x5
 11294 0046 7C       		.uleb128 0x7c
 11295 0047 55670000 		.4byte	.LASF789
 11296 004b 05       		.byte	0x5
 11297 004c 7D       		.uleb128 0x7d
 11298 004d F64F0000 		.4byte	.LASF790
 11299 0051 05       		.byte	0x5
 11300 0052 8801     		.uleb128 0x88
 11301 0054 5C0C0000 		.4byte	.LASF791
 11302 0058 05       		.byte	0x5
 11303 0059 8C01     		.uleb128 0x8c
 11304 005b 80360000 		.4byte	.LASF792
 11305 005f 05       		.byte	0x5
 11306 0060 9201     		.uleb128 0x92
 11307 0062 BA3A0000 		.4byte	.LASF793
 11308 0066 05       		.byte	0x5
 11309 0067 9701     		.uleb128 0x97
 11310 0069 1E6A0000 		.4byte	.LASF794
 11311 006d 05       		.byte	0x5
 11312 006e 9C01     		.uleb128 0x9c
 11313 0070 3B560000 		.4byte	.LASF795
 11314 0074 05       		.byte	0x5
 11315 0075 AE01     		.uleb128 0xae
 11316 0077 0A0C0000 		.4byte	.LASF796
 11317 007b 05       		.byte	0x5
 11318 007c B201     		.uleb128 0xb2
 11319 007e 74280000 		.4byte	.LASF797
 11320 0082 05       		.byte	0x5
 11321 0083 B601     		.uleb128 0xb6
 11322 0085 B4560000 		.4byte	.LASF798
 11323 0089 05       		.byte	0x5
 11324 008a BA01     		.uleb128 0xba
 11325 008c 4F700000 		.4byte	.LASF799
 11326 0090 05       		.byte	0x5
 11327 0091 BF01     		.uleb128 0xbf
 11328 0093 9D430000 		.4byte	.LASF800
 11329 0097 05       		.byte	0x5
 11330 0098 C401     		.uleb128 0xc4
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 242


 11331 009a 6E110000 		.4byte	.LASF801
 11332 009e 05       		.byte	0x5
 11333 009f C901     		.uleb128 0xc9
 11334 00a1 44750000 		.4byte	.LASF802
 11335 00a5 05       		.byte	0x5
 11336 00a6 CE01     		.uleb128 0xce
 11337 00a8 AE530000 		.4byte	.LASF803
 11338 00ac 05       		.byte	0x5
 11339 00ad D301     		.uleb128 0xd3
 11340 00af 310C0000 		.4byte	.LASF804
 11341 00b3 05       		.byte	0x5
 11342 00b4 D801     		.uleb128 0xd8
 11343 00b6 0C9B0000 		.4byte	.LASF805
 11344 00ba 05       		.byte	0x5
 11345 00bb D901     		.uleb128 0xd9
 11346 00bd 368F0000 		.4byte	.LASF806
 11347 00c1 05       		.byte	0x5
 11348 00c2 DE01     		.uleb128 0xde
 11349 00c4 98440000 		.4byte	.LASF807
 11350 00c8 05       		.byte	0x5
 11351 00c9 DF01     		.uleb128 0xdf
 11352 00cb 5E8B0000 		.4byte	.LASF808
 11353 00cf 05       		.byte	0x5
 11354 00d0 E401     		.uleb128 0xe4
 11355 00d2 46020000 		.4byte	.LASF809
 11356 00d6 00       		.byte	0
 11357              		.section	.debug_macro,"G",%progbits,wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a,comdat
 11358              	.Ldebug_macro26:
 11359 0000 0400     		.2byte	0x4
 11360 0002 00       		.byte	0
 11361 0003 05       		.byte	0x5
 11362 0004 02       		.uleb128 0x2
 11363 0005 31790000 		.4byte	.LASF813
 11364 0009 05       		.byte	0x5
 11365 000a 0D       		.uleb128 0xd
 11366 000b B7970000 		.4byte	.LASF814
 11367 000f 05       		.byte	0x5
 11368 0010 15       		.uleb128 0x15
 11369 0011 1F290000 		.4byte	.LASF815
 11370 0015 00       		.byte	0
 11371              		.section	.debug_macro,"G",%progbits,wm4.stdio.h.81.e75815e468af71def73c328e3aabfd80,comdat
 11372              	.Ldebug_macro27:
 11373 0000 0400     		.2byte	0x4
 11374 0002 00       		.byte	0
 11375 0003 05       		.byte	0x5
 11376 0004 51       		.uleb128 0x51
 11377 0005 32100000 		.4byte	.LASF816
 11378 0009 05       		.byte	0x5
 11379 000a 52       		.uleb128 0x52
 11380 000b 7B650000 		.4byte	.LASF817
 11381 000f 05       		.byte	0x5
 11382 0010 53       		.uleb128 0x53
 11383 0011 C0120000 		.4byte	.LASF818
 11384 0015 05       		.byte	0x5
 11385 0016 54       		.uleb128 0x54
 11386 0017 6D100000 		.4byte	.LASF819
 11387 001b 05       		.byte	0x5
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 243


 11388 001c 56       		.uleb128 0x56
 11389 001d 9D330000 		.4byte	.LASF820
 11390 0021 05       		.byte	0x5
 11391 0022 57       		.uleb128 0x57
 11392 0023 94310000 		.4byte	.LASF821
 11393 0027 05       		.byte	0x5
 11394 0028 58       		.uleb128 0x58
 11395 0029 88500000 		.4byte	.LASF822
 11396 002d 05       		.byte	0x5
 11397 002e 59       		.uleb128 0x59
 11398 002f 8D1C0000 		.4byte	.LASF823
 11399 0033 05       		.byte	0x5
 11400 0034 5A       		.uleb128 0x5a
 11401 0035 42340000 		.4byte	.LASF824
 11402 0039 05       		.byte	0x5
 11403 003a 5B       		.uleb128 0x5b
 11404 003b 45110000 		.4byte	.LASF825
 11405 003f 05       		.byte	0x5
 11406 0040 5C       		.uleb128 0x5c
 11407 0041 AD6B0000 		.4byte	.LASF826
 11408 0045 05       		.byte	0x5
 11409 0046 5D       		.uleb128 0x5d
 11410 0047 AB350000 		.4byte	.LASF827
 11411 004b 05       		.byte	0x5
 11412 004c 5E       		.uleb128 0x5e
 11413 004d AF980000 		.4byte	.LASF828
 11414 0051 05       		.byte	0x5
 11415 0052 5F       		.uleb128 0x5f
 11416 0053 48710000 		.4byte	.LASF829
 11417 0057 05       		.byte	0x5
 11418 0058 63       		.uleb128 0x63
 11419 0059 A2310000 		.4byte	.LASF830
 11420 005d 05       		.byte	0x5
 11421 005e 66       		.uleb128 0x66
 11422 005f C86A0000 		.4byte	.LASF831
 11423 0063 05       		.byte	0x5
 11424 0064 67       		.uleb128 0x67
 11425 0065 D6350000 		.4byte	.LASF832
 11426 0069 05       		.byte	0x5
 11427 006a 72       		.uleb128 0x72
 11428 006b 47000000 		.4byte	.LASF833
 11429 006f 05       		.byte	0x5
 11430 0070 73       		.uleb128 0x73
 11431 0071 D6840000 		.4byte	.LASF834
 11432 0075 05       		.byte	0x5
 11433 0076 74       		.uleb128 0x74
 11434 0077 7C620000 		.4byte	.LASF835
 11435 007b 05       		.byte	0x5
 11436 007c 76       		.uleb128 0x76
 11437 007d C0530000 		.4byte	.LASF836
 11438 0081 05       		.byte	0x5
 11439 0082 7B       		.uleb128 0x7b
 11440 0083 F4840000 		.4byte	.LASF837
 11441 0087 05       		.byte	0x5
 11442 0088 8101     		.uleb128 0x81
 11443 008a FC7B0000 		.4byte	.LASF838
 11444 008e 05       		.byte	0x5
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 244


 11445 008f 8701     		.uleb128 0x87
 11446 0091 CE5B0000 		.4byte	.LASF839
 11447 0095 05       		.byte	0x5
 11448 0096 8D01     		.uleb128 0x8d
 11449 0098 3E660000 		.4byte	.LASF840
 11450 009c 05       		.byte	0x5
 11451 009d 9101     		.uleb128 0x91
 11452 009f 144E0000 		.4byte	.LASF841
 11453 00a3 05       		.byte	0x5
 11454 00a4 9501     		.uleb128 0x95
 11455 00a6 18030000 		.4byte	.LASF842
 11456 00aa 05       		.byte	0x5
 11457 00ab 9801     		.uleb128 0x98
 11458 00ad D21F0000 		.4byte	.LASF843
 11459 00b1 05       		.byte	0x5
 11460 00b2 9B01     		.uleb128 0x9b
 11461 00b4 C46B0000 		.4byte	.LASF844
 11462 00b8 05       		.byte	0x5
 11463 00b9 9E01     		.uleb128 0x9e
 11464 00bb 29570000 		.4byte	.LASF845
 11465 00bf 05       		.byte	0x5
 11466 00c0 A001     		.uleb128 0xa0
 11467 00c2 62130000 		.4byte	.LASF846
 11468 00c6 05       		.byte	0x5
 11469 00c7 A101     		.uleb128 0xa1
 11470 00c9 D8770000 		.4byte	.LASF847
 11471 00cd 05       		.byte	0x5
 11472 00ce A201     		.uleb128 0xa2
 11473 00d0 AD0E0000 		.4byte	.LASF848
 11474 00d4 05       		.byte	0x5
 11475 00d5 A401     		.uleb128 0xa4
 11476 00d7 6F8E0000 		.4byte	.LASF849
 11477 00db 05       		.byte	0x5
 11478 00dc A501     		.uleb128 0xa5
 11479 00de 535F0000 		.4byte	.LASF850
 11480 00e2 05       		.byte	0x5
 11481 00e3 A601     		.uleb128 0xa6
 11482 00e5 1D230000 		.4byte	.LASF851
 11483 00e9 05       		.byte	0x5
 11484 00ea AE01     		.uleb128 0xae
 11485 00ec E46C0000 		.4byte	.LASF852
 11486 00f0 05       		.byte	0x5
 11487 00f1 E604     		.uleb128 0x266
 11488 00f3 87060000 		.4byte	.LASF853
 11489 00f7 05       		.byte	0x5
 11490 00f8 E804     		.uleb128 0x268
 11491 00fa 413E0000 		.4byte	.LASF854
 11492 00fe 05       		.byte	0x5
 11493 00ff 8B05     		.uleb128 0x28b
 11494 0101 1B280000 		.4byte	.LASF855
 11495 0105 05       		.byte	0x5
 11496 0106 A805     		.uleb128 0x2a8
 11497 0108 C6030000 		.4byte	.LASF856
 11498 010c 05       		.byte	0x5
 11499 010d CC05     		.uleb128 0x2cc
 11500 010f 64530000 		.4byte	.LASF857
 11501 0113 05       		.byte	0x5
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 245


 11502 0114 CD05     		.uleb128 0x2cd
 11503 0116 9C820000 		.4byte	.LASF858
 11504 011a 05       		.byte	0x5
 11505 011b CE05     		.uleb128 0x2ce
 11506 011d 96230000 		.4byte	.LASF859
 11507 0121 05       		.byte	0x5
 11508 0122 CF05     		.uleb128 0x2cf
 11509 0124 03100000 		.4byte	.LASF860
 11510 0128 05       		.byte	0x5
 11511 0129 E305     		.uleb128 0x2e3
 11512 012b 10650000 		.4byte	.LASF861
 11513 012f 05       		.byte	0x5
 11514 0130 E405     		.uleb128 0x2e4
 11515 0132 86290000 		.4byte	.LASF862
 11516 0136 05       		.byte	0x5
 11517 0137 EA05     		.uleb128 0x2ea
 11518 0139 833C0000 		.4byte	.LASF863
 11519 013d 05       		.byte	0x5
 11520 013e F205     		.uleb128 0x2f2
 11521 0140 7F6D0000 		.4byte	.LASF864
 11522 0144 05       		.byte	0x5
 11523 0145 F705     		.uleb128 0x2f7
 11524 0147 CD240000 		.4byte	.LASF865
 11525 014b 05       		.byte	0x5
 11526 014c F805     		.uleb128 0x2f8
 11527 014e F51A0000 		.4byte	.LASF866
 11528 0152 05       		.byte	0x5
 11529 0153 FB05     		.uleb128 0x2fb
 11530 0155 70300000 		.4byte	.LASF867
 11531 0159 05       		.byte	0x5
 11532 015a FC05     		.uleb128 0x2fc
 11533 015c 29150000 		.4byte	.LASF868
 11534 0160 00       		.byte	0
 11535              		.section	.debug_macro,"G",%progbits,wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2,comdat
 11536              	.Ldebug_macro28:
 11537 0000 0400     		.2byte	0x4
 11538 0002 00       		.byte	0
 11539 0003 05       		.byte	0x5
 11540 0004 0D       		.uleb128 0xd
 11541 0005 572E0000 		.4byte	.LASF437
 11542 0009 05       		.byte	0x5
 11543 000a 0E       		.uleb128 0xe
 11544 000b 25210000 		.4byte	.LASF870
 11545 000f 05       		.byte	0x5
 11546 0010 0F       		.uleb128 0xf
 11547 0011 5F450000 		.4byte	.LASF438
 11548 0015 00       		.byte	0
 11549              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.161.19e15733342b50ead2919490b095303e,comdat
 11550              	.Ldebug_macro29:
 11551 0000 0400     		.2byte	0x4
 11552 0002 00       		.byte	0
 11553 0003 06       		.byte	0x6
 11554 0004 A101     		.uleb128 0xa1
 11555 0006 3E130000 		.4byte	.LASF606
 11556 000a 06       		.byte	0x6
 11557 000b EE01     		.uleb128 0xee
 11558 000d 124D0000 		.4byte	.LASF470
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 246


 11559 0011 06       		.byte	0x6
 11560 0012 DB02     		.uleb128 0x15b
 11561 0014 FF0E0000 		.4byte	.LASF623
 11562 0018 06       		.byte	0x6
 11563 0019 9103     		.uleb128 0x191
 11564 001b AD3F0000 		.4byte	.LASF471
 11565 001f 05       		.byte	0x5
 11566 0020 9603     		.uleb128 0x196
 11567 0022 5B3C0000 		.4byte	.LASF472
 11568 0026 06       		.byte	0x6
 11569 0027 9C03     		.uleb128 0x19c
 11570 0029 F94D0000 		.4byte	.LASF473
 11571 002d 05       		.byte	0x5
 11572 002e A103     		.uleb128 0x1a1
 11573 0030 FE450000 		.4byte	.LASF624
 11574 0034 00       		.byte	0
 11575              		.section	.debug_macro,"G",%progbits,wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d,comdat
 11576              	.Ldebug_macro30:
 11577 0000 0400     		.2byte	0x4
 11578 0002 00       		.byte	0
 11579 0003 05       		.byte	0x5
 11580 0004 08       		.uleb128 0x8
 11581 0005 FE360000 		.4byte	.LASF872
 11582 0009 06       		.byte	0x6
 11583 000a 0D       		.uleb128 0xd
 11584 000b A25A0000 		.4byte	.LASF873
 11585 000f 05       		.byte	0x5
 11586 0010 10       		.uleb128 0x10
 11587 0011 11700000 		.4byte	.LASF874
 11588 0015 00       		.byte	0
 11589              		.section	.debug_macro,"G",%progbits,wm4.stdlib.h.56.f7bb76d8eb43fb7e79a949819dbf4bda,comdat
 11590              	.Ldebug_macro31:
 11591 0000 0400     		.2byte	0x4
 11592 0002 00       		.byte	0
 11593 0003 05       		.byte	0x5
 11594 0004 38       		.uleb128 0x38
 11595 0005 E8000000 		.4byte	.LASF875
 11596 0009 05       		.byte	0x5
 11597 000a 3C       		.uleb128 0x3c
 11598 000b C0960000 		.4byte	.LASF876
 11599 000f 05       		.byte	0x5
 11600 0010 3D       		.uleb128 0x3d
 11601 0011 2B220000 		.4byte	.LASF877
 11602 0015 05       		.byte	0x5
 11603 0016 3F       		.uleb128 0x3f
 11604 0017 49480000 		.4byte	.LASF878
 11605 001b 05       		.byte	0x5
 11606 001c 43       		.uleb128 0x43
 11607 001d 14500000 		.4byte	.LASF879
 11608 0021 05       		.byte	0x5
 11609 0022 A301     		.uleb128 0xa3
 11610 0024 44890000 		.4byte	.LASF880
 11611 0028 00       		.byte	0
 11612              		.section	.debug_macro,"G",%progbits,wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd,comdat
 11613              	.Ldebug_macro32:
 11614 0000 0400     		.2byte	0x4
 11615 0002 00       		.byte	0
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 247


 11616 0003 05       		.byte	0x5
 11617 0004 08       		.uleb128 0x8
 11618 0005 377C0000 		.4byte	.LASF881
 11619 0009 05       		.byte	0x5
 11620 000a 0F       		.uleb128 0xf
 11621 000b 572E0000 		.4byte	.LASF437
 11622 000f 05       		.byte	0x5
 11623 0010 10       		.uleb128 0x10
 11624 0011 5F450000 		.4byte	.LASF438
 11625 0015 00       		.byte	0
 11626              		.section	.debug_macro,"G",%progbits,wm4.projdefs.h.55.cdae9ead80b5a2ac004f41bb277aad45,comdat
 11627              	.Ldebug_macro33:
 11628 0000 0400     		.2byte	0x4
 11629 0002 00       		.byte	0
 11630 0003 05       		.byte	0x5
 11631 0004 37       		.uleb128 0x37
 11632 0005 F63B0000 		.4byte	.LASF885
 11633 0009 05       		.byte	0x5
 11634 000a 3C       		.uleb128 0x3c
 11635 000b FD3D0000 		.4byte	.LASF886
 11636 000f 05       		.byte	0x5
 11637 0010 3D       		.uleb128 0x3d
 11638 0011 D9880000 		.4byte	.LASF887
 11639 0015 05       		.byte	0x5
 11640 0016 3F       		.uleb128 0x3f
 11641 0017 94130000 		.4byte	.LASF888
 11642 001b 05       		.byte	0x5
 11643 001c 40       		.uleb128 0x40
 11644 001d 2D040000 		.4byte	.LASF889
 11645 0021 05       		.byte	0x5
 11646 0022 41       		.uleb128 0x41
 11647 0023 6B470000 		.4byte	.LASF890
 11648 0027 05       		.byte	0x5
 11649 0028 42       		.uleb128 0x42
 11650 0029 BE1F0000 		.4byte	.LASF891
 11651 002d 05       		.byte	0x5
 11652 002e 45       		.uleb128 0x45
 11653 002f B9380000 		.4byte	.LASF892
 11654 0033 05       		.byte	0x5
 11655 0034 46       		.uleb128 0x46
 11656 0035 70150000 		.4byte	.LASF893
 11657 0039 05       		.byte	0x5
 11658 003a 47       		.uleb128 0x47
 11659 003b 909A0000 		.4byte	.LASF894
 11660 003f 05       		.byte	0x5
 11661 0040 48       		.uleb128 0x48
 11662 0041 502F0000 		.4byte	.LASF895
 11663 0045 00       		.byte	0
 11664              		.section	.debug_macro,"G",%progbits,wm4.FreeRTOSConfig.h.51.1615eb25212d1832577eeb164f44c1ff,comda
 11665              	.Ldebug_macro34:
 11666 0000 0400     		.2byte	0x4
 11667 0002 00       		.byte	0
 11668 0003 05       		.byte	0x5
 11669 0004 33       		.uleb128 0x33
 11670 0005 28370000 		.4byte	.LASF896
 11671 0009 05       		.byte	0x5
 11672 000a 40       		.uleb128 0x40
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 248


 11673 000b 16390000 		.4byte	.LASF897
 11674 000f 05       		.byte	0x5
 11675 0010 41       		.uleb128 0x41
 11676 0011 5F390000 		.4byte	.LASF898
 11677 0015 05       		.byte	0x5
 11678 0016 42       		.uleb128 0x42
 11679 0017 B5880000 		.4byte	.LASF899
 11680 001b 05       		.byte	0x5
 11681 001c 44       		.uleb128 0x44
 11682 001d 283B0000 		.4byte	.LASF900
 11683 0021 05       		.byte	0x5
 11684 0022 45       		.uleb128 0x45
 11685 0023 910A0000 		.4byte	.LASF901
 11686 0027 05       		.byte	0x5
 11687 0028 46       		.uleb128 0x46
 11688 0029 4C560000 		.4byte	.LASF902
 11689 002d 05       		.byte	0x5
 11690 002e 47       		.uleb128 0x47
 11691 002f E7220000 		.4byte	.LASF903
 11692 0033 05       		.byte	0x5
 11693 0034 48       		.uleb128 0x48
 11694 0035 8A6A0000 		.4byte	.LASF904
 11695 0039 05       		.byte	0x5
 11696 003a 49       		.uleb128 0x49
 11697 003b 265C0000 		.4byte	.LASF905
 11698 003f 05       		.byte	0x5
 11699 0040 4A       		.uleb128 0x4a
 11700 0041 823A0000 		.4byte	.LASF906
 11701 0045 05       		.byte	0x5
 11702 0046 4B       		.uleb128 0x4b
 11703 0047 384D0000 		.4byte	.LASF907
 11704 004b 05       		.byte	0x5
 11705 004c 4C       		.uleb128 0x4c
 11706 004d 8F700000 		.4byte	.LASF908
 11707 0051 05       		.byte	0x5
 11708 0052 4D       		.uleb128 0x4d
 11709 0053 6A310000 		.4byte	.LASF909
 11710 0057 05       		.byte	0x5
 11711 0058 4E       		.uleb128 0x4e
 11712 0059 AA2D0000 		.4byte	.LASF910
 11713 005d 05       		.byte	0x5
 11714 005e 4F       		.uleb128 0x4f
 11715 005f E96F0000 		.4byte	.LASF911
 11716 0063 05       		.byte	0x5
 11717 0064 50       		.uleb128 0x50
 11718 0065 75220000 		.4byte	.LASF912
 11719 0069 05       		.byte	0x5
 11720 006a 51       		.uleb128 0x51
 11721 006b 8E980000 		.4byte	.LASF913
 11722 006f 05       		.byte	0x5
 11723 0070 52       		.uleb128 0x52
 11724 0071 5D480000 		.4byte	.LASF914
 11725 0075 05       		.byte	0x5
 11726 0076 53       		.uleb128 0x53
 11727 0077 18640000 		.4byte	.LASF915
 11728 007b 05       		.byte	0x5
 11729 007c 54       		.uleb128 0x54
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 249


 11730 007d 945E0000 		.4byte	.LASF916
 11731 0081 05       		.byte	0x5
 11732 0082 55       		.uleb128 0x55
 11733 0083 205E0000 		.4byte	.LASF917
 11734 0087 05       		.byte	0x5
 11735 0088 5A       		.uleb128 0x5a
 11736 0089 5A610000 		.4byte	.LASF918
 11737 008d 05       		.byte	0x5
 11738 008e 5B       		.uleb128 0x5b
 11739 008f 9C1E0000 		.4byte	.LASF919
 11740 0093 05       		.byte	0x5
 11741 0094 5C       		.uleb128 0x5c
 11742 0095 EF990000 		.4byte	.LASF920
 11743 0099 05       		.byte	0x5
 11744 009a 5D       		.uleb128 0x5d
 11745 009b B8770000 		.4byte	.LASF921
 11746 009f 05       		.byte	0x5
 11747 00a0 5E       		.uleb128 0x5e
 11748 00a1 70060000 		.4byte	.LASF922
 11749 00a5 05       		.byte	0x5
 11750 00a6 5F       		.uleb128 0x5f
 11751 00a7 FF1F0000 		.4byte	.LASF923
 11752 00ab 05       		.byte	0x5
 11753 00ac 60       		.uleb128 0x60
 11754 00ad A1450000 		.4byte	.LASF924
 11755 00b1 05       		.byte	0x5
 11756 00b2 61       		.uleb128 0x61
 11757 00b3 854E0000 		.4byte	.LASF925
 11758 00b7 05       		.byte	0x5
 11759 00b8 65       		.uleb128 0x65
 11760 00b9 67380000 		.4byte	.LASF926
 11761 00bd 05       		.byte	0x5
 11762 00be 66       		.uleb128 0x66
 11763 00bf B7670000 		.4byte	.LASF927
 11764 00c3 05       		.byte	0x5
 11765 00c4 6C       		.uleb128 0x6c
 11766 00c5 019C0000 		.4byte	.LASF928
 11767 00c9 05       		.byte	0x5
 11768 00ca 6D       		.uleb128 0x6d
 11769 00cb 600E0000 		.4byte	.LASF929
 11770 00cf 05       		.byte	0x5
 11771 00d0 6E       		.uleb128 0x6e
 11772 00d1 B23F0000 		.4byte	.LASF930
 11773 00d5 00       		.byte	0
 11774              		.section	.debug_macro,"G",%progbits,wm4.portmacro.h.56.a47bdd86bc36d334ca6056492e2d709f,comdat
 11775              	.Ldebug_macro35:
 11776 0000 0400     		.2byte	0x4
 11777 0002 00       		.byte	0
 11778 0003 05       		.byte	0x5
 11779 0004 38       		.uleb128 0x38
 11780 0005 96500000 		.4byte	.LASF932
 11781 0009 05       		.byte	0x5
 11782 000a 49       		.uleb128 0x49
 11783 000b 08570000 		.4byte	.LASF933
 11784 000f 05       		.byte	0x5
 11785 0010 4A       		.uleb128 0x4a
 11786 0011 EE750000 		.4byte	.LASF934
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 250


 11787 0015 05       		.byte	0x5
 11788 0016 4B       		.uleb128 0x4b
 11789 0017 A91B0000 		.4byte	.LASF935
 11790 001b 05       		.byte	0x5
 11791 001c 4C       		.uleb128 0x4c
 11792 001d AA750000 		.4byte	.LASF936
 11793 0021 05       		.byte	0x5
 11794 0022 4D       		.uleb128 0x4d
 11795 0023 FF240000 		.4byte	.LASF937
 11796 0027 05       		.byte	0x5
 11797 0028 4E       		.uleb128 0x4e
 11798 0029 E5830000 		.4byte	.LASF938
 11799 002d 05       		.byte	0x5
 11800 002e 4F       		.uleb128 0x4f
 11801 002f 9E4D0000 		.4byte	.LASF939
 11802 0033 05       		.byte	0x5
 11803 0034 56       		.uleb128 0x56
 11804 0035 EB3C0000 		.4byte	.LASF940
 11805 0039 05       		.byte	0x5
 11806 003a 5B       		.uleb128 0x5b
 11807 003b B8460000 		.4byte	.LASF941
 11808 003f 05       		.byte	0x5
 11809 0040 5C       		.uleb128 0x5c
 11810 0041 72550000 		.4byte	.LASF942
 11811 0045 05       		.byte	0x5
 11812 0046 5D       		.uleb128 0x5d
 11813 0047 718B0000 		.4byte	.LASF943
 11814 004b 05       		.byte	0x5
 11815 004c 64       		.uleb128 0x64
 11816 004d 3E8B0000 		.4byte	.LASF944
 11817 0051 05       		.byte	0x5
 11818 0052 66       		.uleb128 0x66
 11819 0053 B25D0000 		.4byte	.LASF945
 11820 0057 05       		.byte	0x5
 11821 0058 70       		.uleb128 0x70
 11822 0059 7E710000 		.4byte	.LASF946
 11823 005d 05       		.byte	0x5
 11824 005e 7C       		.uleb128 0x7c
 11825 005f 25350000 		.4byte	.LASF947
 11826 0063 05       		.byte	0x5
 11827 0064 8401     		.uleb128 0x84
 11828 0066 F0100000 		.4byte	.LASF948
 11829 006a 05       		.byte	0x5
 11830 006b 8501     		.uleb128 0x85
 11831 006d B6360000 		.4byte	.LASF949
 11832 0071 05       		.byte	0x5
 11833 0072 8B01     		.uleb128 0x8b
 11834 0074 EE6E0000 		.4byte	.LASF950
 11835 0078 05       		.byte	0x5
 11836 0079 8C01     		.uleb128 0x8c
 11837 007b 81560000 		.4byte	.LASF951
 11838 007f 05       		.byte	0x5
 11839 0080 8D01     		.uleb128 0x8d
 11840 0082 5C3F0000 		.4byte	.LASF952
 11841 0086 05       		.byte	0x5
 11842 0087 8E01     		.uleb128 0x8e
 11843 0089 7D420000 		.4byte	.LASF953
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 251


 11844 008d 05       		.byte	0x5
 11845 008e 9201     		.uleb128 0x92
 11846 0090 B2550000 		.4byte	.LASF954
 11847 0094 05       		.byte	0x5
 11848 0095 9301     		.uleb128 0x93
 11849 0097 0F250000 		.4byte	.LASF955
 11850 009b 05       		.byte	0x5
 11851 009c 9501     		.uleb128 0x95
 11852 009e 718A0000 		.4byte	.LASF956
 11853 00a2 00       		.byte	0
 11854              		.section	.debug_macro,"G",%progbits,wm4.portable.h.311.02653c2286cc0addcb8e7b32211fdde5,comdat
 11855              	.Ldebug_macro36:
 11856 0000 0400     		.2byte	0x4
 11857 0002 00       		.byte	0
 11858 0003 05       		.byte	0x5
 11859 0004 B702     		.uleb128 0x137
 11860 0006 FC010000 		.4byte	.LASF957
 11861 000a 05       		.byte	0x5
 11862 000b CB02     		.uleb128 0x14b
 11863 000d 282E0000 		.4byte	.LASF958
 11864 0011 00       		.byte	0
 11865              		.section	.debug_macro,"G",%progbits,wm4.mpu_wrappers.h.55.46a4a008a193040c38098e9a5f07ff9d,comdat
 11866              	.Ldebug_macro37:
 11867 0000 0400     		.2byte	0x4
 11868 0002 00       		.byte	0
 11869 0003 05       		.byte	0x5
 11870 0004 37       		.uleb128 0x37
 11871 0005 3A040000 		.4byte	.LASF959
 11872 0009 05       		.byte	0x5
 11873 000a 7F       		.uleb128 0x7f
 11874 000b E26B0000 		.4byte	.LASF960
 11875 000f 05       		.byte	0x5
 11876 0010 8001     		.uleb128 0x80
 11877 0012 56200000 		.4byte	.LASF961
 11878 0016 05       		.byte	0x5
 11879 0017 8101     		.uleb128 0x81
 11880 0019 4C620000 		.4byte	.LASF962
 11881 001d 00       		.byte	0
 11882              		.section	.debug_macro,"G",%progbits,wm4.FreeRTOS.h.136.8d26691f6e0e832140922099f6373851,comdat
 11883              	.Ldebug_macro38:
 11884 0000 0400     		.2byte	0x4
 11885 0002 00       		.byte	0
 11886 0003 05       		.byte	0x5
 11887 0004 8801     		.uleb128 0x88
 11888 0006 00850000 		.4byte	.LASF963
 11889 000a 05       		.byte	0x5
 11890 000b 9801     		.uleb128 0x98
 11891 000d 7F1B0000 		.4byte	.LASF964
 11892 0011 05       		.byte	0x5
 11893 0012 9C01     		.uleb128 0x9c
 11894 0014 4C030000 		.4byte	.LASF965
 11895 0018 05       		.byte	0x5
 11896 0019 A001     		.uleb128 0xa0
 11897 001b 4F690000 		.4byte	.LASF966
 11898 001f 05       		.byte	0x5
 11899 0020 B101     		.uleb128 0xb1
 11900 0022 021A0000 		.4byte	.LASF967
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 252


 11901 0026 05       		.byte	0x5
 11902 0027 B501     		.uleb128 0xb5
 11903 0029 47120000 		.4byte	.LASF968
 11904 002d 06       		.byte	0x6
 11905 002e BB01     		.uleb128 0xbb
 11906 0030 A28B0000 		.4byte	.LASF969
 11907 0034 05       		.byte	0x5
 11908 0035 BC01     		.uleb128 0xbc
 11909 0037 AC680000 		.4byte	.LASF970
 11910 003b 05       		.byte	0x5
 11911 003c CE01     		.uleb128 0xce
 11912 003e BD430000 		.4byte	.LASF971
 11913 0042 05       		.byte	0x5
 11914 0043 D201     		.uleb128 0xd2
 11915 0045 BD430000 		.4byte	.LASF971
 11916 0049 05       		.byte	0x5
 11917 004a D301     		.uleb128 0xd3
 11918 004c 02820000 		.4byte	.LASF972
 11919 0050 05       		.byte	0x5
 11920 0051 D401     		.uleb128 0xd4
 11921 0053 F71C0000 		.4byte	.LASF973
 11922 0057 05       		.byte	0x5
 11923 0058 DC01     		.uleb128 0xdc
 11924 005a 6D090000 		.4byte	.LASF974
 11925 005e 05       		.byte	0x5
 11926 005f E201     		.uleb128 0xe2
 11927 0061 25790000 		.4byte	.LASF975
 11928 0065 05       		.byte	0x5
 11929 0066 E801     		.uleb128 0xe8
 11930 0068 63010000 		.4byte	.LASF976
 11931 006c 05       		.byte	0x5
 11932 006d EE01     		.uleb128 0xee
 11933 006f A2580000 		.4byte	.LASF977
 11934 0073 05       		.byte	0x5
 11935 0074 F601     		.uleb128 0xf6
 11936 0076 185F0000 		.4byte	.LASF978
 11937 007a 05       		.byte	0x5
 11938 007b FE01     		.uleb128 0xfe
 11939 007d 4B400000 		.4byte	.LASF979
 11940 0081 05       		.byte	0x5
 11941 0082 8802     		.uleb128 0x108
 11942 0084 D6250000 		.4byte	.LASF980
 11943 0088 05       		.byte	0x5
 11944 0089 8C02     		.uleb128 0x10c
 11945 008b A74A0000 		.4byte	.LASF981
 11946 008f 05       		.byte	0x5
 11947 0090 9002     		.uleb128 0x110
 11948 0092 0E580000 		.4byte	.LASF982
 11949 0096 05       		.byte	0x5
 11950 0097 9402     		.uleb128 0x114
 11951 0099 B50A0000 		.4byte	.LASF983
 11952 009d 05       		.byte	0x5
 11953 009e 9802     		.uleb128 0x118
 11954 00a0 90270000 		.4byte	.LASF984
 11955 00a4 05       		.byte	0x5
 11956 00a5 9C02     		.uleb128 0x11c
 11957 00a7 FB5B0000 		.4byte	.LASF985
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 253


 11958 00ab 05       		.byte	0x5
 11959 00ac A002     		.uleb128 0x120
 11960 00ae 5E250000 		.4byte	.LASF986
 11961 00b2 05       		.byte	0x5
 11962 00b3 A402     		.uleb128 0x124
 11963 00b5 67200000 		.4byte	.LASF987
 11964 00b9 05       		.byte	0x5
 11965 00ba A802     		.uleb128 0x128
 11966 00bc 7C720000 		.4byte	.LASF988
 11967 00c0 05       		.byte	0x5
 11968 00c1 AC02     		.uleb128 0x12c
 11969 00c3 73410000 		.4byte	.LASF989
 11970 00c7 05       		.byte	0x5
 11971 00c8 B002     		.uleb128 0x130
 11972 00ca A92E0000 		.4byte	.LASF990
 11973 00ce 05       		.byte	0x5
 11974 00cf B402     		.uleb128 0x134
 11975 00d1 FF390000 		.4byte	.LASF991
 11976 00d5 05       		.byte	0x5
 11977 00d6 B802     		.uleb128 0x138
 11978 00d8 61710000 		.4byte	.LASF992
 11979 00dc 05       		.byte	0x5
 11980 00dd BC02     		.uleb128 0x13c
 11981 00df 97160000 		.4byte	.LASF993
 11982 00e3 05       		.byte	0x5
 11983 00e4 C002     		.uleb128 0x140
 11984 00e6 C0650000 		.4byte	.LASF994
 11985 00ea 05       		.byte	0x5
 11986 00eb C402     		.uleb128 0x144
 11987 00ed 61780000 		.4byte	.LASF995
 11988 00f1 05       		.byte	0x5
 11989 00f2 C802     		.uleb128 0x148
 11990 00f4 B19A0000 		.4byte	.LASF996
 11991 00f8 05       		.byte	0x5
 11992 00f9 CC02     		.uleb128 0x14c
 11993 00fb E85E0000 		.4byte	.LASF997
 11994 00ff 05       		.byte	0x5
 11995 0100 D002     		.uleb128 0x150
 11996 0102 4F510000 		.4byte	.LASF998
 11997 0106 05       		.byte	0x5
 11998 0107 D402     		.uleb128 0x154
 11999 0109 AE410000 		.4byte	.LASF999
 12000 010d 05       		.byte	0x5
 12001 010e D802     		.uleb128 0x158
 12002 0110 4E5E0000 		.4byte	.LASF1000
 12003 0114 05       		.byte	0x5
 12004 0115 DC02     		.uleb128 0x15c
 12005 0117 B6450000 		.4byte	.LASF1001
 12006 011b 05       		.byte	0x5
 12007 011c E002     		.uleb128 0x160
 12008 011e 845C0000 		.4byte	.LASF1002
 12009 0122 05       		.byte	0x5
 12010 0123 E402     		.uleb128 0x164
 12011 0125 71400000 		.4byte	.LASF1003
 12012 0129 05       		.byte	0x5
 12013 012a E802     		.uleb128 0x168
 12014 012c 8D050000 		.4byte	.LASF1004
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 254


 12015 0130 05       		.byte	0x5
 12016 0131 EC02     		.uleb128 0x16c
 12017 0133 097C0000 		.4byte	.LASF1005
 12018 0137 05       		.byte	0x5
 12019 0138 F002     		.uleb128 0x170
 12020 013a 9C220000 		.4byte	.LASF1006
 12021 013e 05       		.byte	0x5
 12022 013f F402     		.uleb128 0x174
 12023 0141 89350000 		.4byte	.LASF1007
 12024 0145 05       		.byte	0x5
 12025 0146 F802     		.uleb128 0x178
 12026 0148 5C980000 		.4byte	.LASF1008
 12027 014c 05       		.byte	0x5
 12028 014d FC02     		.uleb128 0x17c
 12029 014f 4D0F0000 		.4byte	.LASF1009
 12030 0153 05       		.byte	0x5
 12031 0154 9603     		.uleb128 0x196
 12032 0156 C62F0000 		.4byte	.LASF1010
 12033 015a 05       		.byte	0x5
 12034 015b 9A03     		.uleb128 0x19a
 12035 015d DA660000 		.4byte	.LASF1011
 12036 0161 05       		.byte	0x5
 12037 0162 9E03     		.uleb128 0x19e
 12038 0164 8D110000 		.4byte	.LASF1012
 12039 0168 05       		.byte	0x5
 12040 0169 A203     		.uleb128 0x1a2
 12041 016b ED080000 		.4byte	.LASF1013
 12042 016f 05       		.byte	0x5
 12043 0170 A603     		.uleb128 0x1a6
 12044 0172 3C4B0000 		.4byte	.LASF1014
 12045 0176 00       		.byte	0
 12046              		.section	.debug_macro,"G",%progbits,wm4.list.h.90.ffdb657f66139f74e2982d5a33457923,comdat
 12047              	.Ldebug_macro39:
 12048 0000 0400     		.2byte	0x4
 12049 0002 00       		.byte	0
 12050 0003 05       		.byte	0x5
 12051 0004 5A       		.uleb128 0x5a
 12052 0005 A64C0000 		.4byte	.LASF1016
 12053 0009 05       		.byte	0x5
 12054 000a 8501     		.uleb128 0x85
 12055 000c B7340000 		.4byte	.LASF1017
 12056 0010 05       		.byte	0x5
 12057 0011 8E01     		.uleb128 0x8e
 12058 0013 AA330000 		.4byte	.LASF1018
 12059 0017 05       		.byte	0x5
 12060 0018 9801     		.uleb128 0x98
 12061 001a C37C0000 		.4byte	.LASF1019
 12062 001e 05       		.byte	0x5
 12063 001f A101     		.uleb128 0xa1
 12064 0021 633B0000 		.4byte	.LASF1020
 12065 0025 05       		.byte	0x5
 12066 0026 A601     		.uleb128 0xa6
 12067 0028 E7880000 		.4byte	.LASF1021
 12068 002c 05       		.byte	0x5
 12069 002d BB01     		.uleb128 0xbb
 12070 002f 33800000 		.4byte	.LASF1022
 12071 0033 05       		.byte	0x5
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 255


 12072 0034 D901     		.uleb128 0xd9
 12073 0036 7D140000 		.4byte	.LASF1023
 12074 003a 05       		.byte	0x5
 12075 003b E501     		.uleb128 0xe5
 12076 003d C07F0000 		.4byte	.LASF1024
 12077 0041 00       		.byte	0
 12078              		.section	.debug_macro,"G",%progbits,wm4.task.h.75.c8b0094d5cf47472764418dc8b9bb7f5,comdat
 12079              	.Ldebug_macro40:
 12080 0000 0400     		.2byte	0x4
 12081 0002 00       		.byte	0
 12082 0003 05       		.byte	0x5
 12083 0004 4B       		.uleb128 0x4b
 12084 0005 0A4F0000 		.4byte	.LASF1025
 12085 0009 05       		.byte	0x5
 12086 000a 7F       		.uleb128 0x7f
 12087 000b 522A0000 		.4byte	.LASF1026
 12088 000f 05       		.byte	0x5
 12089 0010 8901     		.uleb128 0x89
 12090 0012 87370000 		.4byte	.LASF1027
 12091 0016 05       		.byte	0x5
 12092 0017 9701     		.uleb128 0x97
 12093 0019 FF1D0000 		.4byte	.LASF1028
 12094 001d 05       		.byte	0x5
 12095 001e A501     		.uleb128 0xa5
 12096 0020 89850000 		.4byte	.LASF1029
 12097 0024 05       		.byte	0x5
 12098 0025 AF01     		.uleb128 0xaf
 12099 0027 34570000 		.4byte	.LASF1030
 12100 002b 05       		.byte	0x5
 12101 002c B901     		.uleb128 0xb9
 12102 002e B58E0000 		.4byte	.LASF1031
 12103 0032 05       		.byte	0x5
 12104 0033 BC01     		.uleb128 0xbc
 12105 0035 711C0000 		.4byte	.LASF1032
 12106 0039 05       		.byte	0x5
 12107 003a BD01     		.uleb128 0xbd
 12108 003c 07970000 		.4byte	.LASF1033
 12109 0040 05       		.byte	0x5
 12110 0041 BE01     		.uleb128 0xbe
 12111 0043 94470000 		.4byte	.LASF1034
 12112 0047 05       		.byte	0x5
 12113 0048 9002     		.uleb128 0x110
 12114 004a 562B0000 		.4byte	.LASF1035
 12115 004e 05       		.byte	0x5
 12116 004f D502     		.uleb128 0x155
 12117 0051 3C760000 		.4byte	.LASF1036
 12118 0055 00       		.byte	0
 12119              		.section	.debug_macro,"G",%progbits,wm4.StackMacros.h.55.da408fad06dd47eba8bbdebfb89bc412,comdat
 12120              	.Ldebug_macro41:
 12121 0000 0400     		.2byte	0x4
 12122 0002 00       		.byte	0
 12123 0003 05       		.byte	0x5
 12124 0004 37       		.uleb128 0x37
 12125 0005 20430000 		.4byte	.LASF1037
 12126 0009 05       		.byte	0x5
 12127 000a 5E       		.uleb128 0x5e
 12128 000b E6720000 		.4byte	.LASF1038
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 256


 12129 000f 05       		.byte	0x5
 12130 0010 7F       		.uleb128 0x7f
 12131 0011 E1160000 		.4byte	.LASF1039
 12132 0015 00       		.byte	0
 12133              		.section	.debug_line,"",%progbits
 12134              	.Ldebug_line0:
 12135 0000 7D0A0000 		.section	.debug_str,"MS",%progbits,1
 12135      0200B203 
 12135      00000201 
 12135      FB0E0D00 
 12135      01010101 
 12136              	.LASF1201:
 12137 0000 784D656D 		.ascii	"xMemoryRegion\000"
 12137      6F727952 
 12137      6567696F 
 12137      6E00
 12138              	.LASF704:
 12139 000e 5F524545 		.ascii	"_REENT_WCRTOMB_STATE(ptr) ((ptr)->_misc->_wcrtomb_s"
 12139      4E545F57 
 12139      4352544F 
 12139      4D425F53 
 12139      54415445 
 12140 0041 74617465 		.ascii	"tate)\000"
 12140      2900
 12141              	.LASF833:
 12142 0047 5F494F46 		.ascii	"_IOFBF 0\000"
 12142      42462030 
 12142      00
 12143              	.LASF157:
 12144 0050 5F5F4445 		.ascii	"__DECIMAL_DIG__ 17\000"
 12144      43494D41 
 12144      4C5F4449 
 12144      475F5F20 
 12144      313700
 12145              	.LASF1297:
 12146 0063 756C4275 		.ascii	"ulBufferSize\000"
 12146      66666572 
 12146      53697A65 
 12146      00
 12147              	.LASF294:
 12148 0070 5F5F5548 		.ascii	"__UHA_FBIT__ 8\000"
 12148      415F4642 
 12148      49545F5F 
 12148      203800
 12149              	.LASF1315:
 12150 007f 78546173 		.ascii	"xTaskIsTaskSuspended\000"
 12150      6B497354 
 12150      61736B53 
 12150      75737065 
 12150      6E646564 
 12151              	.LASF765:
 12152 0094 5F535953 		.ascii	"_SYS__TIMESPEC_H_ \000"
 12152      5F5F5449 
 12152      4D455350 
 12152      45435F48 
 12152      5F2000
 12153              	.LASF136:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 257


 12154 00a7 5F5F464C 		.ascii	"__FLT_HAS_QUIET_NAN__ 1\000"
 12154      545F4841 
 12154      535F5155 
 12154      4945545F 
 12154      4E414E5F 
 12155              	.LASF184:
 12156 00bf 5F5F4445 		.ascii	"__DEC128_EPSILON__ 1E-33DL\000"
 12156      43313238 
 12156      5F455053 
 12156      494C4F4E 
 12156      5F5F2031 
 12157              	.LASF1053:
 12158 00da 756E7369 		.ascii	"unsigned char\000"
 12158      676E6564 
 12158      20636861 
 12158      7200
 12159              	.LASF875:
 12160 00e8 5F5F636F 		.ascii	"__compar_fn_t_defined \000"
 12160      6D706172 
 12160      5F666E5F 
 12160      745F6465 
 12160      66696E65 
 12161              	.LASF547:
 12162 00ff 5F5F756E 		.ascii	"__unreachable() __builtin_unreachable()\000"
 12162      72656163 
 12162      6861626C 
 12162      65282920 
 12162      5F5F6275 
 12163              	.LASF314:
 12164 0127 5F5F4743 		.ascii	"__GCC_ATOMIC_WCHAR_T_LOCK_FREE 2\000"
 12164      435F4154 
 12164      4F4D4943 
 12164      5F574348 
 12164      41525F54 
 12165              	.LASF306:
 12166 0148 5F5F4348 		.ascii	"__CHAR_UNSIGNED__ 1\000"
 12166      41525F55 
 12166      4E534947 
 12166      4E45445F 
 12166      5F203100 
 12167              	.LASF1061:
 12168 015c 73697A65 		.ascii	"size_t\000"
 12168      5F7400
 12169              	.LASF976:
 12170 0163 74726163 		.ascii	"traceTASK_SWITCHED_IN() \000"
 12170      65544153 
 12170      4B5F5357 
 12170      49544348 
 12170      45445F49 
 12171              	.LASF737:
 12172 017c 5F504450 		.ascii	"_PDP_ENDIAN 3412\000"
 12172      5F454E44 
 12172      49414E20 
 12172      33343132 
 12172      00
 12173              	.LASF186:
 12174 018d 5F5F5346 		.ascii	"__SFRACT_FBIT__ 7\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 258


 12174      52414354 
 12174      5F464249 
 12174      545F5F20 
 12174      3700
 12175              	.LASF1068:
 12176 019f 73697A65 		.ascii	"sizetype\000"
 12176      74797065 
 12176      00
 12177              	.LASF1337:
 12178 01a8 5F5F6C6F 		.ascii	"__locale_t\000"
 12178      63616C65 
 12178      5F7400
 12179              	.LASF79:
 12180 01b3 5F5F494E 		.ascii	"__INTMAX_C(c) c ## LL\000"
 12180      544D4158 
 12180      5F432863 
 12180      29206320 
 12180      2323204C 
 12181              	.LASF1070:
 12182 01c9 5F5F7661 		.ascii	"__value\000"
 12182      6C756500 
 12183              	.LASF689:
 12184 01d1 5F524545 		.ascii	"_REENT_RAND48_ADD(ptr) ((ptr)->_r48->_add)\000"
 12184      4E545F52 
 12184      414E4434 
 12184      385F4144 
 12184      44287074 
 12185              	.LASF957:
 12186 01fc 706F7274 		.ascii	"portBYTE_ALIGNMENT_MASK ( 0x0007 )\000"
 12186      42595445 
 12186      5F414C49 
 12186      474E4D45 
 12186      4E545F4D 
 12187              	.LASF258:
 12188 021f 5F5F4C4C 		.ascii	"__LLACCUM_MIN__ (-0X1P31LLK-0X1P31LLK)\000"
 12188      41434355 
 12188      4D5F4D49 
 12188      4E5F5F20 
 12188      282D3058 
 12189              	.LASF809:
 12190 0246 5F555345 		.ascii	"_USECONDS_T_DECLARED \000"
 12190      434F4E44 
 12190      535F545F 
 12190      4445434C 
 12190      41524544 
 12191              	.LASF1125:
 12192 025c 5F5F7366 		.ascii	"__sf\000"
 12192      00
 12193              	.LASF76:
 12194 0261 5F5F5054 		.ascii	"__PTRDIFF_MAX__ 0x7fffffff\000"
 12194      52444946 
 12194      465F4D41 
 12194      585F5F20 
 12194      30783766 
 12195              	.LASF430:
 12196 027c 5F4C4F4E 		.ascii	"_LONG_DOUBLE long double\000"
 12196      475F444F 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 259


 12196      55424C45 
 12196      206C6F6E 
 12196      6720646F 
 12197              	.LASF1267:
 12198 0295 75735374 		.ascii	"usStackDepth\000"
 12198      61636B44 
 12198      65707468 
 12198      00
 12199              	.LASF1098:
 12200 02a2 5F5F7362 		.ascii	"__sbuf\000"
 12200      756600
 12201              	.LASF1130:
 12202 02a9 5F726561 		.ascii	"_read\000"
 12202      6400
 12203              	.LASF78:
 12204 02af 5F5F494E 		.ascii	"__INTMAX_MAX__ 0x7fffffffffffffffLL\000"
 12204      544D4158 
 12204      5F4D4158 
 12204      5F5F2030 
 12204      78376666 
 12205              	.LASF740:
 12206 02d3 5F515541 		.ascii	"_QUAD_LOWWORD 0\000"
 12206      445F4C4F 
 12206      57574F52 
 12206      44203000 
 12207              	.LASF171:
 12208 02e3 5F5F4445 		.ascii	"__DEC32_SUBNORMAL_MIN__ 0.000001E-95DF\000"
 12208      4333325F 
 12208      5355424E 
 12208      4F524D41 
 12208      4C5F4D49 
 12209              	.LASF275:
 12210 030a 5F5F5451 		.ascii	"__TQ_IBIT__ 0\000"
 12210      5F494249 
 12210      545F5F20 
 12210      3000
 12211              	.LASF842:
 12212 0318 5345454B 		.ascii	"SEEK_SET 0\000"
 12212      5F534554 
 12212      203000
 12213              	.LASF724:
 12214 0323 5F494E54 		.ascii	"_INT32_T_DECLARED \000"
 12214      33325F54 
 12214      5F444543 
 12214      4C415245 
 12214      442000
 12215              	.LASF670:
 12216 0336 5F524545 		.ascii	"_REENT_SIGNAL_SIZE 24\000"
 12216      4E545F53 
 12216      49474E41 
 12216      4C5F5349 
 12216      5A452032 
 12217              	.LASF965:
 12218 034c 636F6E66 		.ascii	"configUSE_ALTERNATIVE_API 0\000"
 12218      69675553 
 12218      455F414C 
 12218      5445524E 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 260


 12218      41544956 
 12219              	.LASF710:
 12220 0368 5F4B6D61 		.ascii	"_Kmax (sizeof (size_t) << 3)\000"
 12220      78202873 
 12220      697A656F 
 12220      66202873 
 12220      697A655F 
 12221              	.LASF11:
 12222 0385 5F5F4154 		.ascii	"__ATOMIC_CONSUME 1\000"
 12222      4F4D4943 
 12222      5F434F4E 
 12222      53554D45 
 12222      203100
 12223              	.LASF251:
 12224 0398 5F5F554C 		.ascii	"__ULACCUM_FBIT__ 32\000"
 12224      41434355 
 12224      4D5F4642 
 12224      49545F5F 
 12224      20333200 
 12225              	.LASF72:
 12226 03ac 5F5F5743 		.ascii	"__WCHAR_MAX__ 0xffffffffU\000"
 12226      4841525F 
 12226      4D41585F 
 12226      5F203078 
 12226      66666666 
 12227              	.LASF856:
 12228 03c6 5F5F7367 		.ascii	"__sgetc_r(__ptr,__p) __sgetc_raw_r(__ptr, __p)\000"
 12228      6574635F 
 12228      72285F5F 
 12228      7074722C 
 12228      5F5F7029 
 12229              	.LASF516:
 12230 03f5 5F5F434F 		.ascii	"__CONCAT(x,y) __CONCAT1(x,y)\000"
 12230      4E434154 
 12230      28782C79 
 12230      29205F5F 
 12230      434F4E43 
 12231              	.LASF1131:
 12232 0412 5F777269 		.ascii	"_write\000"
 12232      746500
 12233              	.LASF1260:
 12234 0419 756C5374 		.ascii	"ulStatsAsPercentage\000"
 12234      61747341 
 12234      73506572 
 12234      63656E74 
 12234      61676500 
 12235              	.LASF889:
 12236 042d 70644641 		.ascii	"pdFAIL ( 0 )\000"
 12236      494C2028 
 12236      20302029 
 12236      00
 12237              	.LASF959:
 12238 043a 4D50555F 		.ascii	"MPU_WRAPPERS_H \000"
 12238      57524150 
 12238      50455253 
 12238      5F482000 
 12239              	.LASF494:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 261


 12240 044a 5F5F474E 		.ascii	"__GNUCLIKE___TYPEOF 1\000"
 12240      55434C49 
 12240      4B455F5F 
 12240      5F545950 
 12240      454F4620 
 12241              	.LASF1205:
 12242 0460 78457665 		.ascii	"xEventListItem\000"
 12242      6E744C69 
 12242      73744974 
 12242      656D00
 12243              	.LASF1052:
 12244 046f 7369676E 		.ascii	"signed char\000"
 12244      65642063 
 12244      68617200 
 12245              	.LASF15:
 12246 047b 5F5F5349 		.ascii	"__SIZEOF_LONG_LONG__ 8\000"
 12246      5A454F46 
 12246      5F4C4F4E 
 12246      475F4C4F 
 12246      4E475F5F 
 12247              	.LASF1122:
 12248 0492 5F617363 		.ascii	"_asctime_buf\000"
 12248      74696D65 
 12248      5F627566 
 12248      00
 12249              	.LASF142:
 12250 049f 5F5F4442 		.ascii	"__DBL_MAX_10_EXP__ 308\000"
 12250      4C5F4D41 
 12250      585F3130 
 12250      5F455850 
 12250      5F5F2033 
 12251              	.LASF571:
 12252 04b6 5F5F5243 		.ascii	"__RCSID_SOURCE(s) struct __hack\000"
 12252      5349445F 
 12252      534F5552 
 12252      43452873 
 12252      29207374 
 12253              	.LASF198:
 12254 04d6 5F5F4652 		.ascii	"__FRACT_MIN__ (-0.5R-0.5R)\000"
 12254      4143545F 
 12254      4D494E5F 
 12254      5F20282D 
 12254      302E3552 
 12255              	.LASF264:
 12256 04f1 5F5F554C 		.ascii	"__ULLACCUM_MAX__ 0XFFFFFFFFFFFFFFFFP-32ULLK\000"
 12256      4C414343 
 12256      554D5F4D 
 12256      41585F5F 
 12256      20305846 
 12257              	.LASF234:
 12258 051d 5F5F5553 		.ascii	"__USACCUM_MAX__ 0XFFFFP-8UHK\000"
 12258      41434355 
 12258      4D5F4D41 
 12258      585F5F20 
 12258      30584646 
 12259              	.LASF168:
 12260 053a 5F5F4445 		.ascii	"__DEC32_MIN__ 1E-95DF\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 262


 12260      4333325F 
 12260      4D494E5F 
 12260      5F203145 
 12260      2D393544 
 12261              	.LASF703:
 12262 0550 5F524545 		.ascii	"_REENT_MBSRTOWCS_STATE(ptr) ((ptr)->_misc->_mbsrtow"
 12262      4E545F4D 
 12262      42535254 
 12262      4F574353 
 12262      5F535441 
 12263 0583 63735F73 		.ascii	"cs_state)\000"
 12263      74617465 
 12263      2900
 12264              	.LASF1004:
 12265 058d 74726163 		.ascii	"traceTASK_DELAY() \000"
 12265      65544153 
 12265      4B5F4445 
 12265      4C415928 
 12265      292000
 12266              	.LASF271:
 12267 05a0 5F5F5351 		.ascii	"__SQ_IBIT__ 0\000"
 12267      5F494249 
 12267      545F5F20 
 12267      3000
 12268              	.LASF1173:
 12269 05ae 5F676C6F 		.ascii	"_global_atexit\000"
 12269      62616C5F 
 12269      61746578 
 12269      697400
 12270              	.LASF29:
 12271 05bd 5F5F5349 		.ascii	"__SIZE_TYPE__ unsigned int\000"
 12271      5A455F54 
 12271      5950455F 
 12271      5F20756E 
 12271      7369676E 
 12272              	.LASF174:
 12273 05d8 5F5F4445 		.ascii	"__DEC64_MAX_EXP__ 385\000"
 12273      4336345F 
 12273      4D41585F 
 12273      4558505F 
 12273      5F203338 
 12274              	.LASF134:
 12275 05ee 5F5F464C 		.ascii	"__FLT_HAS_DENORM__ 1\000"
 12275      545F4841 
 12275      535F4445 
 12275      4E4F524D 
 12275      5F5F2031 
 12276              	.LASF38:
 12277 0603 5F5F494E 		.ascii	"__INT8_TYPE__ signed char\000"
 12277      54385F54 
 12277      5950455F 
 12277      5F207369 
 12277      676E6564 
 12278              	.LASF338:
 12279 061d 5F5F4152 		.ascii	"__ARM_ARCH_PROFILE 77\000"
 12279      4D5F4152 
 12279      43485F50 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 263


 12279      524F4649 
 12279      4C452037 
 12280              	.LASF1298:
 12281 0633 76546173 		.ascii	"vTaskGetRunTimeStats\000"
 12281      6B476574 
 12281      52756E54 
 12281      696D6553 
 12281      74617473 
 12282              	.LASF1193:
 12283 0648 7854494D 		.ascii	"xTIME_OUT\000"
 12283      455F4F55 
 12283      5400
 12284              	.LASF424:
 12285 0652 5F455846 		.ascii	"_EXFUN(name,proto) name proto\000"
 12285      554E286E 
 12285      616D652C 
 12285      70726F74 
 12285      6F29206E 
 12286              	.LASF922:
 12287 0670 494E434C 		.ascii	"INCLUDE_vTaskSuspend 1\000"
 12287      5544455F 
 12287      76546173 
 12287      6B537573 
 12287      70656E64 
 12288              	.LASF853:
 12289 0687 66726F70 		.ascii	"fropen(__cookie,__fn) funopen(__cookie, __fn, (int "
 12289      656E285F 
 12289      5F636F6F 
 12289      6B69652C 
 12289      5F5F666E 
 12290 06ba 282A2928 		.ascii	"(*)())0, (fpos_t (*)())0, (int (*)())0)\000"
 12290      2929302C 
 12290      20286670 
 12290      6F735F74 
 12290      20282A29 
 12291              	.LASF1224:
 12292 06e2 78546963 		.ascii	"xTickCount\000"
 12292      6B436F75 
 12292      6E7400
 12293              	.LASF1232:
 12294 06ed 75785461 		.ascii	"uxTaskNumber\000"
 12294      736B4E75 
 12294      6D626572 
 12294      00
 12295              	.LASF677:
 12296 06fa 5F524545 		.ascii	"_REENT_INIT_RAND48(var) do { struct _reent *_r = (v"
 12296      4E545F49 
 12296      4E49545F 
 12296      52414E44 
 12296      34382876 
 12297 072d 6172293B 		.ascii	"ar); _r->_r48->_seed[0] = _RAND48_SEED_0; _r->_r48-"
 12297      205F722D 
 12297      3E5F7234 
 12297      382D3E5F 
 12297      73656564 
 12298 0760 3E5F7365 		.ascii	">_seed[1] = _RAND48_SEED_1; _r->_r48->_seed[2] = _R"
 12298      65645B31 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 264


 12298      5D203D20 
 12298      5F52414E 
 12298      4434385F 
 12299 0793 414E4434 		.ascii	"AND48_SEED_2; _r->_r48->_mult[0] = _RAND48_MULT_0; "
 12299      385F5345 
 12299      45445F32 
 12299      3B205F72 
 12299      2D3E5F72 
 12300 07c6 5F722D3E 		.ascii	"_r->_r48->_mult[1] = _RAND48_MULT_1; _r->_r48->_mul"
 12300      5F723438 
 12300      2D3E5F6D 
 12300      756C745B 
 12300      315D203D 
 12301 07f9 745B325D 		.ascii	"t[2] = _RAND48_MULT_2; _r->_r48->_add = _RAND48_ADD"
 12301      203D205F 
 12301      52414E44 
 12301      34385F4D 
 12301      554C545F 
 12302 082c 3B205F72 		.ascii	"; _r->_r48->_rand_next = 1; } while (0)\000"
 12302      2D3E5F72 
 12302      34382D3E 
 12302      5F72616E 
 12302      645F6E65 
 12303              	.LASF151:
 12304 0854 5F5F4C44 		.ascii	"__LDBL_MANT_DIG__ 53\000"
 12304      424C5F4D 
 12304      414E545F 
 12304      4449475F 
 12304      5F203533 
 12305              	.LASF1079:
 12306 0869 5F5F746D 		.ascii	"__tm\000"
 12306      00
 12307              	.LASF1167:
 12308 086e 5F776373 		.ascii	"_wcsrtombs_state\000"
 12308      72746F6D 
 12308      62735F73 
 12308      74617465 
 12308      00
 12309              	.LASF1135:
 12310 087f 5F6E6275 		.ascii	"_nbuf\000"
 12310      6600
 12311              	.LASF1080:
 12312 0885 5F5F746D 		.ascii	"__tm_sec\000"
 12312      5F736563 
 12312      00
 12313              	.LASF101:
 12314 088e 5F5F5549 		.ascii	"__UINT8_C(c) c\000"
 12314      4E54385F 
 12314      43286329 
 12314      206300
 12315              	.LASF39:
 12316 089d 5F5F494E 		.ascii	"__INT16_TYPE__ short int\000"
 12316      5431365F 
 12316      54595045 
 12316      5F5F2073 
 12316      686F7274 
 12317              	.LASF528:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 265


 12318 08b6 5F5F616C 		.ascii	"__aligned(x) __attribute__((__aligned__(x)))\000"
 12318      69676E65 
 12318      64287829 
 12318      205F5F61 
 12318      74747269 
 12319              	.LASF1161:
 12320 08e3 5F6C3634 		.ascii	"_l64a_buf\000"
 12320      615F6275 
 12320      6600
 12321              	.LASF1013:
 12322 08ed 7076506F 		.ascii	"pvPortMallocAligned(x,puxStackBuffer) ( ( puxStackB"
 12322      72744D61 
 12322      6C6C6F63 
 12322      416C6967 
 12322      6E656428 
 12323 0920 75666665 		.ascii	"uffer == NULL ) ? ( pvPortMalloc( x ) ) : ( puxStac"
 12323      72203D3D 
 12323      204E554C 
 12323      4C202920 
 12323      3F202820 
 12324 0953 6B427566 		.ascii	"kBuffer ) )\000"
 12324      66657220 
 12324      29202900 
 12325              	.LASF1289:
 12326 095f 756C5465 		.ascii	"ulTempCounter\000"
 12326      6D70436F 
 12326      756E7465 
 12326      7200
 12327              	.LASF974:
 12328 096d 74726163 		.ascii	"traceSTART() \000"
 12328      65535441 
 12328      52542829 
 12328      2000
 12329              	.LASF254:
 12330 097b 5F5F554C 		.ascii	"__ULACCUM_MAX__ 0XFFFFFFFFFFFFFFFFP-32ULK\000"
 12330      41434355 
 12330      4D5F4D41 
 12330      585F5F20 
 12330      30584646 
 12331              	.LASF762:
 12332 09a5 74696D65 		.ascii	"timeradd(tvp,uvp,vvp) do { (vvp)->tv_sec = (tvp)->t"
 12332      72616464 
 12332      28747670 
 12332      2C757670 
 12332      2C767670 
 12333 09d8 765F7365 		.ascii	"v_sec + (uvp)->tv_sec; (vvp)->tv_usec = (tvp)->tv_u"
 12333      63202B20 
 12333      28757670 
 12333      292D3E74 
 12333      765F7365 
 12334 0a0b 73656320 		.ascii	"sec + (uvp)->tv_usec; if ((vvp)->tv_usec >= 1000000"
 12334      2B202875 
 12334      7670292D 
 12334      3E74765F 
 12334      75736563 
 12335 0a3e 29207B20 		.ascii	") { (vvp)->tv_sec++; (vvp)->tv_usec -= 1000000; } }"
 12335      28767670 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 266


 12335      292D3E74 
 12335      765F7365 
 12335      632B2B3B 
 12336 0a71 20776869 		.ascii	" while (0)\000"
 12336      6C652028 
 12336      302900
 12337              	.LASF1207:
 12338 0a7c 70785374 		.ascii	"pxStack\000"
 12338      61636B00 
 12339              	.LASF485:
 12340 0a84 5F5F756E 		.ascii	"__unbounded \000"
 12340      626F756E 
 12340      64656420 
 12340      00
 12341              	.LASF901:
 12342 0a91 636F6E66 		.ascii	"configUSE_IDLE_HOOK 0\000"
 12342      69675553 
 12342      455F4944 
 12342      4C455F48 
 12342      4F4F4B20 
 12343              	.LASF341:
 12344 0aa7 5F5F4150 		.ascii	"__APCS_32__ 1\000"
 12344      43535F33 
 12344      325F5F20 
 12344      3100
 12345              	.LASF983:
 12346 0ab5 74726163 		.ascii	"traceCREATE_MUTEX_FAILED() \000"
 12346      65435245 
 12346      4154455F 
 12346      4D555445 
 12346      585F4641 
 12347              	.LASF768:
 12348 0ad1 5F534947 		.ascii	"_SIGSET_T_DECLARED \000"
 12348      5345545F 
 12348      545F4445 
 12348      434C4152 
 12348      45442000 
 12349              	.LASF1239:
 12350 0ae5 75785072 		.ascii	"uxPreviousTask\000"
 12350      6576696F 
 12350      75735461 
 12350      736B00
 12351              	.LASF221:
 12352 0af4 5F5F554C 		.ascii	"__ULLFRACT_FBIT__ 64\000"
 12352      4C465241 
 12352      43545F46 
 12352      4249545F 
 12352      5F203634 
 12353              	.LASF379:
 12354 0b09 5F4C4442 		.ascii	"_LDBL_EQ_DBL 1\000"
 12354      4C5F4551 
 12354      5F44424C 
 12354      203100
 12355              	.LASF1100:
 12356 0b18 5F73697A 		.ascii	"_size\000"
 12356      6500
 12357              	.LASF776:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 267


 12358 0b1e 46445F49 		.ascii	"FD_ISSET(n,p) ((p)->fds_bits[(n)/NFDBITS] & (1L << "
 12358      53534554 
 12358      286E2C70 
 12358      29202828 
 12358      70292D3E 
 12359 0b51 28286E29 		.ascii	"((n) % NFDBITS)))\000"
 12359      2025204E 
 12359      46444249 
 12359      54532929 
 12359      2900
 12360              	.LASF57:
 12361 0b63 5F5F494E 		.ascii	"__INT_FAST64_TYPE__ long long int\000"
 12361      545F4641 
 12361      53543634 
 12361      5F545950 
 12361      455F5F20 
 12362              	.LASF32:
 12363 0b85 5F5F5749 		.ascii	"__WINT_TYPE__ unsigned int\000"
 12363      4E545F54 
 12363      5950455F 
 12363      5F20756E 
 12363      7369676E 
 12364              	.LASF695:
 12365 0ba0 5F524545 		.ascii	"_REENT_TM(ptr) ((ptr)->_localtime_buf)\000"
 12365      4E545F54 
 12365      4D287074 
 12365      72292028 
 12365      28707472 
 12366              	.LASF1090:
 12367 0bc7 5F666E61 		.ascii	"_fnargs\000"
 12367      72677300 
 12368              	.LASF1301:
 12369 0bcf 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 12369      736B4765 
 12369      744E756D 
 12369      6265724F 
 12369      66546173 
 12370              	.LASF1138:
 12371 0be6 5F6C6F63 		.ascii	"_lock\000"
 12371      6B00
 12372              	.LASF454:
 12373 0bec 5F5F5349 		.ascii	"__SIZE_T__ \000"
 12373      5A455F54 
 12373      5F5F2000 
 12374              	.LASF625:
 12375 0bf8 5F5F6E65 		.ascii	"__need___va_list \000"
 12375      65645F5F 
 12375      5F76615F 
 12375      6C697374 
 12375      2000
 12376              	.LASF796:
 12377 0c0a 5F4F4646 		.ascii	"_OFF_T_DECLARED \000"
 12377      5F545F44 
 12377      45434C41 
 12377      52454420 
 12377      00
 12378              	.LASF304:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 268


 12379 0c1b 5F5F474E 		.ascii	"__GNUC_GNU_INLINE__ 1\000"
 12379      55435F47 
 12379      4E555F49 
 12379      4E4C494E 
 12379      455F5F20 
 12380              	.LASF804:
 12381 0c31 5F4E4C49 		.ascii	"_NLINK_T_DECLARED \000"
 12381      4E4B5F54 
 12381      5F444543 
 12381      4C415245 
 12381      442000
 12382              	.LASF654:
 12383 0c44 5F54494D 		.ascii	"_TIMER_T_ unsigned long\000"
 12383      45525F54 
 12383      5F20756E 
 12383      7369676E 
 12383      6564206C 
 12384              	.LASF791:
 12385 0c5c 5F5F6461 		.ascii	"__daddr_t_defined \000"
 12385      6464725F 
 12385      745F6465 
 12385      66696E65 
 12385      642000
 12386              	.LASF194:
 12387 0c6f 5F5F5553 		.ascii	"__USFRACT_MAX__ 0XFFP-8UHR\000"
 12387      46524143 
 12387      545F4D41 
 12387      585F5F20 
 12387      30584646 
 12388              	.LASF1048:
 12389 0c8a 76577269 		.ascii	"vWriteTraceToBuffer() { if( xTracing ) { if( uxPrev"
 12389      74655472 
 12389      61636554 
 12389      6F427566 
 12389      66657228 
 12390 0cbd 696F7573 		.ascii	"iousTask != pxCurrentTCB->uxTCBNumber ) { if( ( pcT"
 12390      5461736B 
 12390      20213D20 
 12390      70784375 
 12390      7272656E 
 12391 0cf0 72616365 		.ascii	"raceBuffer + tskSIZE_OF_EACH_TRACE_LINE ) < pcTrace"
 12391      42756666 
 12391      6572202B 
 12391      2074736B 
 12391      53495A45 
 12392 0d23 42756666 		.ascii	"BufferEnd ) { uxPreviousTask = pxCurrentTCB->uxTCBN"
 12392      6572456E 
 12392      64202920 
 12392      7B207578 
 12392      50726576 
 12393 0d56 756D6265 		.ascii	"umber; *( unsigned long * ) pcTraceBuffer = ( unsig"
 12393      723B202A 
 12393      2820756E 
 12393      7369676E 
 12393      6564206C 
 12394 0d89 6E656420 		.ascii	"ned long ) xTickCount; pcTraceBuffer += sizeof( uns"
 12394      6C6F6E67 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 269


 12394      20292078 
 12394      5469636B 
 12394      436F756E 
 12395 0dbc 69676E65 		.ascii	"igned long ); *( unsigned long * ) pcTraceBuffer = "
 12395      64206C6F 
 12395      6E672029 
 12395      3B202A28 
 12395      20756E73 
 12396 0def 2820756E 		.ascii	"( unsigned long ) uxPreviousTask; pcTraceBuffer += "
 12396      7369676E 
 12396      6564206C 
 12396      6F6E6720 
 12396      29207578 
 12397 0e22 73697A65 		.ascii	"sizeof( unsigned long ); } else { xTracing = pdFALS"
 12397      6F662820 
 12397      756E7369 
 12397      676E6564 
 12397      206C6F6E 
 12398 0e55 453B207D 		.ascii	"E; } } } }\000"
 12398      207D207D 
 12398      207D00
 12399              	.LASF929:
 12400 0e60 706F7274 		.ascii	"portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() ( ulHighFr"
 12400      434F4E46 
 12400      49475552 
 12400      455F5449 
 12400      4D45525F 
 12401 0e93 65717565 		.ascii	"equencyTimerTicks = 0UL )\000"
 12401      6E637954 
 12401      696D6572 
 12401      5469636B 
 12401      73203D20 
 12402              	.LASF848:
 12403 0ead 73746465 		.ascii	"stderr (_REENT->_stderr)\000"
 12403      72722028 
 12403      5F524545 
 12403      4E542D3E 
 12403      5F737464 
 12404              	.LASF477:
 12405 0ec6 5F5F4153 		.ascii	"__ASMNAME(cname) __XSTRING (__USER_LABEL_PREFIX__) "
 12405      4D4E414D 
 12405      4528636E 
 12405      616D6529 
 12405      205F5F58 
 12406 0ef9 636E616D 		.ascii	"cname\000"
 12406      6500
 12407              	.LASF623:
 12408 0eff 5F5F6E65 		.ascii	"__need_wchar_t\000"
 12408      65645F77 
 12408      63686172 
 12408      5F7400
 12409              	.LASF769:
 12410 0f0e 5F535953 		.ascii	"_SYS_TYPES_FD_SET \000"
 12410      5F545950 
 12410      45535F46 
 12410      445F5345 
 12410      542000
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 270


 12411              	.LASF638:
 12412 0f21 5F5F6C6F 		.ascii	"__lock_close_recursive(lock) (_CAST_VOID 0)\000"
 12412      636B5F63 
 12412      6C6F7365 
 12412      5F726563 
 12412      75727369 
 12413              	.LASF1009:
 12414 0f4d 74726163 		.ascii	"traceTASK_INCREMENT_TICK(xTickCount) \000"
 12414      65544153 
 12414      4B5F494E 
 12414      4352454D 
 12414      454E545F 
 12415              	.LASF1162:
 12416 0f73 5F676574 		.ascii	"_getdate_err\000"
 12416      64617465 
 12416      5F657272 
 12416      00
 12417              	.LASF1148:
 12418 0f80 5F6D756C 		.ascii	"_mult\000"
 12418      7400
 12419              	.LASF291:
 12420 0f86 5F5F4441 		.ascii	"__DA_IBIT__ 32\000"
 12420      5F494249 
 12420      545F5F20 
 12420      333200
 12421              	.LASF211:
 12422 0f95 5F5F554C 		.ascii	"__ULFRACT_FBIT__ 32\000"
 12422      46524143 
 12422      545F4642 
 12422      49545F5F 
 12422      20333200 
 12423              	.LASF684:
 12424 0fa9 5F524545 		.ascii	"_REENT_CHECK_SIGNAL_BUF(var) _REENT_CHECK(var, _sig"
 12424      4E545F43 
 12424      4845434B 
 12424      5F534947 
 12424      4E414C5F 
 12425 0fdc 6E616C5F 		.ascii	"nal_buf, char *, _REENT_SIGNAL_SIZE, )\000"
 12425      6275662C 
 12425      20636861 
 12425      72202A2C 
 12425      205F5245 
 12426              	.LASF860:
 12427 1003 5F5F7366 		.ascii	"__sfileno(p) ((p)->_file)\000"
 12427      696C656E 
 12427      6F287029 
 12427      20282870 
 12427      292D3E5F 
 12428              	.LASF469:
 12429 101d 5F5F7369 		.ascii	"__size_t \000"
 12429      7A655F74 
 12429      2000
 12430              	.LASF484:
 12431 1027 5F5F626F 		.ascii	"__bounded \000"
 12431      756E6465 
 12431      642000
 12432              	.LASF816:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 271


 12433 1032 5F5F534C 		.ascii	"__SLBF 0x0001\000"
 12433      42462030 
 12433      78303030 
 12433      3100
 12434              	.LASF569:
 12435 1040 5F5F4642 		.ascii	"__FBSDID(s) struct __hack\000"
 12435      53444944 
 12435      28732920 
 12435      73747275 
 12435      6374205F 
 12436              	.LASF246:
 12437 105a 5F5F4C41 		.ascii	"__LACCUM_FBIT__ 31\000"
 12437      4343554D 
 12437      5F464249 
 12437      545F5F20 
 12437      333100
 12438              	.LASF819:
 12439 106d 5F5F5357 		.ascii	"__SWR 0x0008\000"
 12439      52203078 
 12439      30303038 
 12439      00
 12440              	.LASF190:
 12441 107a 5F5F5346 		.ascii	"__SFRACT_EPSILON__ 0x1P-7HR\000"
 12441      52414354 
 12441      5F455053 
 12441      494C4F4E 
 12441      5F5F2030 
 12442              	.LASF515:
 12443 1096 5F5F434F 		.ascii	"__CONCAT1(x,y) x ## y\000"
 12443      4E434154 
 12443      3128782C 
 12443      79292078 
 12443      20232320 
 12444              	.LASF1248:
 12445 10ac 78546173 		.ascii	"xTask\000"
 12445      6B00
 12446              	.LASF97:
 12447 10b2 5F5F494E 		.ascii	"__INT32_C(c) c ## L\000"
 12447      5433325F 
 12447      43286329 
 12447      20632023 
 12447      23204C00 
 12448              	.LASF280:
 12449 10c6 5F5F5553 		.ascii	"__USQ_FBIT__ 32\000"
 12449      515F4642 
 12449      49545F5F 
 12449      20333200 
 12450              	.LASF24:
 12451 10d6 5F5F4F52 		.ascii	"__ORDER_BIG_ENDIAN__ 4321\000"
 12451      4445525F 
 12451      4249475F 
 12451      454E4449 
 12451      414E5F5F 
 12452              	.LASF948:
 12453 10f0 706F7274 		.ascii	"portSET_INTERRUPT_MASK_FROM_ISR() 0;portSET_INTERRU"
 12453      5345545F 
 12453      494E5445 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 272


 12453      52525550 
 12453      545F4D41 
 12454 1123 50545F4D 		.ascii	"PT_MASK()\000"
 12454      41534B28 
 12454      2900
 12455              	.LASF270:
 12456 112d 5F5F5351 		.ascii	"__SQ_FBIT__ 31\000"
 12456      5F464249 
 12456      545F5F20 
 12456      333100
 12457              	.LASF1250:
 12458 113c 75785265 		.ascii	"uxReturn\000"
 12458      7475726E 
 12458      00
 12459              	.LASF825:
 12460 1145 5F5F5353 		.ascii	"__SSTR 0x0200\000"
 12460      54522030 
 12460      78303230 
 12460      3000
 12461              	.LASF1180:
 12462 1153 70784E65 		.ascii	"pxNext\000"
 12462      787400
 12463              	.LASF722:
 12464 115a 5F55494E 		.ascii	"_UINT16_T_DECLARED \000"
 12464      5431365F 
 12464      545F4445 
 12464      434C4152 
 12464      45442000 
 12465              	.LASF801:
 12466 116e 5F4B4559 		.ascii	"_KEY_T_DECLARED \000"
 12466      5F545F44 
 12466      45434C41 
 12466      52454420 
 12466      00
 12467              	.LASF1255:
 12468 117f 70635772 		.ascii	"pcWriteBuffer\000"
 12468      69746542 
 12468      75666665 
 12468      7200
 12469              	.LASF1012:
 12470 118d 706F7274 		.ascii	"portYIELD_WITHIN_API portYIELD\000"
 12470      5949454C 
 12470      445F5749 
 12470      5448494E 
 12470      5F415049 
 12471              	.LASF278:
 12472 11ac 5F5F5548 		.ascii	"__UHQ_FBIT__ 16\000"
 12472      515F4642 
 12472      49545F5F 
 12472      20313600 
 12473              	.LASF1269:
 12474 11bc 70784E65 		.ascii	"pxNewTCB\000"
 12474      77544342 
 12474      00
 12475              	.LASF668:
 12476 11c5 5F524545 		.ascii	"_REENT_EMERGENCY_SIZE 25\000"
 12476      4E545F45 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 273


 12476      4D455247 
 12476      454E4359 
 12476      5F53495A 
 12477              	.LASF675:
 12478 11de 5F524545 		.ascii	"_REENT_CHECK_TM(var) _REENT_CHECK(var, _localtime_b"
 12478      4E545F43 
 12478      4845434B 
 12478      5F544D28 
 12478      76617229 
 12479 1211 75662C20 		.ascii	"uf, struct __tm *, sizeof *((var)->_localtime_buf),"
 12479      73747275 
 12479      6374205F 
 12479      5F746D20 
 12479      2A2C2073 
 12480 1244 202900   		.ascii	" )\000"
 12481              	.LASF968:
 12482 1247 494E434C 		.ascii	"INCLUDE_xTaskGetSchedulerState 0\000"
 12482      5544455F 
 12482      78546173 
 12482      6B476574 
 12482      53636865 
 12483              	.LASF565:
 12484 1268 5F5F7765 		.ascii	"__weak_reference(sym,alias) __asm__(\".weak \" #ali"
 12484      616B5F72 
 12484      65666572 
 12484      656E6365 
 12484      2873796D 
 12485 1299 6173293B 		.ascii	"as); __asm__(\".equ \" #alias \", \" #sym)\000"
 12485      205F5F61 
 12485      736D5F5F 
 12485      28222E65 
 12485      71752022 
 12486              	.LASF818:
 12487 12c0 5F5F5352 		.ascii	"__SRD 0x0004\000"
 12487      44203078 
 12487      30303034 
 12487      00
 12488              	.LASF1228:
 12489 12cd 75785363 		.ascii	"uxSchedulerSuspended\000"
 12489      68656475 
 12489      6C657253 
 12489      75737065 
 12489      6E646564 
 12490              	.LASF112:
 12491 12e2 5F5F5549 		.ascii	"__UINT_FAST8_MAX__ 0xffffffffU\000"
 12491      4E545F46 
 12491      41535438 
 12491      5F4D4158 
 12491      5F5F2030 
 12492              	.LASF170:
 12493 1301 5F5F4445 		.ascii	"__DEC32_EPSILON__ 1E-6DF\000"
 12493      4333325F 
 12493      45505349 
 12493      4C4F4E5F 
 12493      5F203145 
 12494              	.LASF487:
 12495 131a 5F5F6861 		.ascii	"__has_extension __has_feature\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 274


 12495      735F6578 
 12495      74656E73 
 12495      696F6E20 
 12495      5F5F6861 
 12496              	.LASF1066:
 12497 1338 5F5F7763 		.ascii	"__wch\000"
 12497      6800
 12498              	.LASF606:
 12499 133e 5F5F6E65 		.ascii	"__need_ptrdiff_t\000"
 12499      65645F70 
 12499      74726469 
 12499      66665F74 
 12499      00
 12500              	.LASF247:
 12501 134f 5F5F4C41 		.ascii	"__LACCUM_IBIT__ 32\000"
 12501      4343554D 
 12501      5F494249 
 12501      545F5F20 
 12501      333200
 12502              	.LASF846:
 12503 1362 73746469 		.ascii	"stdin (_REENT->_stdin)\000"
 12503      6E20285F 
 12503      5245454E 
 12503      542D3E5F 
 12503      73746469 
 12504              	.LASF1287:
 12505 1379 7854696D 		.ascii	"xTimeToWake\000"
 12505      65546F57 
 12505      616B6500 
 12506              	.LASF366:
 12507 1385 5F5F4E45 		.ascii	"__NEWLIB_H__ 1\000"
 12507      574C4942 
 12507      5F485F5F 
 12507      203100
 12508              	.LASF888:
 12509 1394 70645041 		.ascii	"pdPASS ( 1 )\000"
 12509      53532028 
 12509      20312029 
 12509      00
 12510              	.LASF775:
 12511 13a1 46445F43 		.ascii	"FD_CLR(n,p) ((p)->fds_bits[(n)/NFDBITS] &= ~(1L << "
 12511      4C52286E 
 12511      2C702920 
 12511      28287029 
 12511      2D3E6664 
 12512 13d4 28286E29 		.ascii	"((n) % NFDBITS)))\000"
 12512      2025204E 
 12512      46444249 
 12512      54532929 
 12512      2900
 12513              	.LASF1210:
 12514 13e6 75784261 		.ascii	"uxBasePriority\000"
 12514      73655072 
 12514      696F7269 
 12514      747900
 12515              	.LASF348:
 12516 13f5 5F5F5646 		.ascii	"__VFP_FP__ 1\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 275


 12516      505F4650 
 12516      5F5F2031 
 12516      00
 12517              	.LASF1176:
 12518 1402 756C4869 		.ascii	"ulHighFrequencyTimerTicks\000"
 12518      67684672 
 12518      65717565 
 12518      6E637954 
 12518      696D6572 
 12519              	.LASF1015:
 12520 141c 5441534B 		.ascii	"TASK_H \000"
 12520      5F482000 
 12521              	.LASF1212:
 12522 1424 74736B54 		.ascii	"tskTCB\000"
 12522      434200
 12523              	.LASF1103:
 12524 142b 5F66696C 		.ascii	"_file\000"
 12524      6500
 12525              	.LASF404:
 12526 1431 5F5F5241 		.ascii	"__RAND_MAX\000"
 12526      4E445F4D 
 12526      415800
 12527              	.LASF320:
 12528 143c 5F5F4743 		.ascii	"__GCC_ATOMIC_POINTER_LOCK_FREE 2\000"
 12528      435F4154 
 12528      4F4D4943 
 12528      5F504F49 
 12528      4E544552 
 12529              	.LASF113:
 12530 145d 5F5F5549 		.ascii	"__UINT_FAST16_MAX__ 0xffffffffU\000"
 12530      4E545F46 
 12530      41535431 
 12530      365F4D41 
 12530      585F5F20 
 12531              	.LASF1023:
 12532 147d 6C697374 		.ascii	"listGET_OWNER_OF_HEAD_ENTRY(pxList) ( ( pxList->uxN"
 12532      4745545F 
 12532      4F574E45 
 12532      525F4F46 
 12532      5F484541 
 12533 14b0 756D6265 		.ascii	"umberOfItems != ( unsigned portBASE_TYPE ) 0 ) ? ( "
 12533      724F6649 
 12533      74656D73 
 12533      20213D20 
 12533      2820756E 
 12534 14e3 28262820 		.ascii	"(&( pxList->xListEnd ))->pxNext->pvOwner ) : ( NULL"
 12534      70784C69 
 12534      73742D3E 
 12534      784C6973 
 12534      74456E64 
 12535 1516 20292029 		.ascii	" ) )\000"
 12535      00
 12536              	.LASF1089:
 12537 151b 5F6F6E5F 		.ascii	"_on_exit_args\000"
 12537      65786974 
 12537      5F617267 
 12537      7300
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 276


 12538              	.LASF868:
 12539 1529 70757463 		.ascii	"putchar_unlocked(x) putc_unlocked(x, stdout)\000"
 12539      6861725F 
 12539      756E6C6F 
 12539      636B6564 
 12539      28782920 
 12540              	.LASF116:
 12541 1556 5F5F494E 		.ascii	"__INTPTR_MAX__ 0x7fffffff\000"
 12541      54505452 
 12541      5F4D4158 
 12541      5F5F2030 
 12541      78376666 
 12542              	.LASF893:
 12543 1570 6572724E 		.ascii	"errNO_TASK_TO_RUN ( -2 )\000"
 12543      4F5F5441 
 12543      534B5F54 
 12543      4F5F5255 
 12543      4E202820 
 12544              	.LASF498:
 12545 1589 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_CONSTANT_P 1\000"
 12545      55434C49 
 12545      4B455F42 
 12545      55494C54 
 12545      494E5F43 
 12546              	.LASF674:
 12547 15a9 5F524545 		.ascii	"_REENT_CHECK(var,what,type,size,init) do { struct _"
 12547      4E545F43 
 12547      4845434B 
 12547      28766172 
 12547      2C776861 
 12548 15dc 7265656E 		.ascii	"reent *_r = (var); if (_r->what == NULL) { _r->what"
 12548      74202A5F 
 12548      72203D20 
 12548      28766172 
 12548      293B2069 
 12549 160f 203D2028 		.ascii	" = (type)malloc(size); __reent_assert(_r->what); in"
 12549      74797065 
 12549      296D616C 
 12549      6C6F6328 
 12549      73697A65 
 12550 1642 69743B20 		.ascii	"it; } } while (0)\000"
 12550      7D207D20 
 12550      7768696C 
 12550      65202830 
 12550      2900
 12551              	.LASF1321:
 12552 1654 75784375 		.ascii	"uxCurrentPriority\000"
 12552      7272656E 
 12552      74507269 
 12552      6F726974 
 12552      7900
 12553              	.LASF169:
 12554 1666 5F5F4445 		.ascii	"__DEC32_MAX__ 9.999999E96DF\000"
 12554      4333325F 
 12554      4D41585F 
 12554      5F20392E 
 12554      39393939 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 277


 12555              	.LASF203:
 12556 1682 5F5F5546 		.ascii	"__UFRACT_MIN__ 0.0UR\000"
 12556      52414354 
 12556      5F4D494E 
 12556      5F5F2030 
 12556      2E305552 
 12557              	.LASF993:
 12558 1697 74726163 		.ascii	"traceQUEUE_PEEK(pxQueue) \000"
 12558      65515545 
 12558      55455F50 
 12558      45454B28 
 12558      70785175 
 12559              	.LASF732:
 12560 16b1 5F494E54 		.ascii	"_INTPTR_T_DECLARED \000"
 12560      5054525F 
 12560      545F4445 
 12560      434C4152 
 12560      45442000 
 12561              	.LASF418:
 12562 16c5 5F434F4E 		.ascii	"_CONST const\000"
 12562      53542063 
 12562      6F6E7374 
 12562      00
 12563              	.LASF456:
 12564 16d2 5F535953 		.ascii	"_SYS_SIZE_T_H \000"
 12564      5F53495A 
 12564      455F545F 
 12564      482000
 12565              	.LASF1039:
 12566 16e1 7461736B 		.ascii	"taskSECOND_CHECK_FOR_STACK_OVERFLOW() { extern void"
 12566      5345434F 
 12566      4E445F43 
 12566      4845434B 
 12566      5F464F52 
 12567 1714 20764170 		.ascii	" vApplicationStackOverflowHook( xTaskHandle *pxTask"
 12567      706C6963 
 12567      6174696F 
 12567      6E537461 
 12567      636B4F76 
 12568 1747 2C207369 		.ascii	", signed char *pcTaskName ); static const unsigned "
 12568      676E6564 
 12568      20636861 
 12568      72202A70 
 12568      63546173 
 12569 177a 63686172 		.ascii	"char ucExpectedStackBytes[] = { tskSTACK_FILL_BYTE,"
 12569      20756345 
 12569      78706563 
 12569      74656453 
 12569      7461636B 
 12570 17ad 2074736B 		.ascii	" tskSTACK_FILL_BYTE, tskSTACK_FILL_BYTE, tskSTACK_F"
 12570      53544143 
 12570      4B5F4649 
 12570      4C4C5F42 
 12570      5954452C 
 12571 17e0 494C4C5F 		.ascii	"ILL_BYTE, tskSTACK_FILL_BYTE, tskSTACK_FILL_BYTE, t"
 12571      42595445 
 12571      2C207473 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 278


 12571      6B535441 
 12571      434B5F46 
 12572 1813 736B5354 		.ascii	"skSTACK_FILL_BYTE, tskSTACK_FILL_BYTE, tskSTACK_FIL"
 12572      41434B5F 
 12572      46494C4C 
 12572      5F425954 
 12572      452C2074 
 12573 1846 4C5F4259 		.ascii	"L_BYTE, tskSTACK_FILL_BYTE, tskSTACK_FILL_BYTE, tsk"
 12573      54452C20 
 12573      74736B53 
 12573      5441434B 
 12573      5F46494C 
 12574 1879 53544143 		.ascii	"STACK_FILL_BYTE, tskSTACK_FILL_BYTE, tskSTACK_FILL_"
 12574      4B5F4649 
 12574      4C4C5F42 
 12574      5954452C 
 12574      2074736B 
 12575 18ac 42595445 		.ascii	"BYTE, tskSTACK_FILL_BYTE, tskSTACK_FILL_BYTE, tskST"
 12575      2C207473 
 12575      6B535441 
 12575      434B5F46 
 12575      494C4C5F 
 12576 18df 41434B5F 		.ascii	"ACK_FILL_BYTE, tskSTACK_FILL_BYTE, tskSTACK_FILL_BY"
 12576      46494C4C 
 12576      5F425954 
 12576      452C2074 
 12576      736B5354 
 12577 1912 54452C20 		.ascii	"TE, tskSTACK_FILL_BYTE }; if( memcmp( ( void * ) px"
 12577      74736B53 
 12577      5441434B 
 12577      5F46494C 
 12577      4C5F4259 
 12578 1945 43757272 		.ascii	"CurrentTCB->pxStack, ( void * ) ucExpectedStackByte"
 12578      656E7454 
 12578      43422D3E 
 12578      70785374 
 12578      61636B2C 
 12579 1978 732C2073 		.ascii	"s, sizeof( ucExpectedStackBytes ) ) != 0 ) { vAppli"
 12579      697A656F 
 12579      66282075 
 12579      63457870 
 12579      65637465 
 12580 19ab 63617469 		.ascii	"cationStackOverflowHook( ( xTaskHandle ) pxCurrentT"
 12580      6F6E5374 
 12580      61636B4F 
 12580      76657266 
 12580      6C6F7748 
 12581 19de 43422C20 		.ascii	"CB, pxCurrentTCB->pcTaskName ); } }\000"
 12581      70784375 
 12581      7272656E 
 12581      74544342 
 12581      2D3E7063 
 12582              	.LASF967:
 12583 1a02 494E434C 		.ascii	"INCLUDE_xTaskResumeFromISR 1\000"
 12583      5544455F 
 12583      78546173 
 12583      6B526573 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 279


 12583      756D6546 
 12584              	.LASF50:
 12585 1a1f 5F5F5549 		.ascii	"__UINT_LEAST8_TYPE__ unsigned char\000"
 12585      4E545F4C 
 12585      45415354 
 12585      385F5459 
 12585      50455F5F 
 12586              	.LASF581:
 12587 1a42 5F5F6C6F 		.ascii	"__locks_exclusive(...) __lock_annotate(exclusive_lo"
 12587      636B735F 
 12587      6578636C 
 12587      75736976 
 12587      65282E2E 
 12588 1a75 636B5F66 		.ascii	"ck_function(__VA_ARGS__))\000"
 12588      756E6374 
 12588      696F6E28 
 12588      5F5F5641 
 12588      5F415247 
 12589              	.LASF236:
 12590 1a8f 5F5F4143 		.ascii	"__ACCUM_FBIT__ 15\000"
 12590      43554D5F 
 12590      46424954 
 12590      5F5F2031 
 12590      3500
 12591              	.LASF384:
 12592 1aa1 5F5F474E 		.ascii	"__GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_M"
 12592      55435F50 
 12592      52455245 
 12592      51286D61 
 12592      6A2C6D69 
 12593 1ad4 494E4F52 		.ascii	"INOR__ >= ((maj) << 16) + (min))\000"
 12593      5F5F203E 
 12593      3D202828 
 12593      6D616A29 
 12593      203C3C20 
 12594              	.LASF866:
 12595 1af5 70757463 		.ascii	"putchar(x) putc(x, stdout)\000"
 12595      68617228 
 12595      78292070 
 12595      75746328 
 12595      782C2073 
 12596              	.LASF1163:
 12597 1b10 5F6D6272 		.ascii	"_mbrlen_state\000"
 12597      6C656E5F 
 12597      73746174 
 12597      6500
 12598              	.LASF1056:
 12599 1b1e 6C6F6E67 		.ascii	"long int\000"
 12599      20696E74 
 12599      00
 12600              	.LASF1213:
 12601 1b27 70784375 		.ascii	"pxCurrentTCB\000"
 12601      7272656E 
 12601      74544342 
 12601      00
 12602              	.LASF1171:
 12603 1b34 5F696D70 		.ascii	"_impure_ptr\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 280


 12603      7572655F 
 12603      70747200 
 12604              	.LASF111:
 12605 1b40 5F5F494E 		.ascii	"__INT_FAST64_MAX__ 0x7fffffffffffffffLL\000"
 12605      545F4641 
 12605      53543634 
 12605      5F4D4158 
 12605      5F5F2030 
 12606              	.LASF372:
 12607 1b68 5F57414E 		.ascii	"_WANT_IO_C99_FORMATS 1\000"
 12607      545F494F 
 12607      5F433939 
 12607      5F464F52 
 12607      4D415453 
 12608              	.LASF964:
 12609 1b7f 636F6E66 		.ascii	"configUSE_COUNTING_SEMAPHORES 0\000"
 12609      69675553 
 12609      455F434F 
 12609      554E5449 
 12609      4E475F53 
 12610              	.LASF1153:
 12611 1b9f 5F726573 		.ascii	"_result_k\000"
 12611      756C745F 
 12611      6B00
 12612              	.LASF935:
 12613 1ba9 706F7274 		.ascii	"portDOUBLE double\000"
 12613      444F5542 
 12613      4C452064 
 12613      6F75626C 
 12613      6500
 12614              	.LASF764:
 12615 1bbb 5F535953 		.ascii	"_SYS_TIMESPEC_H_ \000"
 12615      5F54494D 
 12615      45535045 
 12615      435F485F 
 12615      2000
 12616              	.LASF449:
 12617 1bcd 5F5F5F69 		.ascii	"___int_least16_t_defined 1\000"
 12617      6E745F6C 
 12617      65617374 
 12617      31365F74 
 12617      5F646566 
 12618              	.LASF355:
 12619 1be8 5F5F4152 		.ascii	"__ARM_ARCH_7M__ 1\000"
 12619      4D5F4152 
 12619      43485F37 
 12619      4D5F5F20 
 12619      3100
 12620              	.LASF180:
 12621 1bfa 5F5F4445 		.ascii	"__DEC128_MIN_EXP__ (-6142)\000"
 12621      43313238 
 12621      5F4D494E 
 12621      5F455850 
 12621      5F5F2028 
 12622              	.LASF54:
 12623 1c15 5F5F494E 		.ascii	"__INT_FAST8_TYPE__ int\000"
 12623      545F4641 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 281


 12623      5354385F 
 12623      54595045 
 12623      5F5F2069 
 12624              	.LASF434:
 12625 1c2c 5F4E4F49 		.ascii	"_NOINLINE __attribute__ ((__noinline__))\000"
 12625      4E4C494E 
 12625      45205F5F 
 12625      61747472 
 12625      69627574 
 12626              	.LASF298:
 12627 1c55 5F5F5544 		.ascii	"__UDA_FBIT__ 32\000"
 12627      415F4642 
 12627      49545F5F 
 12627      20333200 
 12628              	.LASF453:
 12629 1c65 5F5F7369 		.ascii	"__size_t__ \000"
 12629      7A655F74 
 12629      5F5F2000 
 12630              	.LASF1032:
 12631 1c71 7461736B 		.ascii	"taskSCHEDULER_NOT_STARTED 0\000"
 12631      53434845 
 12631      44554C45 
 12631      525F4E4F 
 12631      545F5354 
 12632              	.LASF823:
 12633 1c8d 5F5F534D 		.ascii	"__SMBF 0x0080\000"
 12633      42462030 
 12633      78303038 
 12633      3000
 12634              	.LASF81:
 12635 1c9b 5F5F5549 		.ascii	"__UINTMAX_C(c) c ## ULL\000"
 12635      4E544D41 
 12635      585F4328 
 12635      63292063 
 12635      20232320 
 12636              	.LASF28:
 12637 1cb3 5F5F5349 		.ascii	"__SIZEOF_POINTER__ 4\000"
 12637      5A454F46 
 12637      5F504F49 
 12637      4E544552 
 12637      5F5F2034 
 12638              	.LASF46:
 12639 1cc8 5F5F494E 		.ascii	"__INT_LEAST8_TYPE__ signed char\000"
 12639      545F4C45 
 12639      41535438 
 12639      5F545950 
 12639      455F5F20 
 12640              	.LASF1121:
 12641 1ce8 5F6C6F63 		.ascii	"_localtime_buf\000"
 12641      616C7469 
 12641      6D655F62 
 12641      756600
 12642              	.LASF973:
 12643 1cf7 76517565 		.ascii	"vQueueUnregisterQueue(xQueue) \000"
 12643      7565556E 
 12643      72656769 
 12643      73746572 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 282


 12643      51756575 
 12644              	.LASF310:
 12645 1d16 5F5F4743 		.ascii	"__GCC_ATOMIC_BOOL_LOCK_FREE 2\000"
 12645      435F4154 
 12645      4F4D4943 
 12645      5F424F4F 
 12645      4C5F4C4F 
 12646              	.LASF1303:
 12647 1d34 78546173 		.ascii	"xTaskGetTickCount\000"
 12647      6B476574 
 12647      5469636B 
 12647      436F756E 
 12647      7400
 12648              	.LASF447:
 12649 1d46 5F5F5F69 		.ascii	"___int64_t_defined 1\000"
 12649      6E743634 
 12649      5F745F64 
 12649      6566696E 
 12649      65642031 
 12650              	.LASF1319:
 12651 1d5b 70785461 		.ascii	"pxTask\000"
 12651      736B00
 12652              	.LASF351:
 12653 1d62 5F5F4152 		.ascii	"__ARM_NEON__\000"
 12653      4D5F4E45 
 12653      4F4E5F5F 
 12653      00
 12654              	.LASF1311:
 12655 1d6f 76546173 		.ascii	"vTaskStartScheduler\000"
 12655      6B537461 
 12655      72745363 
 12655      68656475 
 12655      6C657200 
 12656              	.LASF742:
 12657 1d83 4249475F 		.ascii	"BIG_ENDIAN _BIG_ENDIAN\000"
 12657      454E4449 
 12657      414E205F 
 12657      4249475F 
 12657      454E4449 
 12658              	.LASF882:
 12659 1d9a 5F535953 		.ascii	"_SYS__LOCALE_H \000"
 12659      5F5F4C4F 
 12659      43414C45 
 12659      5F482000 
 12660              	.LASF354:
 12661 1daa 5F5F5448 		.ascii	"__THUMB_INTERWORK__ 1\000"
 12661      554D425F 
 12661      494E5445 
 12661      52574F52 
 12661      4B5F5F20 
 12662              	.LASF224:
 12663 1dc0 5F5F554C 		.ascii	"__ULLFRACT_MAX__ 0XFFFFFFFFFFFFFFFFP-64ULLR\000"
 12663      4C465241 
 12663      43545F4D 
 12663      41585F5F 
 12663      20305846 
 12664              	.LASF1291:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 283


 12665 1dec 76546173 		.ascii	"vTaskIncrementTick\000"
 12665      6B496E63 
 12665      72656D65 
 12665      6E745469 
 12665      636B00
 12666              	.LASF1028:
 12667 1dff 7461736B 		.ascii	"taskENTER_CRITICAL() portENTER_CRITICAL()\000"
 12667      454E5445 
 12667      525F4352 
 12667      49544943 
 12667      414C2829 
 12668              	.LASF1055:
 12669 1e29 73686F72 		.ascii	"short unsigned int\000"
 12669      7420756E 
 12669      7369676E 
 12669      65642069 
 12669      6E7400
 12670              	.LASF720:
 12671 1e3c 5F5F696E 		.ascii	"__int8_t_defined 1\000"
 12671      74385F74 
 12671      5F646566 
 12671      696E6564 
 12671      203100
 12672              	.LASF153:
 12673 1e4f 5F5F4C44 		.ascii	"__LDBL_MIN_EXP__ (-1021)\000"
 12673      424C5F4D 
 12673      494E5F45 
 12673      58505F5F 
 12673      20282D31 
 12674              	.LASF465:
 12675 1e68 5F53495A 		.ascii	"_SIZE_T_DECLARED \000"
 12675      455F545F 
 12675      4445434C 
 12675      41524544 
 12675      2000
 12676              	.LASF36:
 12677 1e7a 5F5F4348 		.ascii	"__CHAR32_TYPE__ long unsigned int\000"
 12677      41523332 
 12677      5F545950 
 12677      455F5F20 
 12677      6C6F6E67 
 12678              	.LASF919:
 12679 1e9c 494E434C 		.ascii	"INCLUDE_uxTaskPriorityGet 1\000"
 12679      5544455F 
 12679      75785461 
 12679      736B5072 
 12679      696F7269 
 12680              	.LASF555:
 12681 1eb8 5F5F7261 		.ascii	"__rangeof(type,start,end) (__offsetof(type, end) - "
 12681      6E67656F 
 12681      66287479 
 12681      70652C73 
 12681      74617274 
 12682 1eeb 5F5F6F66 		.ascii	"__offsetof(type, start))\000"
 12682      66736574 
 12682      6F662874 
 12682      7970652C 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 284


 12682      20737461 
 12683              	.LASF391:
 12684 1f04 5F504F53 		.ascii	"_POSIX_C_SOURCE 200809L\000"
 12684      49585F43 
 12684      5F534F55 
 12684      52434520 
 12684      32303038 
 12685              	.LASF513:
 12686 1f1c 5F5F4343 		.ascii	"__CC_SUPPORTS_DYNAMIC_ARRAY_INIT 1\000"
 12686      5F535550 
 12686      504F5254 
 12686      535F4459 
 12686      4E414D49 
 12687              	.LASF114:
 12688 1f3f 5F5F5549 		.ascii	"__UINT_FAST32_MAX__ 0xffffffffU\000"
 12688      4E545F46 
 12688      41535433 
 12688      325F4D41 
 12688      585F5F20 
 12689              	.LASF1084:
 12690 1f5f 5F5F746D 		.ascii	"__tm_mon\000"
 12690      5F6D6F6E 
 12690      00
 12691              	.LASF127:
 12692 1f68 5F5F464C 		.ascii	"__FLT_MAX_EXP__ 128\000"
 12692      545F4D41 
 12692      585F4558 
 12692      505F5F20 
 12692      31323800 
 12693              	.LASF14:
 12694 1f7c 5F5F5349 		.ascii	"__SIZEOF_LONG__ 4\000"
 12694      5A454F46 
 12694      5F4C4F4E 
 12694      475F5F20 
 12694      3400
 12695              	.LASF514:
 12696 1f8e 5F5F5028 		.ascii	"__P(protos) protos\000"
 12696      70726F74 
 12696      6F732920 
 12696      70726F74 
 12696      6F7300
 12697              	.LASF431:
 12698 1fa1 5F504152 		.ascii	"_PARAMS(paramlist) paramlist\000"
 12698      414D5328 
 12698      70617261 
 12698      6D6C6973 
 12698      74292070 
 12699              	.LASF891:
 12700 1fbe 65727251 		.ascii	"errQUEUE_FULL ( 0 )\000"
 12700      55455545 
 12700      5F46554C 
 12700      4C202820 
 12700      30202900 
 12701              	.LASF843:
 12702 1fd2 5345454B 		.ascii	"SEEK_CUR 1\000"
 12702      5F435552 
 12702      203100
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 285


 12703              	.LASF1280:
 12704 1fdd 70785469 		.ascii	"pxTicksToWait\000"
 12704      636B7354 
 12704      6F576169 
 12704      7400
 12705              	.LASF18:
 12706 1feb 5F5F5349 		.ascii	"__SIZEOF_DOUBLE__ 8\000"
 12706      5A454F46 
 12706      5F444F55 
 12706      424C455F 
 12706      5F203800 
 12707              	.LASF923:
 12708 1fff 494E434C 		.ascii	"INCLUDE_vTaskDelayUntil 1\000"
 12708      5544455F 
 12708      76546173 
 12708      6B44656C 
 12708      6179556E 
 12709              	.LASF552:
 12710 2019 5F5F6578 		.ascii	"__exported __attribute__((__visibility__(\"default\""
 12710      706F7274 
 12710      6564205F 
 12710      5F617474 
 12710      72696275 
 12711 204b 29292900 		.ascii	")))\000"
 12712              	.LASF1274:
 12713 204f 70634E61 		.ascii	"pcName\000"
 12713      6D6500
 12714              	.LASF961:
 12715 2056 50524956 		.ascii	"PRIVILEGED_DATA \000"
 12715      494C4547 
 12715      45445F44 
 12715      41544120 
 12715      00
 12716              	.LASF987:
 12717 2067 74726163 		.ascii	"traceTAKE_MUTEX_RECURSIVE_FAILED(pxMutex) \000"
 12717      6554414B 
 12717      455F4D55 
 12717      5445585F 
 12717      52454355 
 12718              	.LASF784:
 12719 2092 5F5F755F 		.ascii	"__u_int_defined \000"
 12719      696E745F 
 12719      64656669 
 12719      6E656420 
 12719      00
 12720              	.LASF1156:
 12721 20a3 5F6D6973 		.ascii	"_misc_reent\000"
 12721      635F7265 
 12721      656E7400 
 12722              	.LASF687:
 12723 20af 5F524545 		.ascii	"_REENT_RAND48_SEED(ptr) ((ptr)->_r48->_seed)\000"
 12723      4E545F52 
 12723      414E4434 
 12723      385F5345 
 12723      45442870 
 12724              	.LASF398:
 12725 20dc 5F5F4C41 		.ascii	"__LARGEFILE_VISIBLE 0\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 286


 12725      52474546 
 12725      494C455F 
 12725      56495349 
 12725      424C4520 
 12726              	.LASF176:
 12727 20f2 5F5F4445 		.ascii	"__DEC64_MAX__ 9.999999999999999E384DD\000"
 12727      4336345F 
 12727      4D41585F 
 12727      5F20392E 
 12727      39393939 
 12728              	.LASF369:
 12729 2118 5F5F4E45 		.ascii	"__NEWLIB__ 2\000"
 12729      574C4942 
 12729      5F5F2032 
 12729      00
 12730              	.LASF870:
 12731 2125 5F5F6E65 		.ascii	"__need_wchar_t \000"
 12731      65645F77 
 12731      63686172 
 12731      5F742000 
 12732              	.LASF671:
 12733 2135 5F524545 		.ascii	"_REENT_INIT(var) { 0, (__FILE *)&__sf_fake_stdin, ("
 12733      4E545F49 
 12733      4E495428 
 12733      76617229 
 12733      207B2030 
 12734 2168 5F5F4649 		.ascii	"__FILE *)&__sf_fake_stdout, (__FILE *)&__sf_fake_st"
 12734      4C45202A 
 12734      29265F5F 
 12734      73665F66 
 12734      616B655F 
 12735 219b 64657272 		.ascii	"derr, 0, _NULL, 0, 0, _NULL, _NULL, _NULL, 0, 0, _N"
 12735      2C20302C 
 12735      205F4E55 
 12735      4C4C2C20 
 12735      302C2030 
 12736 21ce 554C4C2C 		.ascii	"ULL, _NULL, _NULL, _NULL, _NULL, _REENT_INIT_ATEXIT"
 12736      205F4E55 
 12736      4C4C2C20 
 12736      5F4E554C 
 12736      4C2C205F 
 12737 2201 207B5F4E 		.ascii	" {_NULL, 0, _NULL}, _NULL, _NULL, _NULL }\000"
 12737      554C4C2C 
 12737      20302C20 
 12737      5F4E554C 
 12737      4C7D2C20 
 12738              	.LASF877:
 12739 222b 45584954 		.ascii	"EXIT_SUCCESS 0\000"
 12739      5F535543 
 12739      43455353 
 12739      203000
 12740              	.LASF300:
 12741 223a 5F5F5554 		.ascii	"__UTA_FBIT__ 64\000"
 12741      415F4642 
 12741      49545F5F 
 12741      20363400 
 12742              	.LASF397:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 287


 12743 224a 5F5F4953 		.ascii	"__ISO_C_VISIBLE 1999\000"
 12743      4F5F435F 
 12743      56495349 
 12743      424C4520 
 12743      31393939 
 12744              	.LASF129:
 12745 225f 5F5F464C 		.ascii	"__FLT_DECIMAL_DIG__ 9\000"
 12745      545F4445 
 12745      43494D41 
 12745      4C5F4449 
 12745      475F5F20 
 12746              	.LASF912:
 12747 2275 636F6E66 		.ascii	"configUSE_MUTEXES 1\000"
 12747      69675553 
 12747      455F4D55 
 12747      54455845 
 12747      53203100 
 12748              	.LASF1222:
 12749 2289 78537573 		.ascii	"xSuspendedTaskList\000"
 12749      70656E64 
 12749      65645461 
 12749      736B4C69 
 12749      737400
 12750              	.LASF1006:
 12751 229c 74726163 		.ascii	"traceTASK_SUSPEND(pxTaskToSuspend) \000"
 12751      65544153 
 12751      4B5F5355 
 12751      5350454E 
 12751      44287078 
 12752              	.LASF45:
 12753 22c0 5F5F5549 		.ascii	"__UINT64_TYPE__ long long unsigned int\000"
 12753      4E543634 
 12753      5F545950 
 12753      455F5F20 
 12753      6C6F6E67 
 12754              	.LASF903:
 12755 22e7 636F6E66 		.ascii	"configCPU_CLOCK_HZ ( ( unsigned portLONG ) 72000000"
 12755      69674350 
 12755      555F434C 
 12755      4F434B5F 
 12755      485A2028 
 12756 231a 202900   		.ascii	" )\000"
 12757              	.LASF851:
 12758 231d 5F737464 		.ascii	"_stderr_r(x) ((x)->_stderr)\000"
 12758      6572725F 
 12758      72287829 
 12758      20282878 
 12758      292D3E5F 
 12759              	.LASF586:
 12760 2339 5F5F6173 		.ascii	"__asserts_exclusive(...) __lock_annotate(assert_exc"
 12760      73657274 
 12760      735F6578 
 12760      636C7573 
 12760      69766528 
 12761 236c 6C757369 		.ascii	"lusive_lock(__VA_ARGS__))\000"
 12761      76655F6C 
 12761      6F636B28 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 288


 12761      5F5F5641 
 12761      5F415247 
 12762              	.LASF1168:
 12763 2386 5F5F7366 		.ascii	"__sf_fake_stdin\000"
 12763      5F66616B 
 12763      655F7374 
 12763      64696E00 
 12764              	.LASF859:
 12765 2396 5F5F7363 		.ascii	"__sclearerr(p) ((void)((p)->_flags &= ~(__SERR|__SE"
 12765      6C656172 
 12765      65727228 
 12765      70292028 
 12765      28766F69 
 12766 23c9 4F462929 		.ascii	"OF)))\000"
 12766      2900
 12767              	.LASF478:
 12768 23cf 5F5F7074 		.ascii	"__ptr_t void *\000"
 12768      725F7420 
 12768      766F6964 
 12768      202A00
 12769              	.LASF377:
 12770 23de 5F484156 		.ascii	"_HAVE_LONG_DOUBLE 1\000"
 12770      455F4C4F 
 12770      4E475F44 
 12770      4F55424C 
 12770      45203100 
 12771              	.LASF1258:
 12772 23f2 70784E65 		.ascii	"pxNextTCB\000"
 12772      78745443 
 12772      4200
 12773              	.LASF540:
 12774 23fc 5F5F616C 		.ascii	"__always_inline __attribute__((__always_inline__))\000"
 12774      77617973 
 12774      5F696E6C 
 12774      696E6520 
 12774      5F5F6174 
 12775              	.LASF196:
 12776 242f 5F5F4652 		.ascii	"__FRACT_FBIT__ 15\000"
 12776      4143545F 
 12776      46424954 
 12776      5F5F2031 
 12776      3500
 12777              	.LASF260:
 12778 2441 5F5F4C4C 		.ascii	"__LLACCUM_EPSILON__ 0x1P-31LLK\000"
 12778      41434355 
 12778      4D5F4550 
 12778      53494C4F 
 12778      4E5F5F20 
 12779              	.LASF4:
 12780 2460 5F5F474E 		.ascii	"__GNUC_PATCHLEVEL__ 0\000"
 12780      55435F50 
 12780      41544348 
 12780      4C455645 
 12780      4C5F5F20 
 12781              	.LASF313:
 12782 2476 5F5F4743 		.ascii	"__GCC_ATOMIC_CHAR32_T_LOCK_FREE 2\000"
 12782      435F4154 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 289


 12782      4F4D4943 
 12782      5F434841 
 12782      5233325F 
 12783              	.LASF531:
 12784 2498 5F5F616C 		.ascii	"__alloc_align(x) __attribute__((__alloc_align__(x))"
 12784      6C6F635F 
 12784      616C6967 
 12784      6E287829 
 12784      205F5F61 
 12785 24cb 2900     		.ascii	")\000"
 12786              	.LASF865:
 12787 24cd 67657463 		.ascii	"getchar() getc(stdin)\000"
 12787      68617228 
 12787      29206765 
 12787      74632873 
 12787      7464696E 
 12788              	.LASF102:
 12789 24e3 5F5F5549 		.ascii	"__UINT_LEAST16_MAX__ 0xffff\000"
 12789      4E545F4C 
 12789      45415354 
 12789      31365F4D 
 12789      41585F5F 
 12790              	.LASF937:
 12791 24ff 706F7274 		.ascii	"portSHORT short\000"
 12791      53484F52 
 12791      54207368 
 12791      6F727400 
 12792              	.LASF955:
 12793 250f 706F7274 		.ascii	"portTASK_FUNCTION(vFunction,pvParameters) void vFun"
 12793      5441534B 
 12793      5F46554E 
 12793      4354494F 
 12793      4E287646 
 12794 2542 6374696F 		.ascii	"ction( void *pvParameters )\000"
 12794      6E282076 
 12794      6F696420 
 12794      2A707650 
 12794      6172616D 
 12795              	.LASF986:
 12796 255e 74726163 		.ascii	"traceTAKE_MUTEX_RECURSIVE(pxMutex) \000"
 12796      6554414B 
 12796      455F4D55 
 12796      5445585F 
 12796      52454355 
 12797              	.LASF427:
 12798 2582 5F444546 		.ascii	"_DEFUN(name,arglist,args) name(args)\000"
 12798      554E286E 
 12798      616D652C 
 12798      6172676C 
 12798      6973742C 
 12799              	.LASF549:
 12800 25a7 5F5F7072 		.ascii	"__predict_true(exp) __builtin_expect((exp), 1)\000"
 12800      65646963 
 12800      745F7472 
 12800      75652865 
 12800      78702920 
 12801              	.LASF980:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 290


 12802 25d6 74726163 		.ascii	"traceQUEUE_CREATE(pxNewQueue) \000"
 12802      65515545 
 12802      55455F43 
 12802      52454154 
 12802      45287078 
 12803              	.LASF256:
 12804 25f5 5F5F4C4C 		.ascii	"__LLACCUM_FBIT__ 31\000"
 12804      41434355 
 12804      4D5F4642 
 12804      49545F5F 
 12804      20333100 
 12805              	.LASF756:
 12806 2609 5F5F7469 		.ascii	"__time_t_defined \000"
 12806      6D655F74 
 12806      5F646566 
 12806      696E6564 
 12806      2000
 12807              	.LASF482:
 12808 261b 5F5F6174 		.ascii	"__attribute_format_strfmon__(a,b) \000"
 12808      74726962 
 12808      7574655F 
 12808      666F726D 
 12808      61745F73 
 12809              	.LASF464:
 12810 263e 5F425344 		.ascii	"_BSD_SIZE_T_DEFINED_ \000"
 12810      5F53495A 
 12810      455F545F 
 12810      44454649 
 12810      4E45445F 
 12811              	.LASF1273:
 12812 2654 70727649 		.ascii	"prvInitialiseTCBVariables\000"
 12812      6E697469 
 12812      616C6973 
 12812      65544342 
 12812      56617269 
 12813              	.LASF60:
 12814 266e 5F5F5549 		.ascii	"__UINT_FAST32_TYPE__ unsigned int\000"
 12814      4E545F46 
 12814      41535433 
 12814      325F5459 
 12814      50455F5F 
 12815              	.LASF466:
 12816 2690 5F5F5F69 		.ascii	"___int_size_t_h \000"
 12816      6E745F73 
 12816      697A655F 
 12816      745F6820 
 12816      00
 12817              	.LASF1231:
 12818 26a1 784E756D 		.ascii	"xNumOfOverflows\000"
 12818      4F664F76 
 12818      6572666C 
 12818      6F777300 
 12819              	.LASF17:
 12820 26b1 5F5F5349 		.ascii	"__SIZEOF_FLOAT__ 4\000"
 12820      5A454F46 
 12820      5F464C4F 
 12820      41545F5F 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 291


 12820      203400
 12821              	.LASF227:
 12822 26c4 5F5F5341 		.ascii	"__SACCUM_IBIT__ 8\000"
 12822      4343554D 
 12822      5F494249 
 12822      545F5F20 
 12822      3800
 12823              	.LASF505:
 12824 26d6 5F5F474E 		.ascii	"__GNUCLIKE_MATH_BUILTIN_RELOPS \000"
 12824      55434C49 
 12824      4B455F4D 
 12824      4154485F 
 12824      4255494C 
 12825              	.LASF311:
 12826 26f6 5F5F4743 		.ascii	"__GCC_ATOMIC_CHAR_LOCK_FREE 2\000"
 12826      435F4154 
 12826      4F4D4943 
 12826      5F434841 
 12826      525F4C4F 
 12827              	.LASF37:
 12828 2714 5F5F5349 		.ascii	"__SIG_ATOMIC_TYPE__ int\000"
 12828      475F4154 
 12828      4F4D4943 
 12828      5F545950 
 12828      455F5F20 
 12829              	.LASF183:
 12830 272c 5F5F4445 		.ascii	"__DEC128_MAX__ 9.999999999999999999999999999999999E"
 12830      43313238 
 12830      5F4D4158 
 12830      5F5F2039 
 12830      2E393939 
 12831 275f 36313434 		.ascii	"6144DL\000"
 12831      444C00
 12832              	.LASF199:
 12833 2766 5F5F4652 		.ascii	"__FRACT_MAX__ 0X7FFFP-15R\000"
 12833      4143545F 
 12833      4D41585F 
 12833      5F203058 
 12833      37464646 
 12834              	.LASF118:
 12835 2780 5F5F4743 		.ascii	"__GCC_IEC_559 0\000"
 12835      435F4945 
 12835      435F3535 
 12835      39203000 
 12836              	.LASF984:
 12837 2790 74726163 		.ascii	"traceGIVE_MUTEX_RECURSIVE(pxMutex) \000"
 12837      65474956 
 12837      455F4D55 
 12837      5445585F 
 12837      52454355 
 12838              	.LASF748:
 12839 27b4 5F5F6874 		.ascii	"__htonl(_x) __bswap32(_x)\000"
 12839      6F6E6C28 
 12839      5F782920 
 12839      5F5F6273 
 12839      77617033 
 12840              	.LASF110:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 292


 12841 27ce 5F5F494E 		.ascii	"__INT_FAST32_MAX__ 0x7fffffff\000"
 12841      545F4641 
 12841      53543332 
 12841      5F4D4158 
 12841      5F5F2030 
 12842              	.LASF7:
 12843 27ec 5F5F4154 		.ascii	"__ATOMIC_SEQ_CST 5\000"
 12843      4F4D4943 
 12843      5F534551 
 12843      5F435354 
 12843      203500
 12844              	.LASF408:
 12845 27ff 5F524541 		.ascii	"_READ_WRITE_RETURN_TYPE int\000"
 12845      445F5752 
 12845      4954455F 
 12845      52455455 
 12845      524E5F54 
 12846              	.LASF855:
 12847 281b 5F5F7367 		.ascii	"__sgetc_raw_r(__ptr,__f) (--(__f)->_r < 0 ? __srget"
 12847      6574635F 
 12847      7261775F 
 12847      72285F5F 
 12847      7074722C 
 12848 284e 5F72285F 		.ascii	"_r(__ptr, __f) : (int)(*(__f)->_p++))\000"
 12848      5F707472 
 12848      2C205F5F 
 12848      6629203A 
 12848      2028696E 
 12849              	.LASF797:
 12850 2874 5F444556 		.ascii	"_DEV_T_DECLARED \000"
 12850      5F545F44 
 12850      45434C41 
 12850      52454420 
 12850      00
 12851              	.LASF1114:
 12852 2885 5F756E73 		.ascii	"_unspecified_locale_info\000"
 12852      70656369 
 12852      66696564 
 12852      5F6C6F63 
 12852      616C655F 
 12853              	.LASF1245:
 12854 289e 78526574 		.ascii	"xReturn\000"
 12854      75726E00 
 12855              	.LASF568:
 12856 28a6 5F5F7379 		.ascii	"__sym_default(sym,impl,verid) __asm__(\".symver \" "
 12856      6D5F6465 
 12856      6661756C 
 12856      74287379 
 12856      6D2C696D 
 12857 28d7 23696D70 		.ascii	"#impl \", \" #sym \"@@\" #verid)\000"
 12857      6C20222C 
 12857      20222023 
 12857      73796D20 
 12857      22404022 
 12858              	.LASF1229:
 12859 28f4 75784D69 		.ascii	"uxMissedTicks\000"
 12859      73736564 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 293


 12859      5469636B 
 12859      7300
 12860              	.LASF1106:
 12861 2902 5F726565 		.ascii	"_reent\000"
 12861      6E7400
 12862              	.LASF89:
 12863 2909 5F5F5549 		.ascii	"__UINT16_MAX__ 0xffff\000"
 12863      4E543136 
 12863      5F4D4158 
 12863      5F5F2030 
 12863      78666666 
 12864              	.LASF815:
 12865 291f 5F66756E 		.ascii	"_funlockfile(fp) (((fp)->_flags & __SSTR) ? 0 : __l"
 12865      6C6F636B 
 12865      66696C65 
 12865      28667029 
 12865      20282828 
 12866 2952 6F636B5F 		.ascii	"ock_release_recursive((fp)->_lock))\000"
 12866      72656C65 
 12866      6173655F 
 12866      72656375 
 12866      72736976 
 12867              	.LASF274:
 12868 2976 5F5F5451 		.ascii	"__TQ_FBIT__ 127\000"
 12868      5F464249 
 12868      545F5F20 
 12868      31323700 
 12869              	.LASF862:
 12870 2986 70757463 		.ascii	"putc(x,fp) __sputc_r(_REENT, x, fp)\000"
 12870      28782C66 
 12870      7029205F 
 12870      5F737075 
 12870      74635F72 
 12871              	.LASF1317:
 12872 29aa 70785461 		.ascii	"pxTaskToSuspend\000"
 12872      736B546F 
 12872      53757370 
 12872      656E6400 
 12873              	.LASF532:
 12874 29ba 5F416C69 		.ascii	"_Alignas(x) __aligned(x)\000"
 12874      676E6173 
 12874      28782920 
 12874      5F5F616C 
 12874      69676E65 
 12875              	.LASF1195:
 12876 29d3 7854696D 		.ascii	"xTimeOnEntering\000"
 12876      654F6E45 
 12876      6E746572 
 12876      696E6700 
 12877              	.LASF812:
 12878 29e3 5F5F4649 		.ascii	"__FILE_defined \000"
 12878      4C455F64 
 12878      6566696E 
 12878      65642000 
 12879              	.LASF419:
 12880 29f3 5F564F4C 		.ascii	"_VOLATILE volatile\000"
 12880      4154494C 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 294


 12880      4520766F 
 12880      6C617469 
 12880      6C6500
 12881              	.LASF16:
 12882 2a06 5F5F5349 		.ascii	"__SIZEOF_SHORT__ 2\000"
 12882      5A454F46 
 12882      5F53484F 
 12882      52545F5F 
 12882      203200
 12883              	.LASF261:
 12884 2a19 5F5F554C 		.ascii	"__ULLACCUM_FBIT__ 32\000"
 12884      4C414343 
 12884      554D5F46 
 12884      4249545F 
 12884      5F203332 
 12885              	.LASF426:
 12886 2a2e 5F455846 		.ascii	"_EXFNPTR(name,proto) (* name) proto\000"
 12886      4E505452 
 12886      286E616D 
 12886      652C7072 
 12886      6F746F29 
 12887              	.LASF1026:
 12888 2a52 74736B49 		.ascii	"tskIDLE_PRIORITY ( ( unsigned portBASE_TYPE ) 0 )\000"
 12888      444C455F 
 12888      5052494F 
 12888      52495459 
 12888      20282028 
 12889              	.LASF651:
 12890 2a84 5F434C4F 		.ascii	"_CLOCK_T_ unsigned long\000"
 12890      434B5F54 
 12890      5F20756E 
 12890      7369676E 
 12890      6564206C 
 12891              	.LASF574:
 12892 2a9c 5F5F4445 		.ascii	"__DECONST(type,var) ((type)(__uintptr_t)(const void"
 12892      434F4E53 
 12892      54287479 
 12892      70652C76 
 12892      61722920 
 12893 2acf 202A2928 		.ascii	" *)(var))\000"
 12893      76617229 
 12893      2900
 12894              	.LASF131:
 12895 2ad9 5F5F464C 		.ascii	"__FLT_MIN__ 1.1754943508222875e-38F\000"
 12895      545F4D49 
 12895      4E5F5F20 
 12895      312E3137 
 12895      35343934 
 12896              	.LASF383:
 12897 2afd 5F535953 		.ascii	"_SYS_FEATURES_H \000"
 12897      5F464541 
 12897      54555245 
 12897      535F4820 
 12897      00
 12898              	.LASF1189:
 12899 2b0e 7078496E 		.ascii	"pxIndex\000"
 12899      64657800 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 295


 12900              	.LASF1203:
 12901 2b16 7078546F 		.ascii	"pxTopOfStack\000"
 12901      704F6653 
 12901      7461636B 
 12901      00
 12902              	.LASF1111:
 12903 2b23 5F696E63 		.ascii	"_inc\000"
 12903      00
 12904              	.LASF1044:
 12905 2b28 74736B52 		.ascii	"tskREADY_CHAR ( ( signed char ) 'R' )\000"
 12905      45414459 
 12905      5F434841 
 12905      52202820 
 12905      28207369 
 12906              	.LASF1252:
 12907 2b4e 7573436F 		.ascii	"usCount\000"
 12907      756E7400 
 12908              	.LASF1035:
 12909 2b56 78546173 		.ascii	"xTaskCreate(pvTaskCode,pcName,usStackDepth,pvParame"
 12909      6B437265 
 12909      61746528 
 12909      70765461 
 12909      736B436F 
 12910 2b89 74657273 		.ascii	"ters,uxPriority,pxCreatedTask) xTaskGenericCreate( "
 12910      2C757850 
 12910      72696F72 
 12910      6974792C 
 12910      70784372 
 12911 2bbc 28207076 		.ascii	"( pvTaskCode ), ( pcName ), ( usStackDepth ), ( pvP"
 12911      5461736B 
 12911      436F6465 
 12911      20292C20 
 12911      28207063 
 12912 2bef 6172616D 		.ascii	"arameters ), ( uxPriority ), ( pxCreatedTask ), ( N"
 12912      65746572 
 12912      7320292C 
 12912      20282075 
 12912      78507269 
 12913 2c22 554C4C20 		.ascii	"ULL ), ( NULL ) )\000"
 12913      292C2028 
 12913      204E554C 
 12913      4C202920 
 12913      2900
 12914              	.LASF1335:
 12915 2c34 52746F73 		.ascii	"RtosV611/Source/tasks.c\000"
 12915      56363131 
 12915      2F536F75 
 12915      7263652F 
 12915      7461736B 
 12916              	.LASF1266:
 12917 2c4c 70727641 		.ascii	"prvAllocateTCBAndStack\000"
 12917      6C6C6F63 
 12917      61746554 
 12917      4342416E 
 12917      64537461 
 12918              	.LASF19:
 12919 2c63 5F5F5349 		.ascii	"__SIZEOF_LONG_DOUBLE__ 8\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 296


 12919      5A454F46 
 12919      5F4C4F4E 
 12919      475F444F 
 12919      55424C45 
 12920              	.LASF1227:
 12921 2c7c 78536368 		.ascii	"xSchedulerRunning\000"
 12921      6564756C 
 12921      65725275 
 12921      6E6E696E 
 12921      6700
 12922              	.LASF322:
 12923 2c8e 5F5F5052 		.ascii	"__PRAGMA_REDEFINE_EXTNAME 1\000"
 12923      41474D41 
 12923      5F524544 
 12923      4546494E 
 12923      455F4558 
 12924              	.LASF31:
 12925 2caa 5F5F5743 		.ascii	"__WCHAR_TYPE__ unsigned int\000"
 12925      4841525F 
 12925      54595045 
 12925      5F5F2075 
 12925      6E736967 
 12926              	.LASF685:
 12927 2cc6 5F524545 		.ascii	"_REENT_SIGNGAM(ptr) ((ptr)->_gamma_signgam)\000"
 12927      4E545F53 
 12927      49474E47 
 12927      414D2870 
 12927      74722920 
 12928              	.LASF1338:
 12929 2cf2 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 12929      6C696361 
 12929      74696F6E 
 12929      53746163 
 12929      6B4F7665 
 12930              	.LASF931:
 12931 2d10 504F5254 		.ascii	"PORTABLE_H \000"
 12931      41424C45 
 12931      5F482000 
 12932              	.LASF1282:
 12933 2d1c 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 12933      6B52656D 
 12933      6F766546 
 12933      726F6D45 
 12933      76656E74 
 12934              	.LASF297:
 12935 2d35 5F5F5553 		.ascii	"__USA_IBIT__ 16\000"
 12935      415F4942 
 12935      49545F5F 
 12935      20313600 
 12936              	.LASF308:
 12937 2d45 5F5F4743 		.ascii	"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1\000"
 12937      435F4841 
 12937      56455F53 
 12937      594E435F 
 12937      434F4D50 
 12938              	.LASF1249:
 12939 2d6a 7063456E 		.ascii	"pcEndOfStack\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 297


 12939      644F6653 
 12939      7461636B 
 12939      00
 12940              	.LASF553:
 12941 2d77 5F5F6869 		.ascii	"__hidden __attribute__((__visibility__(\"hidden\"))"
 12941      6464656E 
 12941      205F5F61 
 12941      74747269 
 12941      62757465 
 12942 2da8 2900     		.ascii	")\000"
 12943              	.LASF910:
 12944 2daa 636F6E66 		.ascii	"configUSE_16_BIT_TICKS 0\000"
 12944      69675553 
 12944      455F3136 
 12944      5F424954 
 12944      5F544943 
 12945              	.LASF1096:
 12946 2dc3 5F666E73 		.ascii	"_fns\000"
 12946      00
 12947              	.LASF189:
 12948 2dc8 5F5F5346 		.ascii	"__SFRACT_MAX__ 0X7FP-7HR\000"
 12948      52414354 
 12948      5F4D4158 
 12948      5F5F2030 
 12948      58374650 
 12949              	.LASF1332:
 12950 2de1 70785461 		.ascii	"pxTaskCode\000"
 12950      736B436F 
 12950      646500
 12951              	.LASF61:
 12952 2dec 5F5F5549 		.ascii	"__UINT_FAST64_TYPE__ long long unsigned int\000"
 12952      4E545F46 
 12952      41535436 
 12952      345F5459 
 12952      50455F5F 
 12953              	.LASF1185:
 12954 2e18 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 12954      495F4C49 
 12954      53545F49 
 12954      54454D00 
 12955              	.LASF958:
 12956 2e28 706F7274 		.ascii	"portNUM_CONFIGURABLE_REGIONS 1\000"
 12956      4E554D5F 
 12956      434F4E46 
 12956      49475552 
 12956      41424C45 
 12957              	.LASF649:
 12958 2e47 5F57494E 		.ascii	"_WINT_T \000"
 12958      545F5420 
 12958      00
 12959              	.LASF1133:
 12960 2e50 5F636C6F 		.ascii	"_close\000"
 12960      736500
 12961              	.LASF437:
 12962 2e57 5F5F6E65 		.ascii	"__need_size_t \000"
 12962      65645F73 
 12962      697A655F 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 298


 12962      742000
 12963              	.LASF286:
 12964 2e66 5F5F4841 		.ascii	"__HA_FBIT__ 7\000"
 12964      5F464249 
 12964      545F5F20 
 12964      3700
 12965              	.LASF698:
 12966 2e74 5F524545 		.ascii	"_REENT_MBLEN_STATE(ptr) ((ptr)->_misc->_mblen_state"
 12966      4E545F4D 
 12966      424C454E 
 12966      5F535441 
 12966      54452870 
 12967 2ea7 2900     		.ascii	")\000"
 12968              	.LASF990:
 12969 2ea9 74726163 		.ascii	"traceQUEUE_SEND(pxQueue) \000"
 12969      65515545 
 12969      55455F53 
 12969      454E4428 
 12969      70785175 
 12970              	.LASF1295:
 12971 2ec3 76546173 		.ascii	"vTaskStartTrace\000"
 12971      6B537461 
 12971      72745472 
 12971      61636500 
 12972              	.LASF541:
 12973 2ed3 5F5F6E6F 		.ascii	"__noinline __attribute__ ((__noinline__))\000"
 12973      696E6C69 
 12973      6E65205F 
 12973      5F617474 
 12973      72696275 
 12974              	.LASF641:
 12975 2efd 5F5F6C6F 		.ascii	"__lock_try_acquire(lock) (_CAST_VOID 0)\000"
 12975      636B5F74 
 12975      72795F61 
 12975      63717569 
 12975      7265286C 
 12976              	.LASF166:
 12977 2f25 5F5F4445 		.ascii	"__DEC32_MIN_EXP__ (-94)\000"
 12977      4333325F 
 12977      4D494E5F 
 12977      4558505F 
 12977      5F20282D 
 12978              	.LASF192:
 12979 2f3d 5F5F5553 		.ascii	"__USFRACT_IBIT__ 0\000"
 12979      46524143 
 12979      545F4942 
 12979      49545F5F 
 12979      203000
 12980              	.LASF895:
 12981 2f50 65727251 		.ascii	"errQUEUE_YIELD ( -5 )\000"
 12981      55455545 
 12981      5F594945 
 12981      4C442028 
 12981      202D3520 
 12982              	.LASF522:
 12983 2f66 5F5F7765 		.ascii	"__weak_symbol __attribute__((__weak__))\000"
 12983      616B5F73 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 299


 12983      796D626F 
 12983      6C205F5F 
 12983      61747472 
 12984              	.LASF193:
 12985 2f8e 5F5F5553 		.ascii	"__USFRACT_MIN__ 0.0UHR\000"
 12985      46524143 
 12985      545F4D49 
 12985      4E5F5F20 
 12985      302E3055 
 12986              	.LASF526:
 12987 2fa5 5F5F7573 		.ascii	"__used __attribute__((__used__))\000"
 12987      6564205F 
 12987      5F617474 
 12987      72696275 
 12987      74655F5F 
 12988              	.LASF1010:
 12989 2fc6 636F6E66 		.ascii	"configUSE_MALLOC_FAILED_HOOK 0\000"
 12989      69675553 
 12989      455F4D41 
 12989      4C4C4F43 
 12989      5F464149 
 12990              	.LASF352:
 12991 2fe5 5F5F4152 		.ascii	"__ARM_NEON\000"
 12991      4D5F4E45 
 12991      4F4E00
 12992              	.LASF696:
 12993 2ff0 5F524545 		.ascii	"_REENT_EMERGENCY(ptr) ((ptr)->_emergency)\000"
 12993      4E545F45 
 12993      4D455247 
 12993      454E4359 
 12993      28707472 
 12994              	.LASF1077:
 12995 301a 5F776473 		.ascii	"_wds\000"
 12995      00
 12996              	.LASF88:
 12997 301f 5F5F5549 		.ascii	"__UINT8_MAX__ 0xff\000"
 12997      4E54385F 
 12997      4D41585F 
 12997      5F203078 
 12997      666600
 12998              	.LASF445:
 12999 3032 5F5F5F69 		.ascii	"___int16_t_defined 1\000"
 12999      6E743136 
 12999      5F745F64 
 12999      6566696E 
 12999      65642031 
 13000              	.LASF712:
 13001 3047 5F524545 		.ascii	"_REENT _impure_ptr\000"
 13001      4E54205F 
 13001      696D7075 
 13001      72655F70 
 13001      747200
 13002              	.LASF155:
 13003 305a 5F5F4C44 		.ascii	"__LDBL_MAX_EXP__ 1024\000"
 13003      424C5F4D 
 13003      41585F45 
 13003      58505F5F 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 300


 13003      20313032 
 13004              	.LASF867:
 13005 3070 67657463 		.ascii	"getchar_unlocked() getc_unlocked(stdin)\000"
 13005      6861725F 
 13005      756E6C6F 
 13005      636B6564 
 13005      28292067 
 13006              	.LASF1290:
 13007 3098 75634578 		.ascii	"ucExpectedStackBytes\000"
 13007      70656374 
 13007      65645374 
 13007      61636B42 
 13007      79746573 
 13008              	.LASF1108:
 13009 30ad 5F737464 		.ascii	"_stdin\000"
 13009      696E00
 13010              	.LASF425:
 13011 30b4 5F455850 		.ascii	"_EXPARM(name,proto) (* name) proto\000"
 13011      41524D28 
 13011      6E616D65 
 13011      2C70726F 
 13011      746F2920 
 13012              	.LASF455:
 13013 30d7 5F53495A 		.ascii	"_SIZE_T \000"
 13013      455F5420 
 13013      00
 13014              	.LASF148:
 13015 30e0 5F5F4442 		.ascii	"__DBL_HAS_DENORM__ 1\000"
 13015      4C5F4841 
 13015      535F4445 
 13015      4E4F524D 
 13015      5F5F2031 
 13016              	.LASF738:
 13017 30f5 5F425954 		.ascii	"_BYTE_ORDER _LITTLE_ENDIAN\000"
 13017      455F4F52 
 13017      44455220 
 13017      5F4C4954 
 13017      544C455F 
 13018              	.LASF508:
 13019 3110 5F5F4343 		.ascii	"__CC_SUPPORTS___INLINE 1\000"
 13019      5F535550 
 13019      504F5254 
 13019      535F5F5F 
 13019      494E4C49 
 13020              	.LASF375:
 13021 3129 5F4D425F 		.ascii	"_MB_LEN_MAX 1\000"
 13021      4C454E5F 
 13021      4D415820 
 13021      3100
 13022              	.LASF657:
 13023 3137 5F415445 		.ascii	"_ATEXIT_SIZE 32\000"
 13023      5849545F 
 13023      53495A45 
 13023      20333200 
 13024              	.LASF1329:
 13025 3147 76546173 		.ascii	"vTaskDelete\000"
 13025      6B44656C 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 301


 13025      65746500 
 13026              	.LASF66:
 13027 3153 5F5F4758 		.ascii	"__GXX_ABI_VERSION 1010\000"
 13027      585F4142 
 13027      495F5645 
 13027      5253494F 
 13027      4E203130 
 13028              	.LASF909:
 13029 316a 636F6E66 		.ascii	"configUSE_TRACE_FACILITY 1\000"
 13029      69675553 
 13029      455F5452 
 13029      4143455F 
 13029      46414349 
 13030              	.LASF290:
 13031 3185 5F5F4441 		.ascii	"__DA_FBIT__ 31\000"
 13031      5F464249 
 13031      545F5F20 
 13031      333100
 13032              	.LASF821:
 13033 3194 5F5F5345 		.ascii	"__SEOF 0x0020\000"
 13033      4F462030 
 13033      78303032 
 13033      3000
 13034              	.LASF830:
 13035 31a2 5F5F534C 		.ascii	"__SL64 0x8000\000"
 13035      36342030 
 13035      78383030 
 13035      3000
 13036              	.LASF94:
 13037 31b0 5F5F494E 		.ascii	"__INT_LEAST16_MAX__ 0x7fff\000"
 13037      545F4C45 
 13037      41535431 
 13037      365F4D41 
 13037      585F5F20 
 13038              	.LASF1211:
 13039 31cb 756C5275 		.ascii	"ulRunTimeCounter\000"
 13039      6E54696D 
 13039      65436F75 
 13039      6E746572 
 13039      00
 13040              	.LASF774:
 13041 31dc 46445F53 		.ascii	"FD_SET(n,p) ((p)->fds_bits[(n)/NFDBITS] |= (1L << ("
 13041      4554286E 
 13041      2C702920 
 13041      28287029 
 13041      2D3E6664 
 13042 320f 286E2920 		.ascii	"(n) % NFDBITS)))\000"
 13042      25204E46 
 13042      44424954 
 13042      53292929 
 13042      00
 13043              	.LASF133:
 13044 3220 5F5F464C 		.ascii	"__FLT_DENORM_MIN__ 1.4012984643248171e-45F\000"
 13044      545F4445 
 13044      4E4F524D 
 13044      5F4D494E 
 13044      5F5F2031 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 302


 13045              	.LASF158:
 13046 324b 5F5F4C44 		.ascii	"__LDBL_MAX__ 1.7976931348623157e+308L\000"
 13046      424C5F4D 
 13046      41585F5F 
 13046      20312E37 
 13046      39373639 
 13047              	.LASF1256:
 13048 3271 70784C69 		.ascii	"pxList\000"
 13048      737400
 13049              	.LASF746:
 13050 3278 5F5F6273 		.ascii	"__bswap32(_x) __builtin_bswap32(_x)\000"
 13050      77617033 
 13050      32285F78 
 13050      29205F5F 
 13050      6275696C 
 13051              	.LASF589:
 13052 329c 5F5F7265 		.ascii	"__requires_shared(...) __lock_annotate(shared_locks"
 13052      71756972 
 13052      65735F73 
 13052      68617265 
 13052      64282E2E 
 13053 32cf 5F726571 		.ascii	"_required(__VA_ARGS__))\000"
 13053      75697265 
 13053      64285F5F 
 13053      56415F41 
 13053      5247535F 
 13054              	.LASF413:
 13055 32e7 5F454E44 		.ascii	"_END_STD_C \000"
 13055      5F535444 
 13055      5F432000 
 13056              	.LASF692:
 13057 32f3 5F524545 		.ascii	"_REENT_MP_P5S(ptr) ((ptr)->_mp->_p5s)\000"
 13057      4E545F4D 
 13057      505F5035 
 13057      53287074 
 13057      72292028 
 13058              	.LASF458:
 13059 3319 5F545F53 		.ascii	"_T_SIZE \000"
 13059      495A4520 
 13059      00
 13060              	.LASF1312:
 13061 3322 78546173 		.ascii	"xTaskResumeFromISR\000"
 13061      6B526573 
 13061      756D6546 
 13061      726F6D49 
 13061      535200
 13062              	.LASF65:
 13063 3335 5F5F6861 		.ascii	"__has_include_next(STR) __has_include_next__(STR)\000"
 13063      735F696E 
 13063      636C7564 
 13063      655F6E65 
 13063      78742853 
 13064              	.LASF716:
 13065 3367 5F535953 		.ascii	"_SYS_TYPES_H \000"
 13065      5F545950 
 13065      45535F48 
 13065      2000
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 303


 13066              	.LASF758:
 13067 3375 5F54494D 		.ascii	"_TIMEVAL_DEFINED \000"
 13067      4556414C 
 13067      5F444546 
 13067      494E4544 
 13067      2000
 13068              	.LASF105:
 13069 3387 5F5F5549 		.ascii	"__UINT32_C(c) c ## UL\000"
 13069      4E543332 
 13069      5F432863 
 13069      29206320 
 13069      23232055 
 13070              	.LASF820:
 13071 339d 5F5F5352 		.ascii	"__SRW 0x0010\000"
 13071      57203078 
 13071      30303130 
 13071      00
 13072              	.LASF1018:
 13073 33aa 6C697374 		.ascii	"listSET_LIST_ITEM_VALUE(pxListItem,xValue) ( pxList"
 13073      5345545F 
 13073      4C495354 
 13073      5F495445 
 13073      4D5F5641 
 13074 33dd 4974656D 		.ascii	"Item )->xItemValue = xValue\000"
 13074      20292D3E 
 13074      78497465 
 13074      6D56616C 
 13074      7565203D 
 13075              	.LASF618:
 13076 33f9 5F5F5F69 		.ascii	"___int_wchar_t_h \000"
 13076      6E745F77 
 13076      63686172 
 13076      5F745F68 
 13076      2000
 13077              	.LASF699:
 13078 340b 5F524545 		.ascii	"_REENT_MBTOWC_STATE(ptr) ((ptr)->_misc->_mbtowc_sta"
 13078      4E545F4D 
 13078      42544F57 
 13078      435F5354 
 13078      41544528 
 13079 343e 74652900 		.ascii	"te)\000"
 13080              	.LASF824:
 13081 3442 5F5F5341 		.ascii	"__SAPP 0x0100\000"
 13081      50502030 
 13081      78303130 
 13081      3000
 13082              	.LASF132:
 13083 3450 5F5F464C 		.ascii	"__FLT_EPSILON__ 1.1920928955078125e-7F\000"
 13083      545F4550 
 13083      53494C4F 
 13083      4E5F5F20 
 13083      312E3139 
 13084              	.LASF518:
 13085 3477 5F5F5853 		.ascii	"__XSTRING(x) __STRING(x)\000"
 13085      5452494E 
 13085      47287829 
 13085      205F5F53 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 304


 13085      5452494E 
 13086              	.LASF481:
 13087 3490 5F5F6174 		.ascii	"__attribute_pure__ \000"
 13087      74726962 
 13087      7574655F 
 13087      70757265 
 13087      5F5F2000 
 13088              	.LASF783:
 13089 34a4 5F5F755F 		.ascii	"__u_short_defined \000"
 13089      73686F72 
 13089      745F6465 
 13089      66696E65 
 13089      642000
 13090              	.LASF1017:
 13091 34b7 6C697374 		.ascii	"listSET_LIST_ITEM_OWNER(pxListItem,pxOwner) ( pxLis"
 13091      5345545F 
 13091      4C495354 
 13091      5F495445 
 13091      4D5F4F57 
 13092 34ea 74497465 		.ascii	"tItem )->pvOwner = ( void * ) pxOwner\000"
 13092      6D20292D 
 13092      3E70764F 
 13092      776E6572 
 13092      203D2028 
 13093              	.LASF30:
 13094 3510 5F5F5054 		.ascii	"__PTRDIFF_TYPE__ int\000"
 13094      52444946 
 13094      465F5459 
 13094      50455F5F 
 13094      20696E74 
 13095              	.LASF947:
 13096 3525 706F7274 		.ascii	"portCLEAR_INTERRUPT_MASK() __asm volatile ( \"\011m"
 13096      434C4541 
 13096      525F494E 
 13096      54455252 
 13096      5550545F 
 13097 3554 6F762072 		.ascii	"ov r0, #0\011\011\011\011\011\\n\" \"\011msr basepr"
 13097      302C2023 
 13097      30090909 
 13097      09095C6E 
 13097      22202209 
 13098 3572 692C2072 		.ascii	"i, r0\011\011\011\011\\n\" :::\"r0\" )\000"
 13098      30090909 
 13098      095C6E22 
 13098      203A3A3A 
 13098      22723022 
 13099              	.LASF1007:
 13100 3589 74726163 		.ascii	"traceTASK_RESUME(pxTaskToResume) \000"
 13100      65544153 
 13100      4B5F5245 
 13100      53554D45 
 13100      28707854 
 13101              	.LASF827:
 13102 35ab 5F5F534E 		.ascii	"__SNPT 0x0800\000"
 13102      50542030 
 13102      78303830 
 13102      3000
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 305


 13103              	.LASF499:
 13104 35b9 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_VARARGS 1\000"
 13104      55434C49 
 13104      4B455F42 
 13104      55494C54 
 13104      494E5F56 
 13105              	.LASF832:
 13106 35d6 5F5F5357 		.ascii	"__SWID 0x2000\000"
 13106      49442030 
 13106      78323030 
 13106      3000
 13107              	.LASF726:
 13108 35e4 5F5F696E 		.ascii	"__int32_t_defined 1\000"
 13108      7433325F 
 13108      745F6465 
 13108      66696E65 
 13108      64203100 
 13109              	.LASF315:
 13110 35f8 5F5F4743 		.ascii	"__GCC_ATOMIC_SHORT_LOCK_FREE 2\000"
 13110      435F4154 
 13110      4F4D4943 
 13110      5F53484F 
 13110      52545F4C 
 13111              	.LASF1219:
 13112 3617 7850656E 		.ascii	"xPendingReadyList\000"
 13112      64696E67 
 13112      52656164 
 13112      794C6973 
 13112      7400
 13113              	.LASF754:
 13114 3629 5F535953 		.ascii	"_SYS__TIMEVAL_H_ \000"
 13114      5F5F5449 
 13114      4D455641 
 13114      4C5F485F 
 13114      2000
 13115              	.LASF269:
 13116 363b 5F5F4851 		.ascii	"__HQ_IBIT__ 0\000"
 13116      5F494249 
 13116      545F5F20 
 13116      3000
 13117              	.LASF231:
 13118 3649 5F5F5553 		.ascii	"__USACCUM_FBIT__ 8\000"
 13118      41434355 
 13118      4D5F4642 
 13118      49545F5F 
 13118      203800
 13119              	.LASF319:
 13120 365c 5F5F4743 		.ascii	"__GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1\000"
 13120      435F4154 
 13120      4F4D4943 
 13120      5F544553 
 13120      545F414E 
 13121              	.LASF792:
 13122 3680 5F5F6361 		.ascii	"__caddr_t_defined \000"
 13122      6464725F 
 13122      745F6465 
 13122      66696E65 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 306


 13122      642000
 13123              	.LASF399:
 13124 3693 5F5F4D49 		.ascii	"__MISC_VISIBLE 1\000"
 13124      53435F56 
 13124      49534942 
 13124      4C452031 
 13124      00
 13125              	.LASF628:
 13126 36a4 5F56415F 		.ascii	"_VA_LIST_DEFINED \000"
 13126      4C495354 
 13126      5F444546 
 13126      494E4544 
 13126      2000
 13127              	.LASF949:
 13128 36b6 706F7274 		.ascii	"portCLEAR_INTERRUPT_MASK_FROM_ISR(x) portCLEAR_INTE"
 13128      434C4541 
 13128      525F494E 
 13128      54455252 
 13128      5550545F 
 13129 36e9 52525550 		.ascii	"RRUPT_MASK();(void)x\000"
 13129      545F4D41 
 13129      534B2829 
 13129      3B28766F 
 13129      69642978 
 13130              	.LASF872:
 13131 36fe 5F4E4557 		.ascii	"_NEWLIB_ALLOCA_H \000"
 13131      4C49425F 
 13131      414C4C4F 
 13131      43415F48 
 13131      2000
 13132              	.LASF163:
 13133 3710 5F5F4C44 		.ascii	"__LDBL_HAS_INFINITY__ 1\000"
 13133      424C5F48 
 13133      41535F49 
 13133      4E46494E 
 13133      4954595F 
 13134              	.LASF896:
 13135 3728 46524545 		.ascii	"FREERTOS_CONFIG_H \000"
 13135      52544F53 
 13135      5F434F4E 
 13135      4649475F 
 13135      482000
 13136              	.LASF292:
 13137 373b 5F5F5441 		.ascii	"__TA_FBIT__ 63\000"
 13137      5F464249 
 13137      545F5F20 
 13137      363300
 13138              	.LASF705:
 13139 374a 5F524545 		.ascii	"_REENT_WCSRTOMBS_STATE(ptr) ((ptr)->_misc->_wcsrtom"
 13139      4E545F57 
 13139      43535254 
 13139      4F4D4253 
 13139      5F535441 
 13140 377d 62735F73 		.ascii	"bs_state)\000"
 13140      74617465 
 13140      2900
 13141              	.LASF1027:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 307


 13142 3787 7461736B 		.ascii	"taskYIELD() portYIELD()\000"
 13142      5949454C 
 13142      44282920 
 13142      706F7274 
 13142      5949454C 
 13143              	.LASF679:
 13144 379f 5F524545 		.ascii	"_REENT_INIT_MP(var) do { struct _reent *_r = (var);"
 13144      4E545F49 
 13144      4E49545F 
 13144      4D502876 
 13144      61722920 
 13145 37d2 205F722D 		.ascii	" _r->_mp->_result_k = 0; _r->_mp->_result = _r->_mp"
 13145      3E5F6D70 
 13145      2D3E5F72 
 13145      6573756C 
 13145      745F6B20 
 13146 3805 2D3E5F70 		.ascii	"->_p5s = _NULL; _r->_mp->_freelist = _NULL; } while"
 13146      3573203D 
 13146      205F4E55 
 13146      4C4C3B20 
 13146      5F722D3E 
 13147 3838 20283029 		.ascii	" (0)\000"
 13147      00
 13148              	.LASF1265:
 13149 383d 75735461 		.ascii	"usTaskCheckFreeStackSpace\000"
 13149      736B4368 
 13149      65636B46 
 13149      72656553 
 13149      7461636B 
 13150              	.LASF627:
 13151 3857 5F5F474E 		.ascii	"__GNUC_VA_LIST \000"
 13151      55435F56 
 13151      415F4C49 
 13151      53542000 
 13152              	.LASF926:
 13153 3867 636F6E66 		.ascii	"configKERNEL_INTERRUPT_PRIORITY 255\000"
 13153      69674B45 
 13153      524E454C 
 13153      5F494E54 
 13153      45525255 
 13154              	.LASF358:
 13155 388b 5F5F4152 		.ascii	"__ARM_ARCH_EXT_IDIV__ 1\000"
 13155      4D5F4152 
 13155      43485F45 
 13155      58545F49 
 13155      4449565F 
 13156              	.LASF356:
 13157 38a3 5F5F4152 		.ascii	"__ARM_PCS 1\000"
 13157      4D5F5043 
 13157      53203100 
 13158              	.LASF611:
 13159 38af 5F545F57 		.ascii	"_T_WCHAR \000"
 13159      43484152 
 13159      2000
 13160              	.LASF892:
 13161 38b9 65727243 		.ascii	"errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY ( -1 )\000"
 13161      4F554C44 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 308


 13161      5F4E4F54 
 13161      5F414C4C 
 13161      4F434154 
 13162              	.LASF539:
 13163 38e6 5F5F7075 		.ascii	"__pure __attribute__((__pure__))\000"
 13163      7265205F 
 13163      5F617474 
 13163      72696275 
 13163      74655F5F 
 13164              	.LASF277:
 13165 3907 5F5F5551 		.ascii	"__UQQ_IBIT__ 0\000"
 13165      515F4942 
 13165      49545F5F 
 13165      203000
 13166              	.LASF897:
 13167 3916 76506F72 		.ascii	"vPortSVCHandler SVC_Handler\000"
 13167      74535643 
 13167      48616E64 
 13167      6C657220 
 13167      5356435F 
 13168              	.LASF83:
 13169 3932 5F5F5349 		.ascii	"__SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)\000"
 13169      475F4154 
 13169      4F4D4943 
 13169      5F4D494E 
 13169      5F5F2028 
 13170              	.LASF898:
 13171 395f 78506F72 		.ascii	"xPortPendSVHandler PendSV_Handler\000"
 13171      7450656E 
 13171      64535648 
 13171      616E646C 
 13171      65722050 
 13172              	.LASF243:
 13173 3981 5F5F5541 		.ascii	"__UACCUM_MIN__ 0.0UK\000"
 13173      4343554D 
 13173      5F4D494E 
 13173      5F5F2030 
 13173      2E30554B 
 13174              	.LASF614:
 13175 3996 5F425344 		.ascii	"_BSD_WCHAR_T_ \000"
 13175      5F574348 
 13175      41525F54 
 13175      5F2000
 13176              	.LASF1288:
 13177 39a5 76546173 		.ascii	"vTaskSwitchContext\000"
 13177      6B537769 
 13177      74636843 
 13177      6F6E7465 
 13177      787400
 13178              	.LASF729:
 13179 39b8 5F5F696E 		.ascii	"__int64_t_defined 1\000"
 13179      7436345F 
 13179      745F6465 
 13179      66696E65 
 13179      64203100 
 13180              	.LASF546:
 13181 39cc 5F5F7265 		.ascii	"__returns_twice __attribute__((__returns_twice__))\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 309


 13181      7475726E 
 13181      735F7477 
 13181      69636520 
 13181      5F5F6174 
 13182              	.LASF991:
 13183 39ff 74726163 		.ascii	"traceQUEUE_SEND_FAILED(pxQueue) \000"
 13183      65515545 
 13183      55455F53 
 13183      454E445F 
 13183      4641494C 
 13184              	.LASF1129:
 13185 3a20 5F636F6F 		.ascii	"_cookie\000"
 13185      6B696500 
 13186              	.LASF640:
 13187 3a28 5F5F6C6F 		.ascii	"__lock_acquire_recursive(lock) (_CAST_VOID 0)\000"
 13187      636B5F61 
 13187      63717569 
 13187      72655F72 
 13187      65637572 
 13188              	.LASF1154:
 13189 3a56 5F703573 		.ascii	"_p5s\000"
 13189      00
 13190              	.LASF474:
 13191 3a5b 5F5F504D 		.ascii	"__PMT(args) args\000"
 13191      54286172 
 13191      67732920 
 13191      61726773 
 13191      00
 13192              	.LASF480:
 13193 3a6c 5F5F6174 		.ascii	"__attribute_malloc__ \000"
 13193      74726962 
 13193      7574655F 
 13193      6D616C6C 
 13193      6F635F5F 
 13194              	.LASF906:
 13195 3a82 636F6E66 		.ascii	"configMINIMAL_STACK_SIZE ( ( unsigned portSHORT ) 1"
 13195      69674D49 
 13195      4E494D41 
 13195      4C5F5354 
 13195      41434B5F 
 13196 3ab5 32382029 		.ascii	"28 )\000"
 13196      00
 13197              	.LASF793:
 13198 3aba 5F465342 		.ascii	"_FSBLKCNT_T_DECLARED \000"
 13198      4C4B434E 
 13198      545F545F 
 13198      4445434C 
 13198      41524544 
 13199              	.LASF744:
 13200 3ad0 42595445 		.ascii	"BYTE_ORDER _BYTE_ORDER\000"
 13200      5F4F5244 
 13200      4552205F 
 13200      42595445 
 13200      5F4F5244 
 13201              	.LASF1101:
 13202 3ae7 5F5F7346 		.ascii	"__sFILE_fake\000"
 13202      494C455F 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 310


 13202      66616B65 
 13202      00
 13203              	.LASF658:
 13204 3af4 5F415445 		.ascii	"_ATEXIT_INIT {_NULL, 0, {_NULL}, _NULL}\000"
 13204      5849545F 
 13204      494E4954 
 13204      207B5F4E 
 13204      554C4C2C 
 13205              	.LASF1261:
 13206 3b1c 7078436F 		.ascii	"pxConstList\000"
 13206      6E73744C 
 13206      69737400 
 13207              	.LASF900:
 13208 3b28 636F6E66 		.ascii	"configUSE_PREEMPTION 1\000"
 13208      69675553 
 13208      455F5052 
 13208      45454D50 
 13208      54494F4E 
 13209              	.LASF121:
 13210 3b3f 5F5F4445 		.ascii	"__DEC_EVAL_METHOD__ 2\000"
 13210      435F4556 
 13210      414C5F4D 
 13210      4554484F 
 13210      445F5F20 
 13211              	.LASF1333:
 13212 3b55 70784372 		.ascii	"pxCreatedTask\000"
 13212      65617465 
 13212      64546173 
 13212      6B00
 13213              	.LASF1020:
 13214 3b63 6C697374 		.ascii	"listLIST_IS_EMPTY(pxList) ( ( pxList )->uxNumberOfI"
 13214      4C495354 
 13214      5F49535F 
 13214      454D5054 
 13214      59287078 
 13215 3b96 74656D73 		.ascii	"tems == ( unsigned portBASE_TYPE ) 0 )\000"
 13215      203D3D20 
 13215      2820756E 
 13215      7369676E 
 13215      65642070 
 13216              	.LASF702:
 13217 3bbd 5F524545 		.ascii	"_REENT_MBRTOWC_STATE(ptr) ((ptr)->_misc->_mbrtowc_s"
 13217      4E545F4D 
 13217      4252544F 
 13217      57435F53 
 13217      54415445 
 13218 3bf0 74617465 		.ascii	"tate)\000"
 13218      2900
 13219              	.LASF885:
 13220 3bf6 50524F4A 		.ascii	"PROJDEFS_H \000"
 13220      44454653 
 13220      5F482000 
 13221              	.LASF1123:
 13222 3c02 5F736967 		.ascii	"_sig_func\000"
 13222      5F66756E 
 13222      6300
 13223              	.LASF178:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 311


 13224 3c0c 5F5F4445 		.ascii	"__DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD\000"
 13224      4336345F 
 13224      5355424E 
 13224      4F524D41 
 13224      4C5F4D49 
 13225              	.LASF195:
 13226 3c3d 5F5F5553 		.ascii	"__USFRACT_EPSILON__ 0x1P-8UHR\000"
 13226      46524143 
 13226      545F4550 
 13226      53494C4F 
 13226      4E5F5F20 
 13227              	.LASF472:
 13228 3c5b 4E554C4C 		.ascii	"NULL ((void *)0)\000"
 13228      20282876 
 13228      6F696420 
 13228      2A293029 
 13228      00
 13229              	.LASF536:
 13230 3c6c 5F546872 		.ascii	"_Thread_local __thread\000"
 13230      6561645F 
 13230      6C6F6361 
 13230      6C205F5F 
 13230      74687265 
 13231              	.LASF863:
 13232 3c83 66617374 		.ascii	"fast_putc(x,p) (--(p)->_w < 0 ? __swbuf_r(_REENT, ("
 13232      5F707574 
 13232      6328782C 
 13232      70292028 
 13232      2D2D2870 
 13233 3cb6 696E7429 		.ascii	"int)(x), p) == EOF : (*(p)->_p = (x), (p)->_p++, 0)"
 13233      2878292C 
 13233      20702920 
 13233      3D3D2045 
 13233      4F46203A 
 13234 3ce9 2900     		.ascii	")\000"
 13235              	.LASF940:
 13236 3ceb 706F7274 		.ascii	"portMAX_DELAY ( portTickType ) 0xffffffff\000"
 13236      4D41585F 
 13236      44454C41 
 13236      59202820 
 13236      706F7274 
 13237              	.LASF459:
 13238 3d15 5F5F5349 		.ascii	"__SIZE_T \000"
 13238      5A455F54 
 13238      2000
 13239              	.LASF191:
 13240 3d1f 5F5F5553 		.ascii	"__USFRACT_FBIT__ 8\000"
 13240      46524143 
 13240      545F4642 
 13240      49545F5F 
 13240      203800
 13241              	.LASF259:
 13242 3d32 5F5F4C4C 		.ascii	"__LLACCUM_MAX__ 0X7FFFFFFFFFFFFFFFP-31LLK\000"
 13242      41434355 
 13242      4D5F4D41 
 13242      585F5F20 
 13242      30583746 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 312


 13243              	.LASF1137:
 13244 3d5c 5F6F6666 		.ascii	"_offset\000"
 13244      73657400 
 13245              	.LASF602:
 13246 3d64 5F425344 		.ascii	"_BSD_PTRDIFF_T_ \000"
 13246      5F505452 
 13246      44494646 
 13246      5F545F20 
 13246      00
 13247              	.LASF1221:
 13248 3d75 75785461 		.ascii	"uxTasksDeleted\000"
 13248      736B7344 
 13248      656C6574 
 13248      656400
 13249              	.LASF1119:
 13250 3d84 5F637674 		.ascii	"_cvtbuf\000"
 13250      62756600 
 13251              	.LASF303:
 13252 3d8c 5F5F5553 		.ascii	"__USER_LABEL_PREFIX__ \000"
 13252      45525F4C 
 13252      4142454C 
 13252      5F505245 
 13252      4649585F 
 13253              	.LASF91:
 13254 3da3 5F5F5549 		.ascii	"__UINT64_MAX__ 0xffffffffffffffffULL\000"
 13254      4E543634 
 13254      5F4D4158 
 13254      5F5F2030 
 13254      78666666 
 13255              	.LASF697:
 13256 3dc8 5F524545 		.ascii	"_REENT_STRTOK_LAST(ptr) ((ptr)->_misc->_strtok_last"
 13256      4E545F53 
 13256      5452544F 
 13256      4B5F4C41 
 13256      53542870 
 13257 3dfb 2900     		.ascii	")\000"
 13258              	.LASF886:
 13259 3dfd 70645452 		.ascii	"pdTRUE ( 1 )\000"
 13259      55452028 
 13259      20312029 
 13259      00
 13260              	.LASF1145:
 13261 3e0a 5F696F62 		.ascii	"_iobs\000"
 13261      7300
 13262              	.LASF1300:
 13263 3e10 76546173 		.ascii	"vTaskList\000"
 13263      6B4C6973 
 13263      7400
 13264              	.LASF392:
 13265 3e1a 5F415446 		.ascii	"_ATFILE_SOURCE\000"
 13265      494C455F 
 13265      534F5552 
 13265      434500
 13266              	.LASF715:
 13267 3e29 5F5F4249 		.ascii	"__BIT_TYPES_DEFINED__ 1\000"
 13267      545F5459 
 13267      5045535F 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 313


 13267      44454649 
 13267      4E45445F 
 13268              	.LASF854:
 13269 3e41 66776F70 		.ascii	"fwopen(__cookie,__fn) funopen(__cookie, (int (*)())"
 13269      656E285F 
 13269      5F636F6F 
 13269      6B69652C 
 13269      5F5F666E 
 13270 3e74 302C205F 		.ascii	"0, __fn, (fpos_t (*)())0, (int (*)())0)\000"
 13270      5F666E2C 
 13270      20286670 
 13270      6F735F74 
 13270      20282A29 
 13271              	.LASF584:
 13272 3e9c 5F5F7472 		.ascii	"__trylocks_shared(...) __lock_annotate(shared_trylo"
 13272      796C6F63 
 13272      6B735F73 
 13272      68617265 
 13272      64282E2E 
 13273 3ecf 636B5F66 		.ascii	"ck_function(__VA_ARGS__))\000"
 13273      756E6374 
 13273      696F6E28 
 13273      5F5F5641 
 13273      5F415247 
 13274              	.LASF92:
 13275 3ee9 5F5F494E 		.ascii	"__INT_LEAST8_MAX__ 0x7f\000"
 13275      545F4C45 
 13275      41535438 
 13275      5F4D4158 
 13275      5F5F2030 
 13276              	.LASF1304:
 13277 3f01 78546963 		.ascii	"xTicks\000"
 13277      6B7300
 13278              	.LASF327:
 13279 3f08 5F5F4152 		.ascii	"__ARM_FEATURE_QBIT 1\000"
 13279      4D5F4645 
 13279      41545552 
 13279      455F5142 
 13279      49542031 
 13280              	.LASF334:
 13281 3f1d 5F5F4152 		.ascii	"__ARM_FEATURE_CLZ 1\000"
 13281      4D5F4645 
 13281      41545552 
 13281      455F434C 
 13281      5A203100 
 13282              	.LASF511:
 13283 3f31 5F5F4343 		.ascii	"__CC_SUPPORTS_WARNING 1\000"
 13283      5F535550 
 13283      504F5254 
 13283      535F5741 
 13283      524E494E 
 13284              	.LASF8:
 13285 3f49 5F5F4154 		.ascii	"__ATOMIC_ACQUIRE 2\000"
 13285      4F4D4943 
 13285      5F414351 
 13285      55495245 
 13285      203200
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 314


 13286              	.LASF952:
 13287 3f5c 706F7274 		.ascii	"portENTER_CRITICAL() vPortEnterCritical()\000"
 13287      454E5445 
 13287      525F4352 
 13287      49544943 
 13287      414C2829 
 13288              	.LASF1223:
 13289 3f86 75784375 		.ascii	"uxCurrentNumberOfTasks\000"
 13289      7272656E 
 13289      744E756D 
 13289      6265724F 
 13289      66546173 
 13290              	.LASF1309:
 13291 3f9d 76546173 		.ascii	"vTaskSuspendAll\000"
 13291      6B537573 
 13291      70656E64 
 13291      416C6C00 
 13292              	.LASF471:
 13293 3fad 4E554C4C 		.ascii	"NULL\000"
 13293      00
 13294              	.LASF930:
 13295 3fb2 706F7274 		.ascii	"portGET_RUN_TIME_COUNTER_VALUE() ulHighFrequencyTim"
 13295      4745545F 
 13295      52554E5F 
 13295      54494D45 
 13295      5F434F55 
 13296 3fe5 65725469 		.ascii	"erTicks\000"
 13296      636B7300 
 13297              	.LASF337:
 13298 3fed 5F5F4152 		.ascii	"__ARM_SIZEOF_WCHAR_T 4\000"
 13298      4D5F5349 
 13298      5A454F46 
 13298      5F574348 
 13298      41525F54 
 13299              	.LASF596:
 13300 4004 5F414E53 		.ascii	"_ANSI_STDDEF_H \000"
 13300      495F5354 
 13300      44444546 
 13300      5F482000 
 13301              	.LASF64:
 13302 4014 5F5F6861 		.ascii	"__has_include(STR) __has_include__(STR)\000"
 13302      735F696E 
 13302      636C7564 
 13302      65285354 
 13302      5229205F 
 13303              	.LASF1194:
 13304 403c 784F7665 		.ascii	"xOverflowCount\000"
 13304      72666C6F 
 13304      77436F75 
 13304      6E7400
 13305              	.LASF979:
 13306 404b 74726163 		.ascii	"traceBLOCKING_ON_QUEUE_SEND(pxQueue) \000"
 13306      65424C4F 
 13306      434B494E 
 13306      475F4F4E 
 13306      5F515545 
 13307              	.LASF1003:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 315


 13308 4071 74726163 		.ascii	"traceTASK_DELAY_UNTIL() \000"
 13308      65544153 
 13308      4B5F4445 
 13308      4C41595F 
 13308      554E5449 
 13309              	.LASF104:
 13310 408a 5F5F5549 		.ascii	"__UINT_LEAST32_MAX__ 0xffffffffUL\000"
 13310      4E545F4C 
 13310      45415354 
 13310      33325F4D 
 13310      41585F5F 
 13311              	.LASF1235:
 13312 40ac 70635472 		.ascii	"pcTraceBuffer\000"
 13312      61636542 
 13312      75666665 
 13312      7200
 13313              	.LASF146:
 13314 40ba 5F5F4442 		.ascii	"__DBL_EPSILON__ ((double)2.2204460492503131e-16L)\000"
 13314      4C5F4550 
 13314      53494C4F 
 13314      4E5F5F20 
 13314      2828646F 
 13315              	.LASF1279:
 13316 40ec 70785469 		.ascii	"pxTimeOut\000"
 13316      6D654F75 
 13316      7400
 13317              	.LASF208:
 13318 40f6 5F5F4C46 		.ascii	"__LFRACT_MIN__ (-0.5LR-0.5LR)\000"
 13318      52414354 
 13318      5F4D494E 
 13318      5F5F2028 
 13318      2D302E35 
 13319              	.LASF488:
 13320 4114 5F5F6861 		.ascii	"__has_feature(x) 0\000"
 13320      735F6665 
 13320      61747572 
 13320      65287829 
 13320      203000
 13321              	.LASF135:
 13322 4127 5F5F464C 		.ascii	"__FLT_HAS_INFINITY__ 1\000"
 13322      545F4841 
 13322      535F494E 
 13322      46494E49 
 13322      54595F5F 
 13323              	.LASF380:
 13324 413e 5F524545 		.ascii	"_REENT_GLOBAL_ATEXIT 1\000"
 13324      4E545F47 
 13324      4C4F4241 
 13324      4C5F4154 
 13324      45584954 
 13325              	.LASF239:
 13326 4155 5F5F4143 		.ascii	"__ACCUM_MAX__ 0X7FFFFFFFP-15K\000"
 13326      43554D5F 
 13326      4D41585F 
 13326      5F203058 
 13326      37464646 
 13327              	.LASF989:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 316


 13328 4173 74726163 		.ascii	"traceCREATE_COUNTING_SEMAPHORE_FAILED() \000"
 13328      65435245 
 13328      4154455F 
 13328      434F554E 
 13328      54494E47 
 13329              	.LASF84:
 13330 419c 5F5F494E 		.ascii	"__INT8_MAX__ 0x7f\000"
 13330      54385F4D 
 13330      41585F5F 
 13330      20307837 
 13330      6600
 13331              	.LASF999:
 13332 41ae 74726163 		.ascii	"traceQUEUE_DELETE(pxQueue) \000"
 13332      65515545 
 13332      55455F44 
 13332      454C4554 
 13332      45287078 
 13333              	.LASF321:
 13334 41ca 5F5F4743 		.ascii	"__GCC_HAVE_DWARF2_CFI_ASM 1\000"
 13334      435F4841 
 13334      56455F44 
 13334      57415246 
 13334      325F4346 
 13335              	.LASF444:
 13336 41e6 5F5F5F69 		.ascii	"___int8_t_defined 1\000"
 13336      6E74385F 
 13336      745F6465 
 13336      66696E65 
 13336      64203100 
 13337              	.LASF1283:
 13338 41fa 70784576 		.ascii	"pxEventList\000"
 13338      656E744C 
 13338      69737400 
 13339              	.LASF1057:
 13340 4206 6C6F6E67 		.ascii	"long unsigned int\000"
 13340      20756E73 
 13340      69676E65 
 13340      6420696E 
 13340      7400
 13341              	.LASF289:
 13342 4218 5F5F5341 		.ascii	"__SA_IBIT__ 16\000"
 13342      5F494249 
 13342      545F5F20 
 13342      313600
 13343              	.LASF1308:
 13344 4227 76546173 		.ascii	"vTaskMissedYield\000"
 13344      6B4D6973 
 13344      73656459 
 13344      69656C64 
 13344      00
 13345              	.LASF554:
 13346 4238 5F5F6F66 		.ascii	"__offsetof(type,field) offsetof(type, field)\000"
 13346      66736574 
 13346      6F662874 
 13346      7970652C 
 13346      6669656C 
 13347              	.LASF119:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 317


 13348 4265 5F5F4743 		.ascii	"__GCC_IEC_559_COMPLEX 0\000"
 13348      435F4945 
 13348      435F3535 
 13348      395F434F 
 13348      4D504C45 
 13349              	.LASF953:
 13350 427d 706F7274 		.ascii	"portEXIT_CRITICAL() vPortExitCritical()\000"
 13350      45584954 
 13350      5F435249 
 13350      54494341 
 13350      4C282920 
 13351              	.LASF2:
 13352 42a5 5F5F474E 		.ascii	"__GNUC__ 6\000"
 13352      55435F5F 
 13352      203600
 13353              	.LASF694:
 13354 42b0 5F524545 		.ascii	"_REENT_ASCTIME_BUF(ptr) ((ptr)->_asctime_buf)\000"
 13354      4E545F41 
 13354      53435449 
 13354      4D455F42 
 13354      55462870 
 13355              	.LASF43:
 13356 42de 5F5F5549 		.ascii	"__UINT16_TYPE__ short unsigned int\000"
 13356      4E543136 
 13356      5F545950 
 13356      455F5F20 
 13356      73686F72 
 13357              	.LASF388:
 13358 4301 5F504F53 		.ascii	"_POSIX_SOURCE\000"
 13358      49585F53 
 13358      4F555243 
 13358      4500
 13359              	.LASF1237:
 13360 430f 70635472 		.ascii	"pcTraceBufferEnd\000"
 13360      61636542 
 13360      75666665 
 13360      72456E64 
 13360      00
 13361              	.LASF1037:
 13362 4320 53544143 		.ascii	"STACK_MACROS_H \000"
 13362      4B5F4D41 
 13362      43524F53 
 13362      5F482000 
 13363              	.LASF347:
 13364 4330 5F5F534F 		.ascii	"__SOFTFP__ 1\000"
 13364      46544650 
 13364      5F5F2031 
 13364      00
 13365              	.LASF1302:
 13366 433d 78546173 		.ascii	"xTaskGetTickCountFromISR\000"
 13366      6B476574 
 13366      5469636B 
 13366      436F756E 
 13366      7446726F 
 13367              	.LASF1128:
 13368 4356 5F5F7346 		.ascii	"__sFILE\000"
 13368      494C4500 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 318


 13369              	.LASF1113:
 13370 435e 5F5F7364 		.ascii	"__sdidinit\000"
 13370      6964696E 
 13370      697400
 13371              	.LASF167:
 13372 4369 5F5F4445 		.ascii	"__DEC32_MAX_EXP__ 97\000"
 13372      4333325F 
 13372      4D41585F 
 13372      4558505F 
 13372      5F203937 
 13373              	.LASF1281:
 13374 437e 76546173 		.ascii	"vTaskSetTimeOutState\000"
 13374      6B536574 
 13374      54696D65 
 13374      4F757453 
 13374      74617465 
 13375              	.LASF457:
 13376 4393 5F545F53 		.ascii	"_T_SIZE_ \000"
 13376      495A455F 
 13376      2000
 13377              	.LASF800:
 13378 439d 5F504944 		.ascii	"_PID_T_DECLARED \000"
 13378      5F545F44 
 13378      45434C41 
 13378      52454420 
 13378      00
 13379              	.LASF1293:
 13380 43ae 756C5461 		.ascii	"ulTaskEndTrace\000"
 13380      736B456E 
 13380      64547261 
 13380      636500
 13381              	.LASF971:
 13382 43bd 636F6E66 		.ascii	"configQUEUE_REGISTRY_SIZE 0\000"
 13382      69675155 
 13382      4555455F 
 13382      52454749 
 13382      53545259 
 13383              	.LASF58:
 13384 43d9 5F5F5549 		.ascii	"__UINT_FAST8_TYPE__ unsigned int\000"
 13384      4E545F46 
 13384      41535438 
 13384      5F545950 
 13384      455F5F20 
 13385              	.LASF257:
 13386 43fa 5F5F4C4C 		.ascii	"__LLACCUM_IBIT__ 32\000"
 13386      41434355 
 13386      4D5F4942 
 13386      49545F5F 
 13386      20333200 
 13387              	.LASF200:
 13388 440e 5F5F4652 		.ascii	"__FRACT_EPSILON__ 0x1P-15R\000"
 13388      4143545F 
 13388      45505349 
 13388      4C4F4E5F 
 13388      5F203078 
 13389              	.LASF590:
 13390 4429 5F5F7265 		.ascii	"__requires_unlocked(...) __lock_annotate(locks_excl"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 319


 13390      71756972 
 13390      65735F75 
 13390      6E6C6F63 
 13390      6B656428 
 13391 445c 75646564 		.ascii	"uded(__VA_ARGS__))\000"
 13391      285F5F56 
 13391      415F4152 
 13391      47535F5F 
 13391      292900
 13392              	.LASF86:
 13393 446f 5F5F494E 		.ascii	"__INT32_MAX__ 0x7fffffffL\000"
 13393      5433325F 
 13393      4D41585F 
 13393      5F203078 
 13393      37666666 
 13394              	.LASF752:
 13395 4489 5F535953 		.ascii	"_SYS_SELECT_H \000"
 13395      5F53454C 
 13395      4543545F 
 13395      482000
 13396              	.LASF807:
 13397 4498 5F5F7469 		.ascii	"__timer_t_defined \000"
 13397      6D65725F 
 13397      745F6465 
 13397      66696E65 
 13397      642000
 13398              	.LASF361:
 13399 44ab 5F5F4758 		.ascii	"__GXX_TYPEINFO_EQUALITY_INLINE 0\000"
 13399      585F5459 
 13399      5045494E 
 13399      464F5F45 
 13399      5155414C 
 13400              	.LASF1062:
 13401 44cc 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 13401      4B5F5245 
 13401      43555253 
 13401      4956455F 
 13401      5400
 13402              	.LASF98:
 13403 44de 5F5F494E 		.ascii	"__INT_LEAST64_MAX__ 0x7fffffffffffffffLL\000"
 13403      545F4C45 
 13403      41535436 
 13403      345F4D41 
 13403      585F5F20 
 13404              	.LASF701:
 13405 4507 5F524545 		.ascii	"_REENT_MBRLEN_STATE(ptr) ((ptr)->_misc->_mbrlen_sta"
 13405      4E545F4D 
 13405      42524C45 
 13405      4E5F5354 
 13405      41544528 
 13406 453a 74652900 		.ascii	"te)\000"
 13407              	.LASF1170:
 13408 453e 5F5F7366 		.ascii	"__sf_fake_stderr\000"
 13408      5F66616B 
 13408      655F7374 
 13408      64657272 
 13408      00
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 320


 13409              	.LASF717:
 13410 454f 5F535953 		.ascii	"_SYS__STDINT_H \000"
 13410      5F5F5354 
 13410      44494E54 
 13410      5F482000 
 13411              	.LASF438:
 13412 455f 5F5F6E65 		.ascii	"__need_NULL \000"
 13412      65645F4E 
 13412      554C4C20 
 13412      00
 13413              	.LASF387:
 13414 456c 5F444546 		.ascii	"_DEFAULT_SOURCE 1\000"
 13414      41554C54 
 13414      5F534F55 
 13414      52434520 
 13414      3100
 13415              	.LASF117:
 13416 457e 5F5F5549 		.ascii	"__UINTPTR_MAX__ 0xffffffffU\000"
 13416      4E545054 
 13416      525F4D41 
 13416      585F5F20 
 13416      30786666 
 13417              	.LASF1107:
 13418 459a 5F657272 		.ascii	"_errno\000"
 13418      6E6F00
 13419              	.LASF924:
 13420 45a1 494E434C 		.ascii	"INCLUDE_vTaskDelay 1\000"
 13420      5544455F 
 13420      76546173 
 13420      6B44656C 
 13420      61792031 
 13421              	.LASF1001:
 13422 45b6 74726163 		.ascii	"traceTASK_CREATE_FAILED() \000"
 13422      65544153 
 13422      4B5F4352 
 13422      45415445 
 13422      5F464149 
 13423              	.LASF529:
 13424 45d1 5F5F7365 		.ascii	"__section(x) __attribute__((__section__(x)))\000"
 13424      6374696F 
 13424      6E287829 
 13424      205F5F61 
 13424      74747269 
 13425              	.LASF624:
 13426 45fe 6F666673 		.ascii	"offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEM"
 13426      65746F66 
 13426      28545950 
 13426      452C4D45 
 13426      4D424552 
 13427 4631 42455229 		.ascii	"BER)\000"
 13427      00
 13428              	.LASF107:
 13429 4636 5F5F5549 		.ascii	"__UINT64_C(c) c ## ULL\000"
 13429      4E543634 
 13429      5F432863 
 13429      29206320 
 13429      23232055 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 321


 13430              	.LASF53:
 13431 464d 5F5F5549 		.ascii	"__UINT_LEAST64_TYPE__ long long unsigned int\000"
 13431      4E545F4C 
 13431      45415354 
 13431      36345F54 
 13431      5950455F 
 13432              	.LASF1278:
 13433 467a 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 13433      6B436865 
 13433      636B466F 
 13433      7254696D 
 13433      654F7574 
 13434              	.LASF160:
 13435 468f 5F5F4C44 		.ascii	"__LDBL_EPSILON__ 2.2204460492503131e-16L\000"
 13435      424C5F45 
 13435      5053494C 
 13435      4F4E5F5F 
 13435      20322E32 
 13436              	.LASF941:
 13437 46b8 706F7274 		.ascii	"portSTACK_GROWTH ( -1 )\000"
 13437      53544143 
 13437      4B5F4752 
 13437      4F575448 
 13437      2028202D 
 13438              	.LASF524:
 13439 46d0 5F5F7075 		.ascii	"__pure2 __attribute__((__const__))\000"
 13439      72653220 
 13439      5F5F6174 
 13439      74726962 
 13439      7574655F 
 13440              	.LASF312:
 13441 46f3 5F5F4743 		.ascii	"__GCC_ATOMIC_CHAR16_T_LOCK_FREE 2\000"
 13441      435F4154 
 13441      4F4D4943 
 13441      5F434841 
 13441      5231365F 
 13442              	.LASF1127:
 13443 4715 5F736967 		.ascii	"_signal_buf\000"
 13443      6E616C5F 
 13443      62756600 
 13444              	.LASF141:
 13445 4721 5F5F4442 		.ascii	"__DBL_MAX_EXP__ 1024\000"
 13445      4C5F4D41 
 13445      585F4558 
 13445      505F5F20 
 13445      31303234 
 13446              	.LASF9:
 13447 4736 5F5F4154 		.ascii	"__ATOMIC_RELEASE 3\000"
 13447      4F4D4943 
 13447      5F52454C 
 13447      45415345 
 13447      203300
 13448              	.LASF772:
 13449 4749 5F686F77 		.ascii	"_howmany(x,y) (((x)+((y)-1))/(y))\000"
 13449      6D616E79 
 13449      28782C79 
 13449      29202828 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 322


 13449      2878292B 
 13450              	.LASF890:
 13451 476b 65727251 		.ascii	"errQUEUE_EMPTY ( 0 )\000"
 13451      55455545 
 13451      5F454D50 
 13451      54592028 
 13451      20302029 
 13452              	.LASF123:
 13453 4780 5F5F464C 		.ascii	"__FLT_MANT_DIG__ 24\000"
 13453      545F4D41 
 13453      4E545F44 
 13453      49475F5F 
 13453      20323400 
 13454              	.LASF1034:
 13455 4794 7461736B 		.ascii	"taskSCHEDULER_SUSPENDED 2\000"
 13455      53434845 
 13455      44554C45 
 13455      525F5355 
 13455      5350454E 
 13456              	.LASF90:
 13457 47ae 5F5F5549 		.ascii	"__UINT32_MAX__ 0xffffffffUL\000"
 13457      4E543332 
 13457      5F4D4158 
 13457      5F5F2030 
 13457      78666666 
 13458              	.LASF283:
 13459 47ca 5F5F5544 		.ascii	"__UDQ_IBIT__ 0\000"
 13459      515F4942 
 13459      49545F5F 
 13459      203000
 13460              	.LASF714:
 13461 47d9 5F474C4F 		.ascii	"_GLOBAL_ATEXIT _global_atexit\000"
 13461      42414C5F 
 13461      41544558 
 13461      4954205F 
 13461      676C6F62 
 13462              	.LASF1240:
 13463 47f7 70635374 		.ascii	"pcStatusString\000"
 13463      61747573 
 13463      53747269 
 13463      6E6700
 13464              	.LASF603:
 13465 4806 5F5F5F69 		.ascii	"___int_ptrdiff_t_h \000"
 13465      6E745F70 
 13465      74726469 
 13465      66665F74 
 13465      5F682000 
 13466              	.LASF1244:
 13467 481a 70784D75 		.ascii	"pxMutexHolder\000"
 13467      74657848 
 13467      6F6C6465 
 13467      7200
 13468              	.LASF1263:
 13469 4828 63537461 		.ascii	"cStatus\000"
 13469      74757300 
 13470              	.LASF510:
 13471 4830 5F5F4343 		.ascii	"__CC_SUPPORTS___FUNC__ 1\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 323


 13471      5F535550 
 13471      504F5254 
 13471      535F5F5F 
 13471      46554E43 
 13472              	.LASF878:
 13473 4849 52414E44 		.ascii	"RAND_MAX __RAND_MAX\000"
 13473      5F4D4158 
 13473      205F5F52 
 13473      414E445F 
 13473      4D415800 
 13474              	.LASF914:
 13475 485d 636F6E66 		.ascii	"configUSE_RECURSIVE_MUTEXES 1\000"
 13475      69675553 
 13475      455F5245 
 13475      43555253 
 13475      4956455F 
 13476              	.LASF1049:
 13477 487b 70727641 		.ascii	"prvAddTaskToReadyQueue(pxTCB) { if( pxTCB->uxPriori"
 13477      64645461 
 13477      736B546F 
 13477      52656164 
 13477      79517565 
 13478 48ae 7479203E 		.ascii	"ty > uxTopReadyPriority ) { uxTopReadyPriority = px"
 13478      20757854 
 13478      6F705265 
 13478      61647950 
 13478      72696F72 
 13479 48e1 5443422D 		.ascii	"TCB->uxPriority; } vListInsertEnd( ( xList * ) &( p"
 13479      3E757850 
 13479      72696F72 
 13479      6974793B 
 13479      207D2076 
 13480 4914 78526561 		.ascii	"xReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->"
 13480      64795461 
 13480      736B734C 
 13480      69737473 
 13480      5B207078 
 13481 4947 7847656E 		.ascii	"xGenericListItem ) ); }\000"
 13481      65726963 
 13481      4C697374 
 13481      4974656D 
 13481      20292029 
 13482              	.LASF1078:
 13483 495f 5F426967 		.ascii	"_Bigint\000"
 13483      696E7400 
 13484              	.LASF745:
 13485 4967 5F5F6273 		.ascii	"__bswap16(_x) __builtin_bswap16(_x)\000"
 13485      77617031 
 13485      36285F78 
 13485      29205F5F 
 13485      6275696C 
 13486              	.LASF598:
 13487 498b 5F545F50 		.ascii	"_T_PTRDIFF_ \000"
 13487      54524449 
 13487      46465F20 
 13487      00
 13488              	.LASF161:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 324


 13489 4998 5F5F4C44 		.ascii	"__LDBL_DENORM_MIN__ 4.9406564584124654e-324L\000"
 13489      424C5F44 
 13489      454E4F52 
 13489      4D5F4D49 
 13489      4E5F5F20 
 13490              	.LASF406:
 13491 49c5 5F5F4558 		.ascii	"__EXPORT \000"
 13491      504F5254 
 13491      2000
 13492              	.LASF328:
 13493 49cf 5F5F4152 		.ascii	"__ARM_FEATURE_SAT 1\000"
 13493      4D5F4645 
 13493      41545552 
 13493      455F5341 
 13493      54203100 
 13494              	.LASF1259:
 13495 49e3 70784669 		.ascii	"pxFirstTCB\000"
 13495      72737454 
 13495      434200
 13496              	.LASF420:
 13497 49ee 5F534947 		.ascii	"_SIGNED signed\000"
 13497      4E454420 
 13497      7369676E 
 13497      656400
 13498              	.LASF681:
 13499 49fd 5F524545 		.ascii	"_REENT_CHECK_EMERGENCY(var) _REENT_CHECK(var, _emer"
 13499      4E545F43 
 13499      4845434B 
 13499      5F454D45 
 13499      5247454E 
 13500 4a30 67656E63 		.ascii	"gency, char *, _REENT_EMERGENCY_SIZE, )\000"
 13500      792C2063 
 13500      68617220 
 13500      2A2C205F 
 13500      5245454E 
 13501              	.LASF222:
 13502 4a58 5F5F554C 		.ascii	"__ULLFRACT_IBIT__ 0\000"
 13502      4C465241 
 13502      43545F49 
 13502      4249545F 
 13502      5F203000 
 13503              	.LASF601:
 13504 4a6c 5F505452 		.ascii	"_PTRDIFF_T_ \000"
 13504      44494646 
 13504      5F545F20 
 13504      00
 13505              	.LASF650:
 13506 4a79 5F5F6E65 		.ascii	"__need_wint_t\000"
 13506      65645F77 
 13506      696E745F 
 13506      7400
 13507              	.LASF1116:
 13508 4a87 5F5F636C 		.ascii	"__cleanup\000"
 13508      65616E75 
 13508      7000
 13509              	.LASF1285:
 13510 4a91 76546173 		.ascii	"vTaskPlaceOnEventList\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 325


 13510      6B506C61 
 13510      63654F6E 
 13510      4576656E 
 13510      744C6973 
 13511              	.LASF981:
 13512 4aa7 74726163 		.ascii	"traceQUEUE_CREATE_FAILED() \000"
 13512      65515545 
 13512      55455F43 
 13512      52454154 
 13512      455F4641 
 13513              	.LASF735:
 13514 4ac3 5F4C4954 		.ascii	"_LITTLE_ENDIAN 1234\000"
 13514      544C455F 
 13514      454E4449 
 13514      414E2031 
 13514      32333400 
 13515              	.LASF639:
 13516 4ad7 5F5F6C6F 		.ascii	"__lock_acquire(lock) (_CAST_VOID 0)\000"
 13516      636B5F61 
 13516      63717569 
 13516      7265286C 
 13516      6F636B29 
 13517              	.LASF519:
 13518 4afb 5F5F636F 		.ascii	"__const const\000"
 13518      6E737420 
 13518      636F6E73 
 13518      7400
 13519              	.LASF530:
 13520 4b09 5F5F616C 		.ascii	"__alloc_size(x) __attribute__((__alloc_size__(x)))\000"
 13520      6C6F635F 
 13520      73697A65 
 13520      28782920 
 13520      5F5F6174 
 13521              	.LASF1014:
 13522 4b3c 76506F72 		.ascii	"vPortFreeAligned(pvBlockToFree) vPortFree( pvBlockT"
 13522      74467265 
 13522      65416C69 
 13522      676E6564 
 13522      28707642 
 13523 4b6f 6F467265 		.ascii	"oFree )\000"
 13523      65202900 
 13524              	.LASF1276:
 13525 4b77 70727649 		.ascii	"prvIdleTask\000"
 13525      646C6554 
 13525      61736B00 
 13526              	.LASF1198:
 13527 4b83 70764261 		.ascii	"pvBaseAddress\000"
 13527      73654164 
 13527      64726573 
 13527      7300
 13528              	.LASF130:
 13529 4b91 5F5F464C 		.ascii	"__FLT_MAX__ 3.4028234663852886e+38F\000"
 13529      545F4D41 
 13529      585F5F20 
 13529      332E3430 
 13529      32383233 
 13530              	.LASF241:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 326


 13531 4bb5 5F5F5541 		.ascii	"__UACCUM_FBIT__ 16\000"
 13531      4343554D 
 13531      5F464249 
 13531      545F5F20 
 13531      313600
 13532              	.LASF566:
 13533 4bc8 5F5F7761 		.ascii	"__warn_references(sym,msg) __asm__(\".section .gnu."
 13533      726E5F72 
 13533      65666572 
 13533      656E6365 
 13533      73287379 
 13534 4bfa 7761726E 		.ascii	"warning.\" #sym); __asm__(\".asciz \\\"\" msg \"\\\""
 13534      696E672E 
 13534      22202373 
 13534      796D293B 
 13534      205F5F61 
 13535 4c26 22293B20 		.ascii	"\"); __asm__(\".previous\")\000"
 13535      5F5F6173 
 13535      6D5F5F28 
 13535      222E7072 
 13535      6576696F 
 13536              	.LASF205:
 13537 4c3f 5F5F5546 		.ascii	"__UFRACT_EPSILON__ 0x1P-16UR\000"
 13537      52414354 
 13537      5F455053 
 13537      494C4F4E 
 13537      5F5F2030 
 13538              	.LASF73:
 13539 4c5c 5F5F5743 		.ascii	"__WCHAR_MIN__ 0U\000"
 13539      4841525F 
 13539      4D494E5F 
 13539      5F203055 
 13539      00
 13540              	.LASF1182:
 13541 4c6d 70764F77 		.ascii	"pvOwner\000"
 13541      6E657200 
 13542              	.LASF307:
 13543 4c75 5F5F4743 		.ascii	"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1\000"
 13543      435F4841 
 13543      56455F53 
 13543      594E435F 
 13543      434F4D50 
 13544              	.LASF1183:
 13545 4c9a 7076436F 		.ascii	"pvContainer\000"
 13545      6E746169 
 13545      6E657200 
 13546              	.LASF1016:
 13547 4ca6 4C495354 		.ascii	"LIST_H \000"
 13547      5F482000 
 13548              	.LASF100:
 13549 4cae 5F5F5549 		.ascii	"__UINT_LEAST8_MAX__ 0xff\000"
 13549      4E545F4C 
 13549      45415354 
 13549      385F4D41 
 13549      585F5F20 
 13550              	.LASF367:
 13551 4cc7 5F4E4557 		.ascii	"_NEWLIB_VERSION_H__ 1\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 327


 13551      4C49425F 
 13551      56455253 
 13551      494F4E5F 
 13551      485F5F20 
 13552              	.LASF317:
 13553 4cdd 5F5F4743 		.ascii	"__GCC_ATOMIC_LONG_LOCK_FREE 2\000"
 13553      435F4154 
 13553      4F4D4943 
 13553      5F4C4F4E 
 13553      475F4C4F 
 13554              	.LASF253:
 13555 4cfb 5F5F554C 		.ascii	"__ULACCUM_MIN__ 0.0ULK\000"
 13555      41434355 
 13555      4D5F4D49 
 13555      4E5F5F20 
 13555      302E3055 
 13556              	.LASF470:
 13557 4d12 5F5F6E65 		.ascii	"__need_size_t\000"
 13557      65645F73 
 13557      697A655F 
 13557      7400
 13558              	.LASF1112:
 13559 4d20 5F656D65 		.ascii	"_emergency\000"
 13559      7267656E 
 13559      637900
 13560              	.LASF340:
 13561 4d2b 5F5F4152 		.ascii	"__ARM_ARCH 7\000"
 13561      4D5F4152 
 13561      43482037 
 13561      00
 13562              	.LASF907:
 13563 4d38 636F6E66 		.ascii	"configTOTAL_HEAP_SIZE ( ( size_t ) ( 10* 1024 ) )\000"
 13563      6967544F 
 13563      54414C5F 
 13563      48454150 
 13563      5F53495A 
 13564              	.LASF460:
 13565 4d6a 5F53495A 		.ascii	"_SIZE_T_ \000"
 13565      455F545F 
 13565      2000
 13566              	.LASF421:
 13567 4d74 5F444F54 		.ascii	"_DOTS , ...\000"
 13567      53202C20 
 13567      2E2E2E00 
 13568              	.LASF122:
 13569 4d80 5F5F464C 		.ascii	"__FLT_RADIX__ 2\000"
 13569      545F5241 
 13569      4449585F 
 13569      5F203200 
 13570              	.LASF1058:
 13571 4d90 6C6F6E67 		.ascii	"long long int\000"
 13571      206C6F6E 
 13571      6720696E 
 13571      7400
 13572              	.LASF939:
 13573 4d9e 706F7274 		.ascii	"portBASE_TYPE long\000"
 13573      42415345 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 328


 13573      5F545950 
 13573      45206C6F 
 13573      6E6700
 13574              	.LASF250:
 13575 4db1 5F5F4C41 		.ascii	"__LACCUM_EPSILON__ 0x1P-31LK\000"
 13575      4343554D 
 13575      5F455053 
 13575      494C4F4E 
 13575      5F5F2030 
 13576              	.LASF1097:
 13577 4dce 5F6F6E5F 		.ascii	"_on_exit_args_ptr\000"
 13577      65786974 
 13577      5F617267 
 13577      735F7074 
 13577      7200
 13578              	.LASF164:
 13579 4de0 5F5F4C44 		.ascii	"__LDBL_HAS_QUIET_NAN__ 1\000"
 13579      424C5F48 
 13579      41535F51 
 13579      55494554 
 13579      5F4E414E 
 13580              	.LASF473:
 13581 4df9 5F5F6E65 		.ascii	"__need_NULL\000"
 13581      65645F4E 
 13581      554C4C00 
 13582              	.LASF1307:
 13583 4e05 78596965 		.ascii	"xYieldRequired\000"
 13583      6C645265 
 13583      71756972 
 13583      656400
 13584              	.LASF841:
 13585 4e14 505F746D 		.ascii	"P_tmpdir \"/tmp\"\000"
 13585      70646972 
 13585      20222F74 
 13585      6D702200 
 13586              	.LASF5:
 13587 4e24 5F5F5645 		.ascii	"__VERSION__ \"6.3.0\"\000"
 13587      5253494F 
 13587      4E5F5F20 
 13587      22362E33 
 13587      2E302200 
 13588              	.LASF1144:
 13589 4e38 5F6E696F 		.ascii	"_niobs\000"
 13589      627300
 13590              	.LASF1262:
 13591 4e3f 7072764C 		.ascii	"prvListTaskWithinSingleList\000"
 13591      69737454 
 13591      61736B57 
 13591      69746869 
 13591      6E53696E 
 13592              	.LASF115:
 13593 4e5b 5F5F5549 		.ascii	"__UINT_FAST64_MAX__ 0xffffffffffffffffULL\000"
 13593      4E545F46 
 13593      41535436 
 13593      345F4D41 
 13593      585F5F20 
 13594              	.LASF925:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 329


 13595 4e85 494E434C 		.ascii	"INCLUDE_uxTaskGetStackHighWaterMark 1\000"
 13595      5544455F 
 13595      75785461 
 13595      736B4765 
 13595      74537461 
 13596              	.LASF349:
 13597 4eab 5F5F4152 		.ascii	"__ARM_FP\000"
 13597      4D5F4650 
 13597      00
 13598              	.LASF287:
 13599 4eb4 5F5F4841 		.ascii	"__HA_IBIT__ 8\000"
 13599      5F494249 
 13599      545F5F20 
 13599      3800
 13600              	.LASF326:
 13601 4ec2 5F5F4152 		.ascii	"__ARM_FEATURE_DSP\000"
 13601      4D5F4645 
 13601      41545552 
 13601      455F4453 
 13601      5000
 13602              	.LASF496:
 13603 4ed4 5F5F474E 		.ascii	"__GNUCLIKE___SECTION 1\000"
 13603      55434C49 
 13603      4B455F5F 
 13603      5F534543 
 13603      54494F4E 
 13604              	.LASF318:
 13605 4eeb 5F5F4743 		.ascii	"__GCC_ATOMIC_LLONG_LOCK_FREE 1\000"
 13605      435F4154 
 13605      4F4D4943 
 13605      5F4C4C4F 
 13605      4E475F4C 
 13606              	.LASF1025:
 13607 4f0a 74736B4B 		.ascii	"tskKERNEL_VERSION_NUMBER \"V6.1.1\"\000"
 13607      45524E45 
 13607      4C5F5645 
 13607      5253494F 
 13607      4E5F4E55 
 13608              	.LASF680:
 13609 4f2c 5F524545 		.ascii	"_REENT_CHECK_MP(var) _REENT_CHECK(var, _mp, struct "
 13609      4E545F43 
 13609      4845434B 
 13609      5F4D5028 
 13609      76617229 
 13610 4f5f 5F6D7072 		.ascii	"_mprec *, sizeof *((var)->_mp), _REENT_INIT_MP(var)"
 13610      6563202A 
 13610      2C207369 
 13610      7A656F66 
 13610      202A2828 
 13611 4f92 2900     		.ascii	")\000"
 13612              	.LASF759:
 13613 4f94 74696D65 		.ascii	"timerclear(tvp) ((tvp)->tv_sec = (tvp)->tv_usec = 0"
 13613      72636C65 
 13613      61722874 
 13613      76702920 
 13613      28287476 
 13614 4fc7 2900     		.ascii	")\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 330


 13615              	.LASF688:
 13616 4fc9 5F524545 		.ascii	"_REENT_RAND48_MULT(ptr) ((ptr)->_r48->_mult)\000"
 13616      4E545F52 
 13616      414E4434 
 13616      385F4D55 
 13616      4C542870 
 13617              	.LASF790:
 13618 4ff6 5F434C4F 		.ascii	"_CLOCK_T_DECLARED \000"
 13618      434B5F54 
 13618      5F444543 
 13618      4C415245 
 13618      442000
 13619              	.LASF612:
 13620 5009 5F5F5743 		.ascii	"__WCHAR_T \000"
 13620      4841525F 
 13620      542000
 13621              	.LASF879:
 13622 5014 4D425F43 		.ascii	"MB_CUR_MAX __locale_mb_cur_max()\000"
 13622      55525F4D 
 13622      4158205F 
 13622      5F6C6F63 
 13622      616C655F 
 13623              	.LASF486:
 13624 5035 5F5F7074 		.ascii	"__ptrvalue \000"
 13624      7276616C 
 13624      75652000 
 13625              	.LASF446:
 13626 5041 5F5F5F69 		.ascii	"___int32_t_defined 1\000"
 13626      6E743332 
 13626      5F745F64 
 13626      6566696E 
 13626      65642031 
 13627              	.LASF1117:
 13628 5056 5F67616D 		.ascii	"_gamma_signgam\000"
 13628      6D615F73 
 13628      69676E67 
 13628      616D00
 13629              	.LASF378:
 13630 5065 5F484156 		.ascii	"_HAVE_CC_INHIBIT_LOOP_TO_LIBCALL 1\000"
 13630      455F4343 
 13630      5F494E48 
 13630      49424954 
 13630      5F4C4F4F 
 13631              	.LASF822:
 13632 5088 5F5F5345 		.ascii	"__SERR 0x0040\000"
 13632      52522030 
 13632      78303034 
 13632      3000
 13633              	.LASF932:
 13634 5096 504F5254 		.ascii	"PORTMACRO_H \000"
 13634      4D414352 
 13634      4F5F4820 
 13634      00
 13635              	.LASF41:
 13636 50a3 5F5F494E 		.ascii	"__INT64_TYPE__ long long int\000"
 13636      5436345F 
 13636      54595045 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 331


 13636      5F5F206C 
 13636      6F6E6720 
 13637              	.LASF206:
 13638 50c0 5F5F4C46 		.ascii	"__LFRACT_FBIT__ 31\000"
 13638      52414354 
 13638      5F464249 
 13638      545F5F20 
 13638      333100
 13639              	.LASF21:
 13640 50d3 5F5F4348 		.ascii	"__CHAR_BIT__ 8\000"
 13640      41525F42 
 13640      49545F5F 
 13640      203800
 13641              	.LASF323:
 13642 50e2 5F5F5349 		.ascii	"__SIZEOF_WCHAR_T__ 4\000"
 13642      5A454F46 
 13642      5F574348 
 13642      41525F54 
 13642      5F5F2034 
 13643              	.LASF1178:
 13644 50f7 784C4953 		.ascii	"xLIST_ITEM\000"
 13644      545F4954 
 13644      454D00
 13645              	.LASF661:
 13646 5102 5F52414E 		.ascii	"_RAND48_SEED_0 (0x330e)\000"
 13646      4434385F 
 13646      53454544 
 13646      5F302028 
 13646      30783333 
 13647              	.LASF395:
 13648 511a 5F5F4253 		.ascii	"__BSD_VISIBLE 1\000"
 13648      445F5649 
 13648      5349424C 
 13648      45203100 
 13649              	.LASF525:
 13650 512a 5F5F756E 		.ascii	"__unused __attribute__((__unused__))\000"
 13650      75736564 
 13650      205F5F61 
 13650      74747269 
 13650      62757465 
 13651              	.LASF998:
 13652 514f 74726163 		.ascii	"traceQUEUE_RECEIVE_FROM_ISR_FAILED(pxQueue) \000"
 13652      65515545 
 13652      55455F52 
 13652      45434549 
 13652      56455F46 
 13653              	.LASF543:
 13654 517c 5F5F6E6F 		.ascii	"__nonnull_all __attribute__((__nonnull__))\000"
 13654      6E6E756C 
 13654      6C5F616C 
 13654      6C205F5F 
 13654      61747472 
 13655              	.LASF662:
 13656 51a7 5F52414E 		.ascii	"_RAND48_SEED_1 (0xabcd)\000"
 13656      4434385F 
 13656      53454544 
 13656      5F312028 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 332


 13656      30786162 
 13657              	.LASF1155:
 13658 51bf 5F667265 		.ascii	"_freelist\000"
 13658      656C6973 
 13658      7400
 13659              	.LASF204:
 13660 51c9 5F5F5546 		.ascii	"__UFRACT_MAX__ 0XFFFFP-16UR\000"
 13660      52414354 
 13660      5F4D4158 
 13660      5F5F2030 
 13660      58464646 
 13661              	.LASF451:
 13662 51e5 5F5F5F69 		.ascii	"___int_least64_t_defined 1\000"
 13662      6E745F6C 
 13662      65617374 
 13662      36345F74 
 13662      5F646566 
 13663              	.LASF757:
 13664 5200 5F54494D 		.ascii	"_TIME_T_DECLARED \000"
 13664      455F545F 
 13664      4445434C 
 13664      41524544 
 13664      2000
 13665              	.LASF533:
 13666 5212 5F416C69 		.ascii	"_Alignof(x) __alignof(x)\000"
 13666      676E6F66 
 13666      28782920 
 13666      5F5F616C 
 13666      69676E6F 
 13667              	.LASF374:
 13668 522b 5F57414E 		.ascii	"_WANT_REENT_SMALL 1\000"
 13668      545F5245 
 13668      454E545F 
 13668      534D414C 
 13668      4C203100 
 13669              	.LASF476:
 13670 523f 5F5F5448 		.ascii	"__THROW \000"
 13670      524F5720 
 13670      00
 13671              	.LASF1143:
 13672 5248 5F676C75 		.ascii	"_glue\000"
 13672      6500
 13673              	.LASF1071:
 13674 524e 5F6D6273 		.ascii	"_mbstate_t\000"
 13674      74617465 
 13674      5F7400
 13675              	.LASF1076:
 13676 5259 5F736967 		.ascii	"_sign\000"
 13676      6E00
 13677              	.LASF96:
 13678 525f 5F5F494E 		.ascii	"__INT_LEAST32_MAX__ 0x7fffffffL\000"
 13678      545F4C45 
 13678      41535433 
 13678      325F4D41 
 13678      585F5F20 
 13679              	.LASF187:
 13680 527f 5F5F5346 		.ascii	"__SFRACT_IBIT__ 0\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 333


 13680      52414354 
 13680      5F494249 
 13680      545F5F20 
 13680      3000
 13681              	.LASF1192:
 13682 5291 78546173 		.ascii	"xTaskHandle\000"
 13682      6B48616E 
 13682      646C6500 
 13683              	.LASF393:
 13684 529d 5F415446 		.ascii	"_ATFILE_SOURCE 1\000"
 13684      494C455F 
 13684      534F5552 
 13684      43452031 
 13684      00
 13685              	.LASF660:
 13686 52ae 5F524545 		.ascii	"_REENT_SMALL_CHECK_INIT(ptr) do { if ((ptr) && !(pt"
 13686      4E545F53 
 13686      4D414C4C 
 13686      5F434845 
 13686      434B5F49 
 13687 52e1 72292D3E 		.ascii	"r)->__sdidinit) __sinit (ptr); } while (0)\000"
 13687      5F5F7364 
 13687      6964696E 
 13687      69742920 
 13687      5F5F7369 
 13688              	.LASF441:
 13689 530c 5F5F4558 		.ascii	"__EXP(x) __ ##x ##__\000"
 13689      50287829 
 13689      205F5F20 
 13689      23237820 
 13689      23235F5F 
 13690              	.LASF26:
 13691 5321 5F5F4259 		.ascii	"__BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__\000"
 13691      54455F4F 
 13691      52444552 
 13691      5F5F205F 
 13691      5F4F5244 
 13692              	.LASF1214:
 13693 5348 70785265 		.ascii	"pxReadyTasksLists\000"
 13693      61647954 
 13693      61736B73 
 13693      4C697374 
 13693      7300
 13694              	.LASF414:
 13695 535a 5F4E4F54 		.ascii	"_NOTHROW \000"
 13695      48524F57 
 13695      2000
 13696              	.LASF857:
 13697 5364 5F5F7366 		.ascii	"__sfeof(p) ((int)(((p)->_flags & __SEOF) != 0))\000"
 13697      656F6628 
 13697      70292028 
 13697      28696E74 
 13697      29282828 
 13698              	.LASF597:
 13699 5394 5F505452 		.ascii	"_PTRDIFF_T \000"
 13699      44494646 
 13699      5F542000 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 334


 13700              	.LASF365:
 13701 53a0 5F414E53 		.ascii	"_ANSIDECL_H_ \000"
 13701      49444543 
 13701      4C5F485F 
 13701      2000
 13702              	.LASF803:
 13703 53ae 5F4D4F44 		.ascii	"_MODE_T_DECLARED \000"
 13703      455F545F 
 13703      4445434C 
 13703      41524544 
 13703      2000
 13704              	.LASF836:
 13705 53c0 454F4620 		.ascii	"EOF (-1)\000"
 13705      282D3129 
 13705      00
 13706              	.LASF763:
 13707 53c9 74696D65 		.ascii	"timersub(tvp,uvp,vvp) do { (vvp)->tv_sec = (tvp)->t"
 13707      72737562 
 13707      28747670 
 13707      2C757670 
 13707      2C767670 
 13708 53fc 765F7365 		.ascii	"v_sec - (uvp)->tv_sec; (vvp)->tv_usec = (tvp)->tv_u"
 13708      63202D20 
 13708      28757670 
 13708      292D3E74 
 13708      765F7365 
 13709 542f 73656320 		.ascii	"sec - (uvp)->tv_usec; if ((vvp)->tv_usec < 0) { (vv"
 13709      2D202875 
 13709      7670292D 
 13709      3E74765F 
 13709      75736563 
 13710 5462 70292D3E 		.ascii	"p)->tv_sec--; (vvp)->tv_usec += 1000000; } } while "
 13710      74765F73 
 13710      65632D2D 
 13710      3B202876 
 13710      7670292D 
 13711 5495 28302900 		.ascii	"(0)\000"
 13712              	.LASF400:
 13713 5499 5F5F504F 		.ascii	"__POSIX_VISIBLE 200809\000"
 13713      5349585F 
 13713      56495349 
 13713      424C4520 
 13713      32303038 
 13714              	.LASF700:
 13715 54b0 5F524545 		.ascii	"_REENT_WCTOMB_STATE(ptr) ((ptr)->_misc->_wctomb_sta"
 13715      4E545F57 
 13715      43544F4D 
 13715      425F5354 
 13715      41544528 
 13716 54e3 74652900 		.ascii	"te)\000"
 13717              	.LASF201:
 13718 54e7 5F5F5546 		.ascii	"__UFRACT_FBIT__ 16\000"
 13718      52414354 
 13718      5F464249 
 13718      545F5F20 
 13718      313600
 13719              	.LASF282:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 335


 13720 54fa 5F5F5544 		.ascii	"__UDQ_FBIT__ 64\000"
 13720      515F4642 
 13720      49545F5F 
 13720      20363400 
 13721              	.LASF730:
 13722 550a 5F494E54 		.ascii	"_INTMAX_T_DECLARED \000"
 13722      4D41585F 
 13722      545F4445 
 13722      434C4152 
 13722      45442000 
 13723              	.LASF506:
 13724 551e 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_MEMCPY 1\000"
 13724      55434C49 
 13724      4B455F42 
 13724      55494C54 
 13724      494E5F4D 
 13725              	.LASF156:
 13726 553a 5F5F4C44 		.ascii	"__LDBL_MAX_10_EXP__ 308\000"
 13726      424C5F4D 
 13726      41585F31 
 13726      305F4558 
 13726      505F5F20 
 13727              	.LASF1257:
 13728 5552 756C546F 		.ascii	"ulTotalRunTime\000"
 13728      74616C52 
 13728      756E5469 
 13728      6D6500
 13729              	.LASF1169:
 13730 5561 5F5F7366 		.ascii	"__sf_fake_stdout\000"
 13730      5F66616B 
 13730      655F7374 
 13730      646F7574 
 13730      00
 13731              	.LASF942:
 13732 5572 706F7274 		.ascii	"portTICK_RATE_MS ( ( portTickType ) 1000 / configTI"
 13732      5449434B 
 13732      5F524154 
 13732      455F4D53 
 13732      20282028 
 13733 55a5 434B5F52 		.ascii	"CK_RATE_HZ )\000"
 13733      4154455F 
 13733      485A2029 
 13733      00
 13734              	.LASF954:
 13735 55b2 706F7274 		.ascii	"portTASK_FUNCTION_PROTO(vFunction,pvParameters) voi"
 13735      5441534B 
 13735      5F46554E 
 13735      4354494F 
 13735      4E5F5052 
 13736 55e5 64207646 		.ascii	"d vFunction( void *pvParameters )\000"
 13736      756E6374 
 13736      696F6E28 
 13736      20766F69 
 13736      64202A70 
 13737              	.LASF1140:
 13738 5607 5F666C61 		.ascii	"_flags2\000"
 13738      67733200 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 336


 13739              	.LASF56:
 13740 560f 5F5F494E 		.ascii	"__INT_FAST32_TYPE__ int\000"
 13740      545F4641 
 13740      53543332 
 13740      5F545950 
 13740      455F5F20 
 13741              	.LASF728:
 13742 5627 5F55494E 		.ascii	"_UINT64_T_DECLARED \000"
 13742      5436345F 
 13742      545F4445 
 13742      434C4152 
 13742      45442000 
 13743              	.LASF795:
 13744 563b 5F494E4F 		.ascii	"_INO_T_DECLARED \000"
 13744      5F545F44 
 13744      45434C41 
 13744      52454420 
 13744      00
 13745              	.LASF902:
 13746 564c 636F6E66 		.ascii	"configUSE_TICK_HOOK 0\000"
 13746      69675553 
 13746      455F5449 
 13746      434B5F48 
 13746      4F4F4B20 
 13747              	.LASF1060:
 13748 5662 756E7369 		.ascii	"unsigned int\000"
 13748      676E6564 
 13748      20696E74 
 13748      00
 13749              	.LASF462:
 13750 566f 5F53495A 		.ascii	"_SIZE_T_DEFINED_ \000"
 13750      455F545F 
 13750      44454649 
 13750      4E45445F 
 13750      2000
 13751              	.LASF951:
 13752 5681 706F7274 		.ascii	"portENABLE_INTERRUPTS() portCLEAR_INTERRUPT_MASK()\000"
 13752      454E4142 
 13752      4C455F49 
 13752      4E544552 
 13752      52555054 
 13753              	.LASF798:
 13754 56b4 5F554944 		.ascii	"_UID_T_DECLARED \000"
 13754      5F545F44 
 13754      45434C41 
 13754      52454420 
 13754      00
 13755              	.LASF1177:
 13756 56c5 706F7274 		.ascii	"portTickType\000"
 13756      5469636B 
 13756      54797065 
 13756      00
 13757              	.LASF125:
 13758 56d2 5F5F464C 		.ascii	"__FLT_MIN_EXP__ (-125)\000"
 13758      545F4D49 
 13758      4E5F4558 
 13758      505F5F20 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 337


 13758      282D3132 
 13759              	.LASF370:
 13760 56e9 5F5F4E45 		.ascii	"__NEWLIB_MINOR__ 5\000"
 13760      574C4942 
 13760      5F4D494E 
 13760      4F525F5F 
 13760      203500
 13761              	.LASF1175:
 13762 56fc 70645441 		.ascii	"pdTASK_CODE\000"
 13762      534B5F43 
 13762      4F444500 
 13763              	.LASF933:
 13764 5708 706F7274 		.ascii	"portCHAR char\000"
 13764      43484152 
 13764      20636861 
 13764      7200
 13765              	.LASF232:
 13766 5716 5F5F5553 		.ascii	"__USACCUM_IBIT__ 8\000"
 13766      41434355 
 13766      4D5F4942 
 13766      49545F5F 
 13766      203800
 13767              	.LASF845:
 13768 5729 544D505F 		.ascii	"TMP_MAX 26\000"
 13768      4D415820 
 13768      323600
 13769              	.LASF1030:
 13770 5734 7461736B 		.ascii	"taskDISABLE_INTERRUPTS() portDISABLE_INTERRUPTS()\000"
 13770      44495341 
 13770      424C455F 
 13770      494E5445 
 13770      52525550 
 13771              	.LASF548:
 13772 5766 5F5F7265 		.ascii	"__restrict \000"
 13772      73747269 
 13772      63742000 
 13773              	.LASF550:
 13774 5772 5F5F7072 		.ascii	"__predict_false(exp) __builtin_expect((exp), 0)\000"
 13774      65646963 
 13774      745F6661 
 13774      6C736528 
 13774      65787029 
 13775              	.LASF778:
 13776 57a2 70687973 		.ascii	"physadr physadr_t\000"
 13776      61647220 
 13776      70687973 
 13776      6164725F 
 13776      7400
 13777              	.LASF124:
 13778 57b4 5F5F464C 		.ascii	"__FLT_DIG__ 6\000"
 13778      545F4449 
 13778      475F5F20 
 13778      3600
 13779              	.LASF245:
 13780 57c2 5F5F5541 		.ascii	"__UACCUM_EPSILON__ 0x1P-16UK\000"
 13780      4343554D 
 13780      5F455053 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 338


 13780      494C4F4E 
 13780      5F5F2030 
 13781              	.LASF1197:
 13782 57df 784D454D 		.ascii	"xMEMORY_REGION\000"
 13782      4F52595F 
 13782      52454749 
 13782      4F4E00
 13783              	.LASF621:
 13784 57ee 5F574348 		.ascii	"_WCHAR_T_DECLARED \000"
 13784      41525F54 
 13784      5F444543 
 13784      4C415245 
 13784      442000
 13785              	.LASF1253:
 13786 5801 70727644 		.ascii	"prvDeleteTCB\000"
 13786      656C6574 
 13786      65544342 
 13786      00
 13787              	.LASF982:
 13788 580e 74726163 		.ascii	"traceCREATE_MUTEX(pxNewQueue) \000"
 13788      65435245 
 13788      4154455F 
 13788      4D555445 
 13788      58287078 
 13789              	.LASF87:
 13790 582d 5F5F494E 		.ascii	"__INT64_MAX__ 0x7fffffffffffffffLL\000"
 13790      5436345F 
 13790      4D41585F 
 13790      5F203078 
 13790      37666666 
 13791              	.LASF629:
 13792 5850 5F535953 		.ascii	"_SYS_REENT_H_ \000"
 13792      5F524545 
 13792      4E545F48 
 13792      5F2000
 13793              	.LASF120:
 13794 585f 5F5F464C 		.ascii	"__FLT_EVAL_METHOD__ 0\000"
 13794      545F4556 
 13794      414C5F4D 
 13794      4554484F 
 13794      445F5F20 
 13795              	.LASF1054:
 13796 5875 73686F72 		.ascii	"short int\000"
 13796      7420696E 
 13796      7400
 13797              	.LASF1188:
 13798 587f 75784E75 		.ascii	"uxNumberOfItems\000"
 13798      6D626572 
 13798      4F664974 
 13798      656D7300 
 13799              	.LASF67:
 13800 588f 5F5F5343 		.ascii	"__SCHAR_MAX__ 0x7f\000"
 13800      4841525F 
 13800      4D41585F 
 13800      5F203078 
 13800      376600
 13801              	.LASF977:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 339


 13802 58a2 74726163 		.ascii	"traceTASK_SWITCHED_OUT() \000"
 13802      65544153 
 13802      4B5F5357 
 13802      49544348 
 13802      45445F4F 
 13803              	.LASF666:
 13804 58bc 5F52414E 		.ascii	"_RAND48_MULT_2 (0x0005)\000"
 13804      4434385F 
 13804      4D554C54 
 13804      5F322028 
 13804      30783030 
 13805              	.LASF423:
 13806 58d4 5F455846 		.ascii	"_EXFUN_NOTHROW(name,proto) name proto _NOTHROW\000"
 13806      554E5F4E 
 13806      4F544852 
 13806      4F57286E 
 13806      616D652C 
 13807              	.LASF1242:
 13808 5903 76546173 		.ascii	"vTaskPriorityDisinherit\000"
 13808      6B507269 
 13808      6F726974 
 13808      79446973 
 13808      696E6865 
 13809              	.LASF683:
 13810 591b 5F524545 		.ascii	"_REENT_CHECK_MISC(var) _REENT_CHECK(var, _misc, str"
 13810      4E545F43 
 13810      4845434B 
 13810      5F4D4953 
 13810      43287661 
 13811 594e 75637420 		.ascii	"uct _misc_reent *, sizeof *((var)->_misc), _REENT_I"
 13811      5F6D6973 
 13811      635F7265 
 13811      656E7420 
 13811      2A2C2073 
 13812 5981 4E49545F 		.ascii	"NIT_MISC(var))\000"
 13812      4D495343 
 13812      28766172 
 13812      292900
 13813              	.LASF599:
 13814 5990 5F545F50 		.ascii	"_T_PTRDIFF \000"
 13814      54524449 
 13814      46462000 
 13815              	.LASF276:
 13816 599c 5F5F5551 		.ascii	"__UQQ_FBIT__ 8\000"
 13816      515F4642 
 13816      49545F5F 
 13816      203800
 13817              	.LASF1166:
 13818 59ab 5F776372 		.ascii	"_wcrtomb_state\000"
 13818      746F6D62 
 13818      5F737461 
 13818      746500
 13819              	.LASF1284:
 13820 59ba 7078556E 		.ascii	"pxUnblockedTCB\000"
 13820      626C6F63 
 13820      6B656454 
 13820      434200
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 340


 13821              	.LASF708:
 13822 59c9 5F524545 		.ascii	"_REENT_SIGNAL_BUF(ptr) ((ptr)->_signal_buf)\000"
 13822      4E545F53 
 13822      49474E41 
 13822      4C5F4255 
 13822      46287074 
 13823              	.LASF693:
 13824 59f5 5F524545 		.ascii	"_REENT_MP_FREELIST(ptr) ((ptr)->_mp->_freelist)\000"
 13824      4E545F4D 
 13824      505F4652 
 13824      45454C49 
 13824      53542870 
 13825              	.LASF173:
 13826 5a25 5F5F4445 		.ascii	"__DEC64_MIN_EXP__ (-382)\000"
 13826      4336345F 
 13826      4D494E5F 
 13826      4558505F 
 13826      5F20282D 
 13827              	.LASF244:
 13828 5a3e 5F5F5541 		.ascii	"__UACCUM_MAX__ 0XFFFFFFFFP-16UK\000"
 13828      4343554D 
 13828      5F4D4158 
 13828      5F5F2030 
 13828      58464646 
 13829              	.LASF652:
 13830 5a5e 5F54494D 		.ascii	"_TIME_T_ long\000"
 13830      455F545F 
 13830      206C6F6E 
 13830      6700
 13831              	.LASF646:
 13832 5a6c 756E7369 		.ascii	"unsigned signed\000"
 13832      676E6564 
 13832      20736967 
 13832      6E656400 
 13833              	.LASF1083:
 13834 5a7c 5F5F746D 		.ascii	"__tm_mday\000"
 13834      5F6D6461 
 13834      7900
 13835              	.LASF1247:
 13836 5a86 75785461 		.ascii	"uxTaskGetStackHighWaterMark\000"
 13836      736B4765 
 13836      74537461 
 13836      636B4869 
 13836      67685761 
 13837              	.LASF873:
 13838 5aa2 616C6C6F 		.ascii	"alloca\000"
 13838      636100
 13839              	.LASF209:
 13840 5aa9 5F5F4C46 		.ascii	"__LFRACT_MAX__ 0X7FFFFFFFP-31LR\000"
 13840      52414354 
 13840      5F4D4158 
 13840      5F5F2030 
 13840      58374646 
 13841              	.LASF325:
 13842 5ac9 5F5F5349 		.ascii	"__SIZEOF_PTRDIFF_T__ 4\000"
 13842      5A454F46 
 13842      5F505452 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 341


 13842      44494646 
 13842      5F545F5F 
 13843              	.LASF0:
 13844 5ae0 5F5F5354 		.ascii	"__STDC__ 1\000"
 13844      44435F5F 
 13844      203100
 13845              	.LASF401:
 13846 5aeb 5F5F5356 		.ascii	"__SVID_VISIBLE 1\000"
 13846      49445F56 
 13846      49534942 
 13846      4C452031 
 13846      00
 13847              	.LASF448:
 13848 5afc 5F5F5F69 		.ascii	"___int_least8_t_defined 1\000"
 13848      6E745F6C 
 13848      65617374 
 13848      385F745F 
 13848      64656669 
 13849              	.LASF359:
 13850 5b16 5F5F4152 		.ascii	"__ARM_FEATURE_IDIV 1\000"
 13850      4D5F4645 
 13850      41545552 
 13850      455F4944 
 13850      49562031 
 13851              	.LASF1134:
 13852 5b2b 5F756275 		.ascii	"_ubuf\000"
 13852      6600
 13853              	.LASF27:
 13854 5b31 5F5F464C 		.ascii	"__FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__\000"
 13854      4F41545F 
 13854      574F5244 
 13854      5F4F5244 
 13854      45525F5F 
 13855              	.LASF42:
 13856 5b5e 5F5F5549 		.ascii	"__UINT8_TYPE__ unsigned char\000"
 13856      4E54385F 
 13856      54595045 
 13856      5F5F2075 
 13856      6E736967 
 13857              	.LASF1110:
 13858 5b7b 5F737464 		.ascii	"_stderr\000"
 13858      65727200 
 13859              	.LASF585:
 13860 5b83 5F5F756E 		.ascii	"__unlocks(...) __lock_annotate(unlock_function(__VA"
 13860      6C6F636B 
 13860      73282E2E 
 13860      2E29205F 
 13860      5F6C6F63 
 13861 5bb6 5F415247 		.ascii	"_ARGS__))\000"
 13861      535F5F29 
 13861      2900
 13862              	.LASF1159:
 13863 5bc0 5F776374 		.ascii	"_wctomb_state\000"
 13863      6F6D625F 
 13863      73746174 
 13863      6500
 13864              	.LASF839:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 342


 13865 5bce 46494C45 		.ascii	"FILENAME_MAX 1024\000"
 13865      4E414D45 
 13865      5F4D4158 
 13865      20313032 
 13865      3400
 13866              	.LASF1139:
 13867 5be0 5F6D6273 		.ascii	"_mbstate\000"
 13867      74617465 
 13867      00
 13868              	.LASF535:
 13869 5be9 5F4E6F72 		.ascii	"_Noreturn __dead2\000"
 13869      65747572 
 13869      6E205F5F 
 13869      64656164 
 13869      3200
 13870              	.LASF985:
 13871 5bfb 74726163 		.ascii	"traceGIVE_MUTEX_RECURSIVE_FAILED(pxMutex) \000"
 13871      65474956 
 13871      455F4D55 
 13871      5445585F 
 13871      52454355 
 13872              	.LASF905:
 13873 5c26 636F6E66 		.ascii	"configMAX_PRIORITIES ( ( unsigned portBASE_TYPE ) 6"
 13873      69674D41 
 13873      585F5052 
 13873      494F5249 
 13873      54494553 
 13874 5c59 202900   		.ascii	" )\000"
 13875              	.LASF409:
 13876 5c5c 5F524541 		.ascii	"_READ_WRITE_BUFSIZE_TYPE int\000"
 13876      445F5752 
 13876      4954455F 
 13876      42554653 
 13876      495A455F 
 13877              	.LASF1150:
 13878 5c79 5F72616E 		.ascii	"_rand_next\000"
 13878      645F6E65 
 13878      787400
 13879              	.LASF1002:
 13880 5c84 74726163 		.ascii	"traceTASK_DELETE(pxTaskToDelete) \000"
 13880      65544153 
 13880      4B5F4445 
 13880      4C455445 
 13880      28707854 
 13881              	.LASF179:
 13882 5ca6 5F5F4445 		.ascii	"__DEC128_MANT_DIG__ 34\000"
 13882      43313238 
 13882      5F4D414E 
 13882      545F4449 
 13882      475F5F20 
 13883              	.LASF1102:
 13884 5cbd 5F666C61 		.ascii	"_flags\000"
 13884      677300
 13885              	.LASF407:
 13886 5cc4 5F5F494D 		.ascii	"__IMPORT \000"
 13886      504F5254 
 13886      2000
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 343


 13887              	.LASF663:
 13888 5cce 5F52414E 		.ascii	"_RAND48_SEED_2 (0x1234)\000"
 13888      4434385F 
 13888      53454544 
 13888      5F322028 
 13888      30783132 
 13889              	.LASF1330:
 13890 5ce6 70785461 		.ascii	"pxTaskToDelete\000"
 13890      736B546F 
 13890      44656C65 
 13890      746500
 13891              	.LASF296:
 13892 5cf5 5F5F5553 		.ascii	"__USA_FBIT__ 16\000"
 13892      415F4642 
 13892      49545F5F 
 13892      20313600 
 13893              	.LASF1286:
 13894 5d05 78546963 		.ascii	"xTicksToWait\000"
 13894      6B73546F 
 13894      57616974 
 13894      00
 13895              	.LASF631:
 13896 5d12 5F4D4143 		.ascii	"_MACHINE__TYPES_H \000"
 13896      48494E45 
 13896      5F5F5459 
 13896      5045535F 
 13896      482000
 13897              	.LASF635:
 13898 5d25 5F5F6C6F 		.ascii	"__lock_init(lock) (_CAST_VOID 0)\000"
 13898      636B5F69 
 13898      6E697428 
 13898      6C6F636B 
 13898      2920285F 
 13899              	.LASF382:
 13900 5d46 5F5F4945 		.ascii	"__IEEE_LITTLE_ENDIAN \000"
 13900      45455F4C 
 13900      4954544C 
 13900      455F454E 
 13900      4449414E 
 13901              	.LASF154:
 13902 5d5c 5F5F4C44 		.ascii	"__LDBL_MIN_10_EXP__ (-307)\000"
 13902      424C5F4D 
 13902      494E5F31 
 13902      305F4558 
 13902      505F5F20 
 13903              	.LASF1305:
 13904 5d77 78546173 		.ascii	"xTaskResumeAll\000"
 13904      6B526573 
 13904      756D6541 
 13904      6C6C00
 13905              	.LASF394:
 13906 5d86 5F5F4154 		.ascii	"__ATFILE_VISIBLE 1\000"
 13906      46494C45 
 13906      5F564953 
 13906      49424C45 
 13906      203100
 13907              	.LASF1094:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 344


 13908 5d99 5F617465 		.ascii	"_atexit\000"
 13908      78697400 
 13909              	.LASF739:
 13910 5da1 5F515541 		.ascii	"_QUAD_HIGHWORD 1\000"
 13910      445F4849 
 13910      4748574F 
 13910      52442031 
 13910      00
 13911              	.LASF945:
 13912 5db2 706F7274 		.ascii	"portEND_SWITCHING_ISR(xSwitchRequired) if( xSwitchR"
 13912      454E445F 
 13912      53574954 
 13912      4348494E 
 13912      475F4953 
 13913 5de5 65717569 		.ascii	"equired ) vPortYieldFromISR()\000"
 13913      72656420 
 13913      29207650 
 13913      6F727459 
 13913      69656C64 
 13914              	.LASF210:
 13915 5e03 5F5F4C46 		.ascii	"__LFRACT_EPSILON__ 0x1P-31LR\000"
 13915      52414354 
 13915      5F455053 
 13915      494C4F4E 
 13915      5F5F2030 
 13916              	.LASF917:
 13917 5e20 636F6E66 		.ascii	"configGENERATE_RUN_TIME_STATS 1\000"
 13917      69674745 
 13917      4E455241 
 13917      54455F52 
 13917      554E5F54 
 13918              	.LASF412:
 13919 5e40 5F424547 		.ascii	"_BEGIN_STD_C \000"
 13919      494E5F53 
 13919      54445F43 
 13919      2000
 13920              	.LASF1000:
 13921 5e4e 74726163 		.ascii	"traceTASK_CREATE(pxNewTCB) \000"
 13921      65544153 
 13921      4B5F4352 
 13921      45415445 
 13921      2870784E 
 13922              	.LASF538:
 13923 5e6a 5F5F6D61 		.ascii	"__malloc_like __attribute__((__malloc__))\000"
 13923      6C6C6F63 
 13923      5F6C696B 
 13923      65205F5F 
 13923      61747472 
 13924              	.LASF916:
 13925 5e94 636F6E66 		.ascii	"configMAX_CO_ROUTINE_PRIORITIES ( 2 )\000"
 13925      69674D41 
 13925      585F434F 
 13925      5F524F55 
 13925      54494E45 
 13926              	.LASF336:
 13927 5eba 5F5F4152 		.ascii	"__ARM_SIZEOF_MINIMAL_ENUM 1\000"
 13927      4D5F5349 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 345


 13927      5A454F46 
 13927      5F4D494E 
 13927      494D414C 
 13928              	.LASF403:
 13929 5ed6 5F504F49 		.ascii	"_POINTER_INT long\000"
 13929      4E544552 
 13929      5F494E54 
 13929      206C6F6E 
 13929      6700
 13930              	.LASF997:
 13931 5ee8 74726163 		.ascii	"traceQUEUE_RECEIVE_FROM_ISR(pxQueue) \000"
 13931      65515545 
 13931      55455F52 
 13931      45434549 
 13931      56455F46 
 13932              	.LASF339:
 13933 5f0e 5F5F6172 		.ascii	"__arm__ 1\000"
 13933      6D5F5F20 
 13933      3100
 13934              	.LASF978:
 13935 5f18 74726163 		.ascii	"traceBLOCKING_ON_QUEUE_RECEIVE(pxQueue) \000"
 13935      65424C4F 
 13935      434B494E 
 13935      475F4F4E 
 13935      5F515545 
 13936              	.LASF1190:
 13937 5f41 784C6973 		.ascii	"xListEnd\000"
 13937      74456E64 
 13937      00
 13938              	.LASF436:
 13939 5f4a 5F465354 		.ascii	"_FSTDIO \000"
 13939      44494F20 
 13939      00
 13940              	.LASF850:
 13941 5f53 5F737464 		.ascii	"_stdout_r(x) ((x)->_stdout)\000"
 13941      6F75745F 
 13941      72287829 
 13941      20282878 
 13941      292D3E5F 
 13942              	.LASF433:
 13943 5f6f 5F454C49 		.ascii	"_ELIDABLE_INLINE extern __inline__ _ATTRIBUTE ((__a"
 13943      4441424C 
 13943      455F494E 
 13943      4C494E45 
 13943      20657874 
 13944 5fa2 6C776179 		.ascii	"lways_inline__))\000"
 13944      735F696E 
 13944      6C696E65 
 13944      5F5F2929 
 13944      00
 13945              	.LASF500:
 13946 5fb3 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_STDARG 1\000"
 13946      55434C49 
 13946      4B455F42 
 13946      55494C54 
 13946      494E5F53 
 13947              	.LASF1069:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 346


 13948 5fcf 5F5F636F 		.ascii	"__count\000"
 13948      756E7400 
 13949              	.LASF517:
 13950 5fd7 5F5F5354 		.ascii	"__STRING(x) #x\000"
 13950      52494E47 
 13950      28782920 
 13950      237800
 13951              	.LASF609:
 13952 5fe6 5F574348 		.ascii	"_WCHAR_T \000"
 13952      41525F54 
 13952      2000
 13953              	.LASF604:
 13954 5ff0 5F474343 		.ascii	"_GCC_PTRDIFF_T \000"
 13954      5F505452 
 13954      44494646 
 13954      5F542000 
 13955              	.LASF1172:
 13956 6000 5F676C6F 		.ascii	"_global_impure_ptr\000"
 13956      62616C5F 
 13956      696D7075 
 13956      72655F70 
 13956      747200
 13957              	.LASF165:
 13958 6013 5F5F4445 		.ascii	"__DEC32_MANT_DIG__ 7\000"
 13958      4333325F 
 13958      4D414E54 
 13958      5F444947 
 13958      5F5F2037 
 13959              	.LASF751:
 13960 6028 5F5F6E74 		.ascii	"__ntohs(_x) __bswap16(_x)\000"
 13960      6F687328 
 13960      5F782920 
 13960      5F5F6273 
 13960      77617031 
 13961              	.LASF760:
 13962 6042 74696D65 		.ascii	"timerisset(tvp) ((tvp)->tv_sec || (tvp)->tv_usec)\000"
 13962      72697373 
 13962      65742874 
 13962      76702920 
 13962      28287476 
 13963              	.LASF440:
 13964 6074 5F4D4143 		.ascii	"_MACHINE__DEFAULT_TYPES_H \000"
 13964      48494E45 
 13964      5F5F4445 
 13964      4641554C 
 13964      545F5459 
 13965              	.LASF22:
 13966 608f 5F5F4249 		.ascii	"__BIGGEST_ALIGNMENT__ 8\000"
 13966      47474553 
 13966      545F414C 
 13966      49474E4D 
 13966      454E545F 
 13967              	.LASF741:
 13968 60a7 4C495454 		.ascii	"LITTLE_ENDIAN _LITTLE_ENDIAN\000"
 13968      4C455F45 
 13968      4E444941 
 13968      4E205F4C 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 347


 13968      4954544C 
 13969              	.LASF233:
 13970 60c4 5F5F5553 		.ascii	"__USACCUM_MIN__ 0.0UHK\000"
 13970      41434355 
 13970      4D5F4D49 
 13970      4E5F5F20 
 13970      302E3055 
 13971              	.LASF560:
 13972 60db 5F5F7374 		.ascii	"__strfmonlike(fmtarg,firstvararg) __attribute__((__"
 13972      72666D6F 
 13972      6E6C696B 
 13972      6528666D 
 13972      74617267 
 13973 610e 666F726D 		.ascii	"format__ (__strfmon__, fmtarg, firstvararg)))\000"
 13973      61745F5F 
 13973      20285F5F 
 13973      73747266 
 13973      6D6F6E5F 
 13974              	.LASF504:
 13975 613c 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_NEXT_ARG 1\000"
 13975      55434C49 
 13975      4B455F42 
 13975      55494C54 
 13975      494E5F4E 
 13976              	.LASF918:
 13977 615a 494E434C 		.ascii	"INCLUDE_vTaskPrioritySet 1\000"
 13977      5544455F 
 13977      76546173 
 13977      6B507269 
 13977      6F726974 
 13978              	.LASF293:
 13979 6175 5F5F5441 		.ascii	"__TA_IBIT__ 64\000"
 13979      5F494249 
 13979      545F5F20 
 13979      363400
 13980              	.LASF727:
 13981 6184 5F494E54 		.ascii	"_INT64_T_DECLARED \000"
 13981      36345F54 
 13981      5F444543 
 13981      4C415245 
 13981      442000
 13982              	.LASF1322:
 13983 6197 75785461 		.ascii	"uxTaskPriorityGet\000"
 13983      736B5072 
 13983      696F7269 
 13983      74794765 
 13983      7400
 13984              	.LASF1141:
 13985 61a9 63686172 		.ascii	"char\000"
 13985      00
 13986              	.LASF633:
 13987 61ae 5F5F4C4F 		.ascii	"__LOCK_INIT(class,lock) static int lock = 0;\000"
 13987      434B5F49 
 13987      4E495428 
 13987      636C6173 
 13987      732C6C6F 
 13988              	.LASF1086:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 348


 13989 61db 5F5F746D 		.ascii	"__tm_wday\000"
 13989      5F776461 
 13989      7900
 13990              	.LASF617:
 13991 61e5 5F574348 		.ascii	"_WCHAR_T_H \000"
 13991      41525F54 
 13991      5F482000 
 13992              	.LASF643:
 13993 61f1 5F5F6C6F 		.ascii	"__lock_release(lock) (_CAST_VOID 0)\000"
 13993      636B5F72 
 13993      656C6561 
 13993      7365286C 
 13993      6F636B29 
 13994              	.LASF331:
 13995 6215 5F5F4152 		.ascii	"__ARM_FEATURE_QRDMX\000"
 13995      4D5F4645 
 13995      41545552 
 13995      455F5152 
 13995      444D5800 
 13996              	.LASF520:
 13997 6229 5F5F7369 		.ascii	"__signed signed\000"
 13997      676E6564 
 13997      20736967 
 13997      6E656400 
 13998              	.LASF1331:
 13999 6239 78546173 		.ascii	"xTaskGenericCreate\000"
 13999      6B47656E 
 13999      65726963 
 13999      43726561 
 13999      746500
 14000              	.LASF962:
 14001 624c 706F7274 		.ascii	"portUSING_MPU_WRAPPERS 0\000"
 14001      5553494E 
 14001      475F4D50 
 14001      555F5752 
 14001      41505045 
 14002              	.LASF345:
 14003 6265 5F5F4152 		.ascii	"__ARM_ARCH_ISA_THUMB 2\000"
 14003      4D5F4152 
 14003      43485F49 
 14003      53415F54 
 14003      48554D42 
 14004              	.LASF835:
 14005 627c 5F494F4E 		.ascii	"_IONBF 2\000"
 14005      42462032 
 14005      00
 14006              	.LASF71:
 14007 6285 5F5F4C4F 		.ascii	"__LONG_LONG_MAX__ 0x7fffffffffffffffLL\000"
 14007      4E475F4C 
 14007      4F4E475F 
 14007      4D41585F 
 14007      5F203078 
 14008              	.LASF1041:
 14009 62ac 74736B49 		.ascii	"tskIDLE_STACK_SIZE configMINIMAL_STACK_SIZE\000"
 14009      444C455F 
 14009      53544143 
 14009      4B5F5349 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 349


 14009      5A452063 
 14010              	.LASF577:
 14011 62d8 5F5F6172 		.ascii	"__arg_type_tag(arg_kind,arg_idx,type_tag_idx) \000"
 14011      675F7479 
 14011      70655F74 
 14011      61672861 
 14011      72675F6B 
 14012              	.LASF405:
 14013 6307 5F5F5241 		.ascii	"__RAND_MAX 0x7fffffff\000"
 14013      4E445F4D 
 14013      41582030 
 14013      78376666 
 14013      66666666 
 14014              	.LASF1087:
 14015 631d 5F5F746D 		.ascii	"__tm_yday\000"
 14015      5F796461 
 14015      7900
 14016              	.LASF709:
 14017 6327 5F524545 		.ascii	"_REENT_INIT_PTR(var) { memset((var), 0, sizeof(*(va"
 14017      4E545F49 
 14017      4E49545F 
 14017      50545228 
 14017      76617229 
 14018 635a 72292929 		.ascii	"r))); _REENT_INIT_PTR_ZEROED(var); }\000"
 14018      3B205F52 
 14018      45454E54 
 14018      5F494E49 
 14018      545F5054 
 14019              	.LASF573:
 14020 637f 5F5F434F 		.ascii	"__COPYRIGHT(s) struct __hack\000"
 14020      50595249 
 14020      47485428 
 14020      73292073 
 14020      74727563 
 14021              	.LASF202:
 14022 639c 5F5F5546 		.ascii	"__UFRACT_IBIT__ 0\000"
 14022      52414354 
 14022      5F494249 
 14022      545F5F20 
 14022      3000
 14023              	.LASF332:
 14024 63ae 5F5F4152 		.ascii	"__ARM_32BIT_STATE 1\000"
 14024      4D5F3332 
 14024      4249545F 
 14024      53544154 
 14024      45203100 
 14025              	.LASF1316:
 14026 63c2 76546173 		.ascii	"vTaskSuspend\000"
 14026      6B537573 
 14026      70656E64 
 14026      00
 14027              	.LASF551:
 14028 63cf 5F5F7365 		.ascii	"__sentinel __attribute__((__sentinel__))\000"
 14028      6E74696E 
 14028      656C205F 
 14028      5F617474 
 14028      72696275 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 350


 14029              	.LASF93:
 14030 63f8 5F5F494E 		.ascii	"__INT8_C(c) c\000"
 14030      54385F43 
 14030      28632920 
 14030      6300
 14031              	.LASF207:
 14032 6406 5F5F4C46 		.ascii	"__LFRACT_IBIT__ 0\000"
 14032      52414354 
 14032      5F494249 
 14032      545F5F20 
 14032      3000
 14033              	.LASF915:
 14034 6418 636F6E66 		.ascii	"configUSE_CO_ROUTINES 0\000"
 14034      69675553 
 14034      455F434F 
 14034      5F524F55 
 14034      54494E45 
 14035              	.LASF595:
 14036 6430 5F535444 		.ascii	"_STDDEF_H_ \000"
 14036      4445465F 
 14036      485F2000 
 14037              	.LASF1334:
 14038 643c 474E5520 		.ascii	"GNU C89 6.3.0 -mcpu=cortex-m3 -mthumb -g -ggdb3 -O0"
 14038      43383920 
 14038      362E332E 
 14038      30202D6D 
 14038      6370753D 
 14039 646f 202D7374 		.ascii	" -std=gnu90 -ffunction-sections -fdata-sections\000"
 14039      643D676E 
 14039      75393020 
 14039      2D666675 
 14039      6E637469 
 14040              	.LASF139:
 14041 649f 5F5F4442 		.ascii	"__DBL_MIN_EXP__ (-1021)\000"
 14041      4C5F4D49 
 14041      4E5F4558 
 14041      505F5F20 
 14041      282D3130 
 14042              	.LASF1243:
 14043 64b7 76546173 		.ascii	"vTaskPriorityInherit\000"
 14043      6B507269 
 14043      6F726974 
 14043      79496E68 
 14043      65726974 
 14044              	.LASF1208:
 14045 64cc 70635461 		.ascii	"pcTaskName\000"
 14045      736B4E61 
 14045      6D6500
 14046              	.LASF884:
 14047 64d7 494E435F 		.ascii	"INC_FREERTOS_H \000"
 14047      46524545 
 14047      52544F53 
 14047      5F482000 
 14048              	.LASF1147:
 14049 64e7 5F736565 		.ascii	"_seed\000"
 14049      6400
 14050              	.LASF563:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 351


 14051 64ed 5F5F7072 		.ascii	"__printf0like(fmtarg,firstvararg) \000"
 14051      696E7466 
 14051      306C696B 
 14051      6528666D 
 14051      74617267 
 14052              	.LASF861:
 14053 6510 67657463 		.ascii	"getc(fp) __sgetc_r(_REENT, fp)\000"
 14053      28667029 
 14053      205F5F73 
 14053      67657463 
 14053      5F72285F 
 14054              	.LASF1132:
 14055 652f 5F736565 		.ascii	"_seek\000"
 14055      6B00
 14056              	.LASF1:
 14057 6535 5F5F5354 		.ascii	"__STDC_HOSTED__ 1\000"
 14057      44435F48 
 14057      4F535445 
 14057      445F5F20 
 14057      3100
 14058              	.LASF523:
 14059 6547 5F5F6465 		.ascii	"__dead2 __attribute__((__noreturn__))\000"
 14059      61643220 
 14059      5F5F6174 
 14059      74726962 
 14059      7574655F 
 14060              	.LASF1186:
 14061 656d 784D696E 		.ascii	"xMiniListItem\000"
 14061      694C6973 
 14061      74497465 
 14061      6D00
 14062              	.LASF817:
 14063 657b 5F5F534E 		.ascii	"__SNBF 0x0002\000"
 14063      42462030 
 14063      78303030 
 14063      3200
 14064              	.LASF615:
 14065 6589 5F574348 		.ascii	"_WCHAR_T_DEFINED_ \000"
 14065      41525F54 
 14065      5F444546 
 14065      494E4544 
 14065      5F2000
 14066              	.LASF452:
 14067 659c 5F5F4558 		.ascii	"__EXP\000"
 14067      5000
 14068              	.LASF1064:
 14069 65a2 5F66706F 		.ascii	"_fpos_t\000"
 14069      735F7400 
 14070              	.LASF162:
 14071 65aa 5F5F4C44 		.ascii	"__LDBL_HAS_DENORM__ 1\000"
 14071      424C5F48 
 14071      41535F44 
 14071      454E4F52 
 14071      4D5F5F20 
 14072              	.LASF994:
 14073 65c0 74726163 		.ascii	"traceQUEUE_RECEIVE_FAILED(pxQueue) \000"
 14073      65515545 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 352


 14073      55455F52 
 14073      45434549 
 14073      56455F46 
 14074              	.LASF1067:
 14075 65e4 5F5F7763 		.ascii	"__wchb\000"
 14075      686200
 14076              	.LASF1202:
 14077 65eb 74736B54 		.ascii	"tskTaskControlBlock\000"
 14077      61736B43 
 14077      6F6E7472 
 14077      6F6C426C 
 14077      6F636B00 
 14078              	.LASF1327:
 14079 65ff 7854696D 		.ascii	"xTimeIncrement\000"
 14079      65496E63 
 14079      72656D65 
 14079      6E7400
 14080              	.LASF490:
 14081 660e 5F5F4245 		.ascii	"__BEGIN_DECLS \000"
 14081      47494E5F 
 14081      4445434C 
 14081      532000
 14082              	.LASF238:
 14083 661d 5F5F4143 		.ascii	"__ACCUM_MIN__ (-0X1P15K-0X1P15K)\000"
 14083      43554D5F 
 14083      4D494E5F 
 14083      5F20282D 
 14083      30583150 
 14084              	.LASF840:
 14085 663e 4C5F746D 		.ascii	"L_tmpnam FILENAME_MAX\000"
 14085      706E616D 
 14085      2046494C 
 14085      454E414D 
 14085      455F4D41 
 14086              	.LASF1323:
 14087 6654 76546173 		.ascii	"vTaskDelay\000"
 14087      6B44656C 
 14087      617900
 14088              	.LASF502:
 14089 665f 5F5F474E 		.ascii	"__GNUC_VA_LIST_COMPATIBILITY 1\000"
 14089      55435F56 
 14089      415F4C49 
 14089      53545F43 
 14089      4F4D5041 
 14090              	.LASF329:
 14091 667e 5F5F4152 		.ascii	"__ARM_FEATURE_CRYPTO\000"
 14091      4D5F4645 
 14091      41545552 
 14091      455F4352 
 14091      5950544F 
 14092              	.LASF605:
 14093 6693 5F505452 		.ascii	"_PTRDIFF_T_DECLARED \000"
 14093      44494646 
 14093      5F545F44 
 14093      45434C41 
 14093      52454420 
 14094              	.LASF48:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 353


 14095 66a8 5F5F494E 		.ascii	"__INT_LEAST32_TYPE__ long int\000"
 14095      545F4C45 
 14095      41535433 
 14095      325F5459 
 14095      50455F5F 
 14096              	.LASF1191:
 14097 66c6 784C6973 		.ascii	"xList\000"
 14097      7400
 14098              	.LASF1160:
 14099 66cc 5F6D6274 		.ascii	"_mbtowc_state\000"
 14099      6F77635F 
 14099      73746174 
 14099      6500
 14100              	.LASF1011:
 14101 66da 706F7274 		.ascii	"portPRIVILEGE_BIT ( ( unsigned portBASE_TYPE ) 0x00"
 14101      50524956 
 14101      494C4547 
 14101      455F4249 
 14101      54202820 
 14102 670d 202900   		.ascii	" )\000"
 14103              	.LASF749:
 14104 6710 5F5F6874 		.ascii	"__htons(_x) __bswap16(_x)\000"
 14104      6F6E7328 
 14104      5F782920 
 14104      5F5F6273 
 14104      77617031 
 14105              	.LASF106:
 14106 672a 5F5F5549 		.ascii	"__UINT_LEAST64_MAX__ 0xffffffffffffffffULL\000"
 14106      4E545F4C 
 14106      45415354 
 14106      36345F4D 
 14106      41585F5F 
 14107              	.LASF789:
 14108 6755 5F5F636C 		.ascii	"__clock_t_defined \000"
 14108      6F636B5F 
 14108      745F6465 
 14108      66696E65 
 14108      642000
 14109              	.LASF197:
 14110 6768 5F5F4652 		.ascii	"__FRACT_IBIT__ 0\000"
 14110      4143545F 
 14110      49424954 
 14110      5F5F2030 
 14110      00
 14111              	.LASF371:
 14112 6779 5F5F4E45 		.ascii	"__NEWLIB_PATCHLEVEL__ 0\000"
 14112      574C4942 
 14112      5F504154 
 14112      43484C45 
 14112      56454C5F 
 14113              	.LASF23:
 14114 6791 5F5F4F52 		.ascii	"__ORDER_LITTLE_ENDIAN__ 1234\000"
 14114      4445525F 
 14114      4C495454 
 14114      4C455F45 
 14114      4E444941 
 14115              	.LASF645:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 354


 14116 67ae 5F5F7369 		.ascii	"__size_t\000"
 14116      7A655F74 
 14116      00
 14117              	.LASF927:
 14118 67b7 636F6E66 		.ascii	"configMAX_SYSCALL_INTERRUPT_PRIORITY 191\000"
 14118      69674D41 
 14118      585F5359 
 14118      5343414C 
 14118      4C5F494E 
 14119              	.LASF507:
 14120 67e0 5F5F4343 		.ascii	"__CC_SUPPORTS_INLINE 1\000"
 14120      5F535550 
 14120      504F5254 
 14120      535F494E 
 14120      4C494E45 
 14121              	.LASF475:
 14122 67f7 5F5F444F 		.ascii	"__DOTS , ...\000"
 14122      5453202C 
 14122      202E2E2E 
 14122      00
 14123              	.LASF172:
 14124 6804 5F5F4445 		.ascii	"__DEC64_MANT_DIG__ 16\000"
 14124      4336345F 
 14124      4D414E54 
 14124      5F444947 
 14124      5F5F2031 
 14125              	.LASF1059:
 14126 681a 6C6F6E67 		.ascii	"long long unsigned int\000"
 14126      206C6F6E 
 14126      6720756E 
 14126      7369676E 
 14126      65642069 
 14127              	.LASF707:
 14128 6831 5F524545 		.ascii	"_REENT_GETDATE_ERR_P(ptr) (&((ptr)->_misc->_getdate"
 14128      4E545F47 
 14128      45544441 
 14128      54455F45 
 14128      52525F50 
 14129 6864 5F657272 		.ascii	"_err))\000"
 14129      292900
 14130              	.LASF126:
 14131 686b 5F5F464C 		.ascii	"__FLT_MIN_10_EXP__ (-37)\000"
 14131      545F4D49 
 14131      4E5F3130 
 14131      5F455850 
 14131      5F5F2028 
 14132              	.LASF252:
 14133 6884 5F5F554C 		.ascii	"__ULACCUM_IBIT__ 32\000"
 14133      41434355 
 14133      4D5F4942 
 14133      49545F5F 
 14133      20333200 
 14134              	.LASF68:
 14135 6898 5F5F5348 		.ascii	"__SHRT_MAX__ 0x7fff\000"
 14135      52545F4D 
 14135      41585F5F 
 14135      20307837 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 355


 14135      66666600 
 14136              	.LASF970:
 14137 68ac 494E434C 		.ascii	"INCLUDE_xTaskGetCurrentTaskHandle 1\000"
 14137      5544455F 
 14137      78546173 
 14137      6B476574 
 14137      43757272 
 14138              	.LASF265:
 14139 68d0 5F5F554C 		.ascii	"__ULLACCUM_EPSILON__ 0x1P-32ULLK\000"
 14139      4C414343 
 14139      554D5F45 
 14139      5053494C 
 14139      4F4E5F5F 
 14140              	.LASF463:
 14141 68f1 5F53495A 		.ascii	"_SIZE_T_DEFINED \000"
 14141      455F545F 
 14141      44454649 
 14141      4E454420 
 14141      00
 14142              	.LASF272:
 14143 6902 5F5F4451 		.ascii	"__DQ_FBIT__ 63\000"
 14143      5F464249 
 14143      545F5F20 
 14143      363300
 14144              	.LASF396:
 14145 6911 5F5F474E 		.ascii	"__GNU_VISIBLE 0\000"
 14145      555F5649 
 14145      5349424C 
 14145      45203000 
 14146              	.LASF1236:
 14147 6921 70635472 		.ascii	"pcTraceBufferStart\000"
 14147      61636542 
 14147      75666665 
 14147      72537461 
 14147      727400
 14148              	.LASF600:
 14149 6934 5F5F5054 		.ascii	"__PTRDIFF_T \000"
 14149      52444946 
 14149      465F5420 
 14149      00
 14150              	.LASF1320:
 14151 6941 75784E65 		.ascii	"uxNewPriority\000"
 14151      77507269 
 14151      6F726974 
 14151      7900
 14152              	.LASF966:
 14153 694f 706F7274 		.ascii	"portCRITICAL_NESTING_IN_TCB 0\000"
 14153      43524954 
 14153      4943414C 
 14153      5F4E4553 
 14153      54494E47 
 14154              	.LASF1091:
 14155 696d 5F64736F 		.ascii	"_dso_handle\000"
 14155      5F68616E 
 14155      646C6500 
 14156              	.LASF309:
 14157 6979 5F5F4743 		.ascii	"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 356


 14157      435F4841 
 14157      56455F53 
 14157      594E435F 
 14157      434F4D50 
 14158              	.LASF55:
 14159 699e 5F5F494E 		.ascii	"__INT_FAST16_TYPE__ int\000"
 14159      545F4641 
 14159      53543136 
 14159      5F545950 
 14159      455F5F20 
 14160              	.LASF731:
 14161 69b6 5F55494E 		.ascii	"_UINTMAX_T_DECLARED \000"
 14161      544D4158 
 14161      5F545F44 
 14161      45434C41 
 14161      52454420 
 14162              	.LASF228:
 14163 69cb 5F5F5341 		.ascii	"__SACCUM_MIN__ (-0X1P7HK-0X1P7HK)\000"
 14163      4343554D 
 14163      5F4D494E 
 14163      5F5F2028 
 14163      2D305831 
 14164              	.LASF1146:
 14165 69ed 5F72616E 		.ascii	"_rand48\000"
 14165      64343800 
 14166              	.LASF51:
 14167 69f5 5F5F5549 		.ascii	"__UINT_LEAST16_TYPE__ short unsigned int\000"
 14167      4E545F4C 
 14167      45415354 
 14167      31365F54 
 14167      5950455F 
 14168              	.LASF794:
 14169 6a1e 5F49445F 		.ascii	"_ID_T_DECLARED \000"
 14169      545F4445 
 14169      434C4152 
 14169      45442000 
 14170              	.LASF350:
 14171 6a2e 5F5F4152 		.ascii	"__ARM_FEATURE_FMA\000"
 14171      4D5F4645 
 14171      41545552 
 14171      455F464D 
 14171      4100
 14172              	.LASF249:
 14173 6a40 5F5F4C41 		.ascii	"__LACCUM_MAX__ 0X7FFFFFFFFFFFFFFFP-31LK\000"
 14173      4343554D 
 14173      5F4D4158 
 14173      5F5F2030 
 14173      58374646 
 14174              	.LASF1109:
 14175 6a68 5F737464 		.ascii	"_stdout\000"
 14175      6F757400 
 14176              	.LASF25:
 14177 6a70 5F5F4F52 		.ascii	"__ORDER_PDP_ENDIAN__ 3412\000"
 14177      4445525F 
 14177      5044505F 
 14177      454E4449 
 14177      414E5F5F 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 357


 14178              	.LASF904:
 14179 6a8a 636F6E66 		.ascii	"configTICK_RATE_HZ ( ( portTickType ) 1000 )\000"
 14179      69675449 
 14179      434B5F52 
 14179      4154455F 
 14179      485A2028 
 14180              	.LASF284:
 14181 6ab7 5F5F5554 		.ascii	"__UTQ_FBIT__ 128\000"
 14181      515F4642 
 14181      49545F5F 
 14181      20313238 
 14181      00
 14182              	.LASF831:
 14183 6ac8 5F5F534E 		.ascii	"__SNLK 0x0001\000"
 14183      4C4B2030 
 14183      78303030 
 14183      3100
 14184              	.LASF766:
 14185 6ad6 54494D45 		.ascii	"TIMEVAL_TO_TIMESPEC(tv,ts) do { (ts)->tv_sec = (tv)"
 14185      56414C5F 
 14185      544F5F54 
 14185      494D4553 
 14185      50454328 
 14186 6b09 2D3E7476 		.ascii	"->tv_sec; (ts)->tv_nsec = (tv)->tv_usec * 1000; } w"
 14186      5F736563 
 14186      3B202874 
 14186      73292D3E 
 14186      74765F6E 
 14187 6b3c 68696C65 		.ascii	"hile (0)\000"
 14187      20283029 
 14187      00
 14188              	.LASF787:
 14189 6b45 5F424C4B 		.ascii	"_BLKCNT_T_DECLARED \000"
 14189      434E545F 
 14189      545F4445 
 14189      434C4152 
 14189      45442000 
 14190              	.LASF12:
 14191 6b59 5F5F4649 		.ascii	"__FINITE_MATH_ONLY__ 0\000"
 14191      4E495445 
 14191      5F4D4154 
 14191      485F4F4E 
 14191      4C595F5F 
 14192              	.LASF1181:
 14193 6b70 70785072 		.ascii	"pxPrevious\000"
 14193      6576696F 
 14193      757300
 14194              	.LASF109:
 14195 6b7b 5F5F494E 		.ascii	"__INT_FAST16_MAX__ 0x7fffffff\000"
 14195      545F4641 
 14195      53543136 
 14195      5F4D4158 
 14195      5F5F2030 
 14196              	.LASF442:
 14197 6b99 5F5F6861 		.ascii	"__have_longlong64 1\000"
 14197      76655F6C 
 14197      6F6E676C 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 358


 14197      6F6E6736 
 14197      34203100 
 14198              	.LASF826:
 14199 6bad 5F5F534F 		.ascii	"__SOPT 0x0400\000"
 14199      50542030 
 14199      78303430 
 14199      3000
 14200              	.LASF1136:
 14201 6bbb 5F626C6B 		.ascii	"_blksize\000"
 14201      73697A65 
 14201      00
 14202              	.LASF844:
 14203 6bc4 5345454B 		.ascii	"SEEK_END 2\000"
 14203      5F454E44 
 14203      203200
 14204              	.LASF719:
 14205 6bcf 5F55494E 		.ascii	"_UINT8_T_DECLARED \000"
 14205      54385F54 
 14205      5F444543 
 14205      4C415245 
 14205      442000
 14206              	.LASF960:
 14207 6be2 50524956 		.ascii	"PRIVILEGED_FUNCTION \000"
 14207      494C4547 
 14207      45445F46 
 14207      554E4354 
 14207      494F4E20 
 14208              	.LASF642:
 14209 6bf7 5F5F6C6F 		.ascii	"__lock_try_acquire_recursive(lock) (_CAST_VOID 0)\000"
 14209      636B5F74 
 14209      72795F61 
 14209      63717569 
 14209      72655F72 
 14210              	.LASF1328:
 14211 6c29 7853686F 		.ascii	"xShouldDelay\000"
 14211      756C6444 
 14211      656C6179 
 14211      00
 14212              	.LASF1325:
 14213 6c36 76546173 		.ascii	"vTaskDelayUntil\000"
 14213      6B44656C 
 14213      6179556E 
 14213      74696C00 
 14214              	.LASF733:
 14215 6c46 5F55494E 		.ascii	"_UINTPTR_T_DECLARED \000"
 14215      54505452 
 14215      5F545F44 
 14215      45434C41 
 14215      52454420 
 14216              	.LASF1314:
 14217 6c5b 76546173 		.ascii	"vTaskResume\000"
 14217      6B526573 
 14217      756D6500 
 14218              	.LASF616:
 14219 6c67 5F574348 		.ascii	"_WCHAR_T_DEFINED \000"
 14219      41525F54 
 14219      5F444546 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 359


 14219      494E4544 
 14219      2000
 14220              	.LASF1099:
 14221 6c79 5F626173 		.ascii	"_base\000"
 14221      6500
 14222              	.LASF1310:
 14223 6c7f 76546173 		.ascii	"vTaskEndScheduler\000"
 14223      6B456E64 
 14223      53636865 
 14223      64756C65 
 14223      7200
 14224              	.LASF583:
 14225 6c91 5F5F7472 		.ascii	"__trylocks_exclusive(...) __lock_annotate(exclusive"
 14225      796C6F63 
 14225      6B735F65 
 14225      78636C75 
 14225      73697665 
 14226 6cc4 5F747279 		.ascii	"_trylock_function(__VA_ARGS__))\000"
 14226      6C6F636B 
 14226      5F66756E 
 14226      6374696F 
 14226      6E285F5F 
 14227              	.LASF852:
 14228 6ce4 5F5F5641 		.ascii	"__VALIST __gnuc_va_list\000"
 14228      4C495354 
 14228      205F5F67 
 14228      6E75635F 
 14228      76615F6C 
 14229              	.LASF1264:
 14230 6cfc 75735374 		.ascii	"usStackRemaining\000"
 14230      61636B52 
 14230      656D6169 
 14230      6E696E67 
 14230      00
 14231              	.LASF686:
 14232 6d0d 5F524545 		.ascii	"_REENT_RAND_NEXT(ptr) ((ptr)->_r48->_rand_next)\000"
 14232      4E545F52 
 14232      414E445F 
 14232      4E455854 
 14232      28707472 
 14233              	.LASF213:
 14234 6d3d 5F5F554C 		.ascii	"__ULFRACT_MIN__ 0.0ULR\000"
 14234      46524143 
 14234      545F4D49 
 14234      4E5F5F20 
 14234      302E3055 
 14235              	.LASF1157:
 14236 6d54 5F737472 		.ascii	"_strtok_last\000"
 14236      746F6B5F 
 14236      6C617374 
 14236      00
 14237              	.LASF273:
 14238 6d61 5F5F4451 		.ascii	"__DQ_IBIT__ 0\000"
 14238      5F494249 
 14238      545F5F20 
 14238      3000
 14239              	.LASF811:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 360


 14240 6d6f 5F5F6E65 		.ascii	"__need_inttypes\000"
 14240      65645F69 
 14240      6E747479 
 14240      70657300 
 14241              	.LASF864:
 14242 6d7f 4C5F6374 		.ascii	"L_ctermid 16\000"
 14242      65726D69 
 14242      64203136 
 14242      00
 14243              	.LASF1270:
 14244 6d8c 70727643 		.ascii	"prvCheckTasksWaitingTermination\000"
 14244      6865636B 
 14244      5461736B 
 14244      73576169 
 14244      74696E67 
 14245              	.LASF1164:
 14246 6dac 5F6D6272 		.ascii	"_mbrtowc_state\000"
 14246      746F7763 
 14246      5F737461 
 14246      746500
 14247              	.LASF556:
 14248 6dbb 5F5F636F 		.ascii	"__containerof(x,s,m) ({ const volatile __typeof(((s"
 14248      6E746169 
 14248      6E65726F 
 14248      6628782C 
 14248      732C6D29 
 14249 6dee 202A2930 		.ascii	" *)0)->m) *__x = (x); __DEQUALIFY(s *, (const volat"
 14249      292D3E6D 
 14249      29202A5F 
 14249      5F78203D 
 14249      20287829 
 14250 6e21 696C6520 		.ascii	"ile char *)__x - __offsetof(s, m));})\000"
 14250      63686172 
 14250      202A295F 
 14250      5F78202D 
 14250      205F5F6F 
 14251              	.LASF725:
 14252 6e47 5F55494E 		.ascii	"_UINT32_T_DECLARED \000"
 14252      5433325F 
 14252      545F4445 
 14252      434C4152 
 14252      45442000 
 14253              	.LASF428:
 14254 6e5b 5F444546 		.ascii	"_DEFUN_VOID(name) name(_NOARGS)\000"
 14254      554E5F56 
 14254      4F494428 
 14254      6E616D65 
 14254      29206E61 
 14255              	.LASF461:
 14256 6e7b 5F425344 		.ascii	"_BSD_SIZE_T_ \000"
 14256      5F53495A 
 14256      455F545F 
 14256      2000
 14257              	.LASF591:
 14258 6e89 5F5F6E6F 		.ascii	"__no_lock_analysis __lock_annotate(no_thread_safety"
 14258      5F6C6F63 
 14258      6B5F616E 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 361


 14258      616C7973 
 14258      6973205F 
 14259 6ebc 5F616E61 		.ascii	"_analysis)\000"
 14259      6C797369 
 14259      732900
 14260              	.LASF364:
 14261 6ec7 5F535444 		.ascii	"_STDIO_H_ \000"
 14261      494F5F48 
 14261      5F2000
 14262              	.LASF1072:
 14263 6ed2 5F666C6F 		.ascii	"_flock_t\000"
 14263      636B5F74 
 14263      00
 14264              	.LASF1326:
 14265 6edb 70785072 		.ascii	"pxPreviousWakeTime\000"
 14265      6576696F 
 14265      75735761 
 14265      6B655469 
 14265      6D6500
 14266              	.LASF950:
 14267 6eee 706F7274 		.ascii	"portDISABLE_INTERRUPTS() portSET_INTERRUPT_MASK()\000"
 14267      44495341 
 14267      424C455F 
 14267      494E5445 
 14267      52525550 
 14268              	.LASF676:
 14269 6f20 5F524545 		.ascii	"_REENT_CHECK_ASCTIME_BUF(var) _REENT_CHECK(var, _as"
 14269      4E545F43 
 14269      4845434B 
 14269      5F415343 
 14269      54494D45 
 14270 6f53 6374696D 		.ascii	"ctime_buf, char *, _REENT_ASCTIME_SIZE, memset((var"
 14270      655F6275 
 14270      662C2063 
 14270      68617220 
 14270      2A2C205F 
 14271 6f86 292D3E5F 		.ascii	")->_asctime_buf, 0, _REENT_ASCTIME_SIZE))\000"
 14271      61736374 
 14271      696D655F 
 14271      6275662C 
 14271      20302C20 
 14272              	.LASF1142:
 14273 6fb0 5F5F4649 		.ascii	"__FILE\000"
 14273      4C4500
 14274              	.LASF1040:
 14275 6fb7 4D50555F 		.ascii	"MPU_WRAPPERS_INCLUDED_FROM_API_FILE\000"
 14275      57524150 
 14275      50455253 
 14275      5F494E43 
 14275      4C554445 
 14276              	.LASF353:
 14277 6fdb 5F5F4152 		.ascii	"__ARM_NEON_FP\000"
 14277      4D5F4E45 
 14277      4F4E5F46 
 14277      5000
 14278              	.LASF911:
 14279 6fe9 636F6E66 		.ascii	"configIDLE_SHOULD_YIELD 1\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 362


 14279      69674944 
 14279      4C455F53 
 14279      484F554C 
 14279      445F5949 
 14280              	.LASF1233:
 14281 7003 70635374 		.ascii	"pcStatsString\000"
 14281      61747353 
 14281      7472696E 
 14281      6700
 14282              	.LASF874:
 14283 7011 616C6C6F 		.ascii	"alloca(size) __builtin_alloca(size)\000"
 14283      63612873 
 14283      697A6529 
 14283      205F5F62 
 14283      75696C74 
 14284              	.LASF653:
 14285 7035 5F434C4F 		.ascii	"_CLOCKID_T_ unsigned long\000"
 14285      434B4944 
 14285      5F545F20 
 14285      756E7369 
 14285      676E6564 
 14286              	.LASF799:
 14287 704f 5F474944 		.ascii	"_GID_T_DECLARED \000"
 14287      5F545F44 
 14287      45434C41 
 14287      52454420 
 14287      00
 14288              	.LASF285:
 14289 7060 5F5F5554 		.ascii	"__UTQ_IBIT__ 0\000"
 14289      515F4942 
 14289      49545F5F 
 14289      203000
 14290              	.LASF288:
 14291 706f 5F5F5341 		.ascii	"__SA_FBIT__ 15\000"
 14291      5F464249 
 14291      545F5F20 
 14291      313500
 14292              	.LASF619:
 14293 707e 5F5F494E 		.ascii	"__INT_WCHAR_T_H \000"
 14293      545F5743 
 14293      4841525F 
 14293      545F4820 
 14293      00
 14294              	.LASF908:
 14295 708f 636F6E66 		.ascii	"configMAX_TASK_NAME_LEN ( 16 )\000"
 14295      69674D41 
 14295      585F5441 
 14295      534B5F4E 
 14295      414D455F 
 14296              	.LASF429:
 14297 70ae 5F434153 		.ascii	"_CAST_VOID (void)\000"
 14297      545F564F 
 14297      49442028 
 14297      766F6964 
 14297      2900
 14298              	.LASF357:
 14299 70c0 5F5F4152 		.ascii	"__ARM_EABI__ 1\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 363


 14299      4D5F4541 
 14299      42495F5F 
 14299      203100
 14300              	.LASF1120:
 14301 70cf 5F723438 		.ascii	"_r48\000"
 14301      00
 14302              	.LASF242:
 14303 70d4 5F5F5541 		.ascii	"__UACCUM_IBIT__ 16\000"
 14303      4343554D 
 14303      5F494249 
 14303      545F5F20 
 14303      313600
 14304              	.LASF362:
 14305 70e7 5F5F454C 		.ascii	"__ELF__ 1\000"
 14305      465F5F20 
 14305      3100
 14306              	.LASF344:
 14307 70f1 5F5F5448 		.ascii	"__THUMBEL__ 1\000"
 14307      554D4245 
 14307      4C5F5F20 
 14307      3100
 14308              	.LASF620:
 14309 70ff 5F474343 		.ascii	"_GCC_WCHAR_T \000"
 14309      5F574348 
 14309      41525F54 
 14309      2000
 14310              	.LASF1184:
 14311 710d 784C6973 		.ascii	"xListItem\000"
 14311      74497465 
 14311      6D00
 14312              	.LASF1065:
 14313 7117 77696E74 		.ascii	"wint_t\000"
 14313      5F7400
 14314              	.LASF1226:
 14315 711e 7578546F 		.ascii	"uxTopReadyPriority\000"
 14315      70526561 
 14315      64795072 
 14315      696F7269 
 14315      747900
 14316              	.LASF1296:
 14317 7131 70634275 		.ascii	"pcBuffer\000"
 14317      66666572 
 14317      00
 14318              	.LASF267:
 14319 713a 5F5F5151 		.ascii	"__QQ_IBIT__ 0\000"
 14319      5F494249 
 14319      545F5F20 
 14319      3000
 14320              	.LASF829:
 14321 7148 5F5F534F 		.ascii	"__SORD 0x2000\000"
 14321      52442030 
 14321      78323030 
 14321      3000
 14322              	.LASF613:
 14323 7156 5F574348 		.ascii	"_WCHAR_T_ \000"
 14323      41525F54 
 14323      5F2000
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 364


 14324              	.LASF992:
 14325 7161 74726163 		.ascii	"traceQUEUE_RECEIVE(pxQueue) \000"
 14325      65515545 
 14325      55455F52 
 14325      45434549 
 14325      56452870 
 14326              	.LASF946:
 14327 717e 706F7274 		.ascii	"portSET_INTERRUPT_MASK() __asm volatile ( \"\011mov"
 14327      5345545F 
 14327      494E5445 
 14327      52525550 
 14327      545F4D41 
 14328 71ad 2072302C 		.ascii	" r0, %0\011\011\011\011\011\011\011\011\\n\" \"\011"
 14328      20253009 
 14328      09090909 
 14328      0909095C 
 14328      6E222022 
 14329 71c2 6D737220 		.ascii	"msr basepri, r0\011\011\011\011\011\011\011\\n\" ::"
 14329      62617365 
 14329      7072692C 
 14329      20723009 
 14329      09090909 
 14330 71de 22692228 		.ascii	"\"i\"(configMAX_SYSCALL_INTERRUPT_PRIORITY):\"r0\" "
 14330      636F6E66 
 14330      69674D41 
 14330      585F5359 
 14330      5343414C 
 14331 720d 2900     		.ascii	")\000"
 14332              	.LASF673:
 14333 720f 5F5F7265 		.ascii	"__reent_assert(x) ((void)0)\000"
 14333      656E745F 
 14333      61737365 
 14333      72742878 
 14333      29202828 
 14334              	.LASF1074:
 14335 722b 5F6E6578 		.ascii	"_next\000"
 14335      7400
 14336              	.LASF1306:
 14337 7231 78416C72 		.ascii	"xAlreadyYielded\000"
 14337      65616479 
 14337      5969656C 
 14337      64656400 
 14338              	.LASF1105:
 14339 7241 5F646174 		.ascii	"_data\000"
 14339      6100
 14340              	.LASF34:
 14341 7247 5F5F5549 		.ascii	"__UINTMAX_TYPE__ long long unsigned int\000"
 14341      4E544D41 
 14341      585F5459 
 14341      50455F5F 
 14341      206C6F6E 
 14342              	.LASF417:
 14343 726f 5F4E4F41 		.ascii	"_NOARGS void\000"
 14343      52475320 
 14343      766F6964 
 14343      00
 14344              	.LASF988:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 365


 14345 727c 74726163 		.ascii	"traceCREATE_COUNTING_SEMAPHORE() \000"
 14345      65435245 
 14345      4154455F 
 14345      434F554E 
 14345      54494E47 
 14346              	.LASF281:
 14347 729e 5F5F5553 		.ascii	"__USQ_IBIT__ 0\000"
 14347      515F4942 
 14347      49545F5F 
 14347      203000
 14348              	.LASF3:
 14349 72ad 5F5F474E 		.ascii	"__GNUC_MINOR__ 3\000"
 14349      55435F4D 
 14349      494E4F52 
 14349      5F5F2033 
 14349      00
 14350              	.LASF52:
 14351 72be 5F5F5549 		.ascii	"__UINT_LEAST32_TYPE__ long unsigned int\000"
 14351      4E545F4C 
 14351      45415354 
 14351      33325F54 
 14351      5950455F 
 14352              	.LASF1038:
 14353 72e6 7461736B 		.ascii	"taskFIRST_CHECK_FOR_STACK_OVERFLOW() { extern void "
 14353      46495253 
 14353      545F4348 
 14353      45434B5F 
 14353      464F525F 
 14354 7319 76417070 		.ascii	"vApplicationStackOverflowHook( xTaskHandle *pxTask,"
 14354      6C696361 
 14354      74696F6E 
 14354      53746163 
 14354      6B4F7665 
 14355 734c 20736967 		.ascii	" signed char *pcTaskName ); if( pxCurrentTCB->pxTop"
 14355      6E656420 
 14355      63686172 
 14355      202A7063 
 14355      5461736B 
 14356 737f 4F665374 		.ascii	"OfStack <= pxCurrentTCB->pxStack ) { vApplicationSt"
 14356      61636B20 
 14356      3C3D2070 
 14356      78437572 
 14356      72656E74 
 14357 73b2 61636B4F 		.ascii	"ackOverflowHook( ( xTaskHandle ) pxCurrentTCB, pxCu"
 14357      76657266 
 14357      6C6F7748 
 14357      6F6F6B28 
 14357      20282078 
 14358 73e5 7272656E 		.ascii	"rrentTCB->pcTaskName ); } }\000"
 14358      74544342 
 14358      2D3E7063 
 14358      5461736B 
 14358      4E616D65 
 14359              	.LASF279:
 14360 7401 5F5F5548 		.ascii	"__UHQ_IBIT__ 0\000"
 14360      515F4942 
 14360      49545F5F 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 366


 14360      203000
 14361              	.LASF588:
 14362 7410 5F5F7265 		.ascii	"__requires_exclusive(...) __lock_annotate(exclusive"
 14362      71756972 
 14362      65735F65 
 14362      78636C75 
 14362      73697665 
 14363 7443 5F6C6F63 		.ascii	"_locks_required(__VA_ARGS__))\000"
 14363      6B735F72 
 14363      65717569 
 14363      72656428 
 14363      5F5F5641 
 14364              	.LASF665:
 14365 7461 5F52414E 		.ascii	"_RAND48_MULT_1 (0xdeec)\000"
 14365      4434385F 
 14365      4D554C54 
 14365      5F312028 
 14365      30786465 
 14366              	.LASF33:
 14367 7479 5F5F494E 		.ascii	"__INTMAX_TYPE__ long long int\000"
 14367      544D4158 
 14367      5F545950 
 14367      455F5F20 
 14367      6C6F6E67 
 14368              	.LASF1051:
 14369 7497 70727647 		.ascii	"prvGetTCBFromHandle(pxHandle) ( ( pxHandle == NULL "
 14369      65745443 
 14369      4246726F 
 14369      6D48616E 
 14369      646C6528 
 14370 74ca 29203F20 		.ascii	") ? ( tskTCB * ) pxCurrentTCB : ( tskTCB * ) pxHand"
 14370      28207473 
 14370      6B544342 
 14370      202A2029 
 14370      20707843 
 14371 74fd 6C652029 		.ascii	"le )\000"
 14371      00
 14372              	.LASF316:
 14373 7502 5F5F4743 		.ascii	"__GCC_ATOMIC_INT_LOCK_FREE 2\000"
 14373      435F4154 
 14373      4F4D4943 
 14373      5F494E54 
 14373      5F4C4F43 
 14374              	.LASF1292:
 14375 751f 70785465 		.ascii	"pxTemp\000"
 14375      6D7000
 14376              	.LASF188:
 14377 7526 5F5F5346 		.ascii	"__SFRACT_MIN__ (-0.5HR-0.5HR)\000"
 14377      52414354 
 14377      5F4D494E 
 14377      5F5F2028 
 14377      2D302E35 
 14378              	.LASF802:
 14379 7544 5F535349 		.ascii	"_SSIZE_T_DECLARED \000"
 14379      5A455F54 
 14379      5F444543 
 14379      4C415245 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 367


 14379      442000
 14380              	.LASF497:
 14381 7557 5F5F474E 		.ascii	"__GNUCLIKE_CTOR_SECTION_HANDLING 1\000"
 14381      55434C49 
 14381      4B455F43 
 14381      544F525F 
 14381      53454354 
 14382              	.LASF656:
 14383 757a 5F5F4C6F 		.ascii	"__Long long\000"
 14383      6E67206C 
 14383      6F6E6700 
 14384              	.LASF450:
 14385 7586 5F5F5F69 		.ascii	"___int_least32_t_defined 1\000"
 14385      6E745F6C 
 14385      65617374 
 14385      33325F74 
 14385      5F646566 
 14386              	.LASF468:
 14387 75a1 5F53495A 		.ascii	"_SIZET_ \000"
 14387      45545F20 
 14387      00
 14388              	.LASF936:
 14389 75aa 706F7274 		.ascii	"portLONG long\000"
 14389      4C4F4E47 
 14389      206C6F6E 
 14389      6700
 14390              	.LASF235:
 14391 75b8 5F5F5553 		.ascii	"__USACCUM_EPSILON__ 0x1P-8UHK\000"
 14391      41434355 
 14391      4D5F4550 
 14391      53494C4F 
 14391      4E5F5F20 
 14392              	.LASF150:
 14393 75d6 5F5F4442 		.ascii	"__DBL_HAS_QUIET_NAN__ 1\000"
 14393      4C5F4841 
 14393      535F5155 
 14393      4945545F 
 14393      4E414E5F 
 14394              	.LASF934:
 14395 75ee 706F7274 		.ascii	"portFLOAT float\000"
 14395      464C4F41 
 14395      5420666C 
 14395      6F617400 
 14396              	.LASF607:
 14397 75fe 5F5F7763 		.ascii	"__wchar_t__ \000"
 14397      6861725F 
 14397      745F5F20 
 14397      00
 14398              	.LASF1268:
 14399 760b 70757853 		.ascii	"puxStackBuffer\000"
 14399      7461636B 
 14399      42756666 
 14399      657200
 14400              	.LASF435:
 14401 761a 5F4E4F49 		.ascii	"_NOINLINE_STATIC _NOINLINE static\000"
 14401      4E4C494E 
 14401      455F5354 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 368


 14401      41544943 
 14401      205F4E4F 
 14402              	.LASF1036:
 14403 763c 78546173 		.ascii	"xTaskCreateRestricted(x,pxCreatedTask) xTaskGeneric"
 14403      6B437265 
 14403      61746552 
 14403      65737472 
 14403      69637465 
 14404 766f 43726561 		.ascii	"Create( ((x)->pvTaskCode), ((x)->pcName), ((x)->usS"
 14404      74652820 
 14404      28287829 
 14404      2D3E7076 
 14404      5461736B 
 14405 76a2 7461636B 		.ascii	"tackDepth), ((x)->pvParameters), ((x)->uxPriority),"
 14405      44657074 
 14405      68292C20 
 14405      28287829 
 14405      2D3E7076 
 14406 76d5 20287078 		.ascii	" (pxCreatedTask), ((x)->puxStackBuffer), ((x)->xReg"
 14406      43726561 
 14406      74656454 
 14406      61736B29 
 14406      2C202828 
 14407 7708 696F6E73 		.ascii	"ions) )\000"
 14407      29202900 
 14408              	.LASF219:
 14409 7710 5F5F4C4C 		.ascii	"__LLFRACT_MAX__ 0X7FFFFFFFFFFFFFFFP-63LLR\000"
 14409      46524143 
 14409      545F4D41 
 14409      585F5F20 
 14409      30583746 
 14410              	.LASF181:
 14411 773a 5F5F4445 		.ascii	"__DEC128_MAX_EXP__ 6145\000"
 14411      43313238 
 14411      5F4D4158 
 14411      5F455850 
 14411      5F5F2036 
 14412              	.LASF1254:
 14413 7752 70727647 		.ascii	"prvGenerateRunTimeStatsForTasksInList\000"
 14413      656E6572 
 14413      61746552 
 14413      756E5469 
 14413      6D655374 
 14414              	.LASF512:
 14415 7778 5F5F4343 		.ascii	"__CC_SUPPORTS_VARADIC_XXX 1\000"
 14415      5F535550 
 14415      504F5254 
 14415      535F5641 
 14415      52414449 
 14416              	.LASF1251:
 14417 7794 70756353 		.ascii	"pucStackByte\000"
 14417      7461636B 
 14417      42797465 
 14417      00
 14418              	.LASF755:
 14419 77a1 5F535553 		.ascii	"_SUSECONDS_T_DECLARED \000"
 14419      45434F4E 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 369


 14419      44535F54 
 14419      5F444543 
 14419      4C415245 
 14420              	.LASF921:
 14421 77b8 494E434C 		.ascii	"INCLUDE_vTaskCleanUpResources 0\000"
 14421      5544455F 
 14421      76546173 
 14421      6B436C65 
 14421      616E5570 
 14422              	.LASF847:
 14423 77d8 7374646F 		.ascii	"stdout (_REENT->_stdout)\000"
 14423      75742028 
 14423      5F524545 
 14423      4E542D3E 
 14423      5F737464 
 14424              	.LASF229:
 14425 77f1 5F5F5341 		.ascii	"__SACCUM_MAX__ 0X7FFFP-7HK\000"
 14425      4343554D 
 14425      5F4D4158 
 14425      5F5F2030 
 14425      58374646 
 14426              	.LASF62:
 14427 780c 5F5F494E 		.ascii	"__INTPTR_TYPE__ int\000"
 14427      54505452 
 14427      5F545950 
 14427      455F5F20 
 14427      696E7400 
 14428              	.LASF35:
 14429 7820 5F5F4348 		.ascii	"__CHAR16_TYPE__ short unsigned int\000"
 14429      41523136 
 14429      5F545950 
 14429      455F5F20 
 14429      73686F72 
 14430              	.LASF63:
 14431 7843 5F5F5549 		.ascii	"__UINTPTR_TYPE__ unsigned int\000"
 14431      4E545054 
 14431      525F5459 
 14431      50455F5F 
 14431      20756E73 
 14432              	.LASF995:
 14433 7861 74726163 		.ascii	"traceQUEUE_SEND_FROM_ISR(pxQueue) \000"
 14433      65515545 
 14433      55455F53 
 14433      454E445F 
 14433      46524F4D 
 14434              	.LASF302:
 14435 7884 5F5F5245 		.ascii	"__REGISTER_PREFIX__ \000"
 14435      47495354 
 14435      45525F50 
 14435      52454649 
 14435      585F5F20 
 14436              	.LASF185:
 14437 7899 5F5F4445 		.ascii	"__DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000"
 14437      43313238 
 14437      5F535542 
 14437      4E4F524D 
 14437      414C5F4D 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 370


 14438 78cc 30303030 		.ascii	"000000001E-6143DL\000"
 14438      30303030 
 14438      31452D36 
 14438      31343344 
 14438      4C00
 14439              	.LASF138:
 14440 78de 5F5F4442 		.ascii	"__DBL_DIG__ 15\000"
 14440      4C5F4449 
 14440      475F5F20 
 14440      313500
 14441              	.LASF215:
 14442 78ed 5F5F554C 		.ascii	"__ULFRACT_EPSILON__ 0x1P-32ULR\000"
 14442      46524143 
 14442      545F4550 
 14442      53494C4F 
 14442      4E5F5F20 
 14443              	.LASF570:
 14444 790c 5F5F5243 		.ascii	"__RCSID(s) struct __hack\000"
 14444      53494428 
 14444      73292073 
 14444      74727563 
 14444      74205F5F 
 14445              	.LASF975:
 14446 7925 74726163 		.ascii	"traceEND() \000"
 14446      65454E44 
 14446      28292000 
 14447              	.LASF813:
 14448 7931 5F4E4557 		.ascii	"_NEWLIB_STDIO_H \000"
 14448      4C49425F 
 14448      53544449 
 14448      4F5F4820 
 14448      00
 14449              	.LASF753:
 14450 7942 5F535953 		.ascii	"_SYS__SIGSET_H_ \000"
 14450      5F5F5349 
 14450      47534554 
 14450      5F485F20 
 14450      00
 14451              	.LASF706:
 14452 7953 5F524545 		.ascii	"_REENT_L64A_BUF(ptr) ((ptr)->_misc->_l64a_buf)\000"
 14452      4E545F4C 
 14452      3634415F 
 14452      42554628 
 14452      70747229 
 14453              	.LASF1199:
 14454 7982 756C4C65 		.ascii	"ulLengthInBytes\000"
 14454      6E677468 
 14454      496E4279 
 14454      74657300 
 14455              	.LASF1217:
 14456 7992 70784465 		.ascii	"pxDelayedTaskList\000"
 14456      6C617965 
 14456      64546173 
 14456      6B4C6973 
 14456      7400
 14457              	.LASF1187:
 14458 79a4 784C4953 		.ascii	"xLIST\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 371


 14458      5400
 14459              	.LASF495:
 14460 79aa 5F5F474E 		.ascii	"__GNUCLIKE___OFFSETOF 1\000"
 14460      55434C49 
 14460      4B455F5F 
 14460      5F4F4646 
 14460      5345544F 
 14461              	.LASF182:
 14462 79c2 5F5F4445 		.ascii	"__DEC128_MIN__ 1E-6143DL\000"
 14462      43313238 
 14462      5F4D494E 
 14462      5F5F2031 
 14462      452D3631 
 14463              	.LASF99:
 14464 79db 5F5F494E 		.ascii	"__INT64_C(c) c ## LL\000"
 14464      5436345F 
 14464      43286329 
 14464      20632023 
 14464      23204C4C 
 14465              	.LASF376:
 14466 79f0 48415645 		.ascii	"HAVE_INITFINI_ARRAY 1\000"
 14466      5F494E49 
 14466      5446494E 
 14466      495F4152 
 14466      52415920 
 14467              	.LASF580:
 14468 7a06 5F5F6C6F 		.ascii	"__lockable __lock_annotate(lockable)\000"
 14468      636B6162 
 14468      6C65205F 
 14468      5F6C6F63 
 14468      6B5F616E 
 14469              	.LASF411:
 14470 7a2b 5F484156 		.ascii	"_HAVE_STDC \000"
 14470      455F5354 
 14470      44432000 
 14471              	.LASF777:
 14472 7a37 46445F5A 		.ascii	"FD_ZERO(p) (__extension__ (void)({ size_t __i; char"
 14472      45524F28 
 14472      70292028 
 14472      5F5F6578 
 14472      74656E73 
 14473 7a6a 202A5F5F 		.ascii	" *__tmp = (char *)p; for (__i = 0; __i < sizeof (*("
 14473      746D7020 
 14473      3D202863 
 14473      68617220 
 14473      2A29703B 
 14474 7a9d 7029293B 		.ascii	"p)); ++__i) *__tmp++ = 0; }))\000"
 14474      202B2B5F 
 14474      5F692920 
 14474      2A5F5F74 
 14474      6D702B2B 
 14475              	.LASF491:
 14476 7abb 5F5F454E 		.ascii	"__END_DECLS \000"
 14476      445F4445 
 14476      434C5320 
 14476      00
 14477              	.LASF734:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 372


 14478 7ac8 5F5F4D41 		.ascii	"__MACHINE_ENDIAN_H__ \000"
 14478      4348494E 
 14478      455F454E 
 14478      4449414E 
 14478      5F485F5F 
 14479              	.LASF537:
 14480 7ade 5F5F6765 		.ascii	"__generic(expr,t,yes,no) __builtin_choose_expr( __b"
 14480      6E657269 
 14480      63286578 
 14480      70722C74 
 14480      2C796573 
 14481 7b11 75696C74 		.ascii	"uiltin_types_compatible_p(__typeof(expr), t), yes, "
 14481      696E5F74 
 14481      79706573 
 14481      5F636F6D 
 14481      70617469 
 14482 7b44 6E6F2900 		.ascii	"no)\000"
 14483              	.LASF159:
 14484 7b48 5F5F4C44 		.ascii	"__LDBL_MIN__ 2.2250738585072014e-308L\000"
 14484      424C5F4D 
 14484      494E5F5F 
 14484      20322E32 
 14484      32353037 
 14485              	.LASF237:
 14486 7b6e 5F5F4143 		.ascii	"__ACCUM_IBIT__ 16\000"
 14486      43554D5F 
 14486      49424954 
 14486      5F5F2031 
 14486      3600
 14487              	.LASF773:
 14488 7b80 66645F73 		.ascii	"fd_set _types_fd_set\000"
 14488      6574205F 
 14488      74797065 
 14488      735F6664 
 14488      5F736574 
 14489              	.LASF1218:
 14490 7b95 70784F76 		.ascii	"pxOverflowDelayedTaskList\000"
 14490      6572666C 
 14490      6F774465 
 14490      6C617965 
 14490      64546173 
 14491              	.LASF647:
 14492 7baf 756E7369 		.ascii	"unsigned\000"
 14492      676E6564 
 14492      00
 14493              	.LASF747:
 14494 7bb8 5F5F6273 		.ascii	"__bswap64(_x) __builtin_bswap64(_x)\000"
 14494      77617036 
 14494      34285F78 
 14494      29205F5F 
 14494      6275696C 
 14495              	.LASF1158:
 14496 7bdc 5F6D626C 		.ascii	"_mblen_state\000"
 14496      656E5F73 
 14496      74617465 
 14496      00
 14497              	.LASF489:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 373


 14498 7be9 5F5F6861 		.ascii	"__has_builtin(x) 0\000"
 14498      735F6275 
 14498      696C7469 
 14498      6E287829 
 14498      203000
 14499              	.LASF838:
 14500 7bfc 464F5045 		.ascii	"FOPEN_MAX 20\000"
 14500      4E5F4D41 
 14500      58203230 
 14500      00
 14501              	.LASF1005:
 14502 7c09 74726163 		.ascii	"traceTASK_PRIORITY_SET(pxTask,uxNewPriority) \000"
 14502      65544153 
 14502      4B5F5052 
 14502      494F5249 
 14502      54595F53 
 14503              	.LASF881:
 14504 7c37 5F535452 		.ascii	"_STRING_H_ \000"
 14504      494E475F 
 14504      485F2000 
 14505              	.LASF1318:
 14506 7c43 76546173 		.ascii	"vTaskPrioritySet\000"
 14506      6B507269 
 14506      6F726974 
 14506      79536574 
 14506      00
 14507              	.LASF594:
 14508 7c54 5F535444 		.ascii	"_STDDEF_H \000"
 14508      4445465F 
 14508      482000
 14509              	.LASF593:
 14510 7c5f 5F5F7074 		.ascii	"__pt_guarded_by(x) __lock_annotate(pt_guarded_by(x)"
 14510      5F677561 
 14510      72646564 
 14510      5F627928 
 14510      7829205F 
 14511 7c92 2900     		.ascii	")\000"
 14512              	.LASF592:
 14513 7c94 5F5F6775 		.ascii	"__guarded_by(x) __lock_annotate(guarded_by(x))\000"
 14513      61726465 
 14513      645F6279 
 14513      28782920 
 14513      5F5F6C6F 
 14514              	.LASF1019:
 14515 7cc3 6C697374 		.ascii	"listGET_LIST_ITEM_VALUE(pxListItem) ( ( pxListItem "
 14515      4745545F 
 14515      4C495354 
 14515      5F495445 
 14515      4D5F5641 
 14516 7cf6 292D3E78 		.ascii	")->xItemValue )\000"
 14516      4974656D 
 14516      56616C75 
 14516      65202900 
 14517              	.LASF103:
 14518 7d06 5F5F5549 		.ascii	"__UINT16_C(c) c\000"
 14518      4E543136 
 14518      5F432863 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 374


 14518      29206300 
 14519              	.LASF567:
 14520 7d16 5F5F7379 		.ascii	"__sym_compat(sym,impl,verid) __asm__(\".symver \" #"
 14520      6D5F636F 
 14520      6D706174 
 14520      2873796D 
 14520      2C696D70 
 14521 7d47 696D706C 		.ascii	"impl \", \" #sym \"@\" #verid)\000"
 14521      20222C20 
 14521      22202373 
 14521      796D2022 
 14521      40222023 
 14522              	.LASF509:
 14523 7d62 5F5F4343 		.ascii	"__CC_SUPPORTS___INLINE__ 1\000"
 14523      5F535550 
 14523      504F5254 
 14523      535F5F5F 
 14523      494E4C49 
 14524              	.LASF299:
 14525 7d7d 5F5F5544 		.ascii	"__UDA_IBIT__ 32\000"
 14525      415F4942 
 14525      49545F5F 
 14525      20333200 
 14526              	.LASF557:
 14527 7d8d 5F5F7072 		.ascii	"__printflike(fmtarg,firstvararg) __attribute__((__f"
 14527      696E7466 
 14527      6C696B65 
 14527      28666D74 
 14527      6172672C 
 14528 7dc0 6F726D61 		.ascii	"ormat__ (__printf__, fmtarg, firstvararg)))\000"
 14528      745F5F20 
 14528      285F5F70 
 14528      72696E74 
 14528      665F5F2C 
 14529              	.LASF305:
 14530 7dec 5F5F4E4F 		.ascii	"__NO_INLINE__ 1\000"
 14530      5F494E4C 
 14530      494E455F 
 14530      5F203100 
 14531              	.LASF544:
 14532 7dfc 5F5F6661 		.ascii	"__fastcall __attribute__((__fastcall__))\000"
 14532      73746361 
 14532      6C6C205F 
 14532      5F617474 
 14532      72696275 
 14533              	.LASF770:
 14534 7e25 46445F53 		.ascii	"FD_SETSIZE 64\000"
 14534      45545349 
 14534      5A452036 
 14534      3400
 14535              	.LASF579:
 14536 7e33 5F5F6C6F 		.ascii	"__lock_annotate(x) \000"
 14536      636B5F61 
 14536      6E6E6F74 
 14536      61746528 
 14536      78292000 
 14537              	.LASF6:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 375


 14538 7e47 5F5F4154 		.ascii	"__ATOMIC_RELAXED 0\000"
 14538      4F4D4943 
 14538      5F52454C 
 14538      41584544 
 14538      203000
 14539              	.LASF432:
 14540 7e5a 5F415454 		.ascii	"_ATTRIBUTE(attrs) __attribute__ (attrs)\000"
 14540      52494255 
 14540      54452861 
 14540      74747273 
 14540      29205F5F 
 14541              	.LASF711:
 14542 7e82 5F5F4154 		.ascii	"__ATTRIBUTE_IMPURE_PTR__ \000"
 14542      54524942 
 14542      5554455F 
 14542      494D5055 
 14542      52455F50 
 14543              	.LASF149:
 14544 7e9c 5F5F4442 		.ascii	"__DBL_HAS_INFINITY__ 1\000"
 14544      4C5F4841 
 14544      535F494E 
 14544      46494E49 
 14544      54595F5F 
 14545              	.LASF562:
 14546 7eb3 5F5F676E 		.ascii	"__gnu_inline __attribute__((__gnu_inline__, __artif"
 14546      755F696E 
 14546      6C696E65 
 14546      205F5F61 
 14546      74747269 
 14547 7ee6 69636961 		.ascii	"icial__))\000"
 14547      6C5F5F29 
 14547      2900
 14548              	.LASF82:
 14549 7ef0 5F5F5349 		.ascii	"__SIG_ATOMIC_MAX__ 0x7fffffff\000"
 14549      475F4154 
 14549      4F4D4943 
 14549      5F4D4158 
 14549      5F5F2030 
 14550              	.LASF664:
 14551 7f0e 5F52414E 		.ascii	"_RAND48_MULT_0 (0xe66d)\000"
 14551      4434385F 
 14551      4D554C54 
 14551      5F302028 
 14551      30786536 
 14552              	.LASF678:
 14553 7f26 5F524545 		.ascii	"_REENT_CHECK_RAND48(var) _REENT_CHECK(var, _r48, st"
 14553      4E545F43 
 14553      4845434B 
 14553      5F52414E 
 14553      44343828 
 14554 7f59 72756374 		.ascii	"ruct _rand48 *, sizeof *((var)->_r48), _REENT_INIT_"
 14554      205F7261 
 14554      6E643438 
 14554      202A2C20 
 14554      73697A65 
 14555 7f8c 52414E44 		.ascii	"RAND48((var)))\000"
 14555      34382828 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 376


 14555      76617229 
 14555      292900
 14556              	.LASF883:
 14557 7f9b 4D50555F 		.ascii	"MPU_WRAPPERS_INCLUDED_FROM_API_FILE \000"
 14557      57524150 
 14557      50455253 
 14557      5F494E43 
 14557      4C554445 
 14558              	.LASF1024:
 14559 7fc0 6C697374 		.ascii	"listIS_CONTAINED_WITHIN(pxList,pxListItem) ( ( pxLi"
 14559      49535F43 
 14559      4F4E5441 
 14559      494E4544 
 14559      5F574954 
 14560 7ff3 73744974 		.ascii	"stItem )->pvContainer == ( void * ) pxList )\000"
 14560      656D2029 
 14560      2D3E7076 
 14560      436F6E74 
 14560      61696E65 
 14561              	.LASF1092:
 14562 8020 5F666E74 		.ascii	"_fntypes\000"
 14562      79706573 
 14562      00
 14563              	.LASF1174:
 14564 8029 7375626F 		.ascii	"suboptarg\000"
 14564      70746172 
 14564      6700
 14565              	.LASF1022:
 14566 8033 6C697374 		.ascii	"listGET_OWNER_OF_NEXT_ENTRY(pxTCB,pxList) { xList *"
 14566      4745545F 
 14566      4F574E45 
 14566      525F4F46 
 14566      5F4E4558 
 14567 8066 20636F6E 		.ascii	" const pxConstList = pxList; ( pxConstList )->pxInd"
 14567      73742070 
 14567      78436F6E 
 14567      73744C69 
 14567      7374203D 
 14568 8099 6578203D 		.ascii	"ex = ( pxConstList )->pxIndex->pxNext; if( ( pxCons"
 14568      20282070 
 14568      78436F6E 
 14568      73744C69 
 14568      73742029 
 14569 80cc 744C6973 		.ascii	"tList )->pxIndex == ( xListItem * ) &( ( pxConstLis"
 14569      7420292D 
 14569      3E707849 
 14569      6E646578 
 14569      203D3D20 
 14570 80ff 7420292D 		.ascii	"t )->xListEnd ) ) { ( pxConstList )->pxIndex = ( px"
 14570      3E784C69 
 14570      7374456E 
 14570      64202920 
 14570      29207B20 
 14571 8132 436F6E73 		.ascii	"ConstList )->pxIndex->pxNext; } pxTCB = ( pxConstLi"
 14571      744C6973 
 14571      7420292D 
 14571      3E707849 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 377


 14571      6E646578 
 14572 8165 73742029 		.ascii	"st )->pxIndex->pvOwner; }\000"
 14572      2D3E7078 
 14572      496E6465 
 14572      782D3E70 
 14572      764F776E 
 14573              	.LASF767:
 14574 817f 54494D45 		.ascii	"TIMESPEC_TO_TIMEVAL(tv,ts) do { (tv)->tv_sec = (ts)"
 14574      53504543 
 14574      5F544F5F 
 14574      54494D45 
 14574      56414C28 
 14575 81b2 2D3E7476 		.ascii	"->tv_sec; (tv)->tv_usec = (ts)->tv_nsec / 1000; } w"
 14575      5F736563 
 14575      3B202874 
 14575      76292D3E 
 14575      74765F75 
 14576 81e5 68696C65 		.ascii	"hile (0)\000"
 14576      20283029 
 14576      00
 14577              	.LASF363:
 14578 81ee 5F5F5553 		.ascii	"__USES_INITFINI__ 1\000"
 14578      45535F49 
 14578      4E495446 
 14578      494E495F 
 14578      5F203100 
 14579              	.LASF972:
 14580 8202 76517565 		.ascii	"vQueueAddToRegistry(xQueue,pcName) \000"
 14580      75654164 
 14580      64546F52 
 14580      65676973 
 14580      74727928 
 14581              	.LASF175:
 14582 8226 5F5F4445 		.ascii	"__DEC64_MIN__ 1E-383DD\000"
 14582      4336345F 
 14582      4D494E5F 
 14582      5F203145 
 14582      2D333833 
 14583              	.LASF483:
 14584 823d 5F5F666C 		.ascii	"__flexarr [0]\000"
 14584      65786172 
 14584      72205B30 
 14584      5D00
 14585              	.LASF214:
 14586 824b 5F5F554C 		.ascii	"__ULFRACT_MAX__ 0XFFFFFFFFP-32ULR\000"
 14586      46524143 
 14586      545F4D41 
 14586      585F5F20 
 14586      30584646 
 14587              	.LASF143:
 14588 826d 5F5F4442 		.ascii	"__DBL_DECIMAL_DIG__ 17\000"
 14588      4C5F4445 
 14588      43494D41 
 14588      4C5F4449 
 14588      475F5F20 
 14589              	.LASF1075:
 14590 8284 5F6D6178 		.ascii	"_maxwds\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 378


 14590      77647300 
 14591              	.LASF443:
 14592 828c 5F5F6861 		.ascii	"__have_long32 1\000"
 14592      76655F6C 
 14592      6F6E6733 
 14592      32203100 
 14593              	.LASF858:
 14594 829c 5F5F7366 		.ascii	"__sferror(p) ((int)(((p)->_flags & __SERR) != 0))\000"
 14594      6572726F 
 14594      72287029 
 14594      20282869 
 14594      6E742928 
 14595              	.LASF1336:
 14596 82ce 433A5C57 		.ascii	"C:\\WorkspaceSTM\\stm32F1\000"
 14596      6F726B73 
 14596      70616365 
 14596      53544D5C 
 14596      73746D33 
 14597              	.LASF655:
 14598 82e6 5F4E554C 		.ascii	"_NULL 0\000"
 14598      4C203000 
 14599              	.LASF1299:
 14600 82ee 75785175 		.ascii	"uxQueue\000"
 14600      65756500 
 14601              	.LASF1085:
 14602 82f6 5F5F746D 		.ascii	"__tm_year\000"
 14602      5F796561 
 14602      7200
 14603              	.LASF128:
 14604 8300 5F5F464C 		.ascii	"__FLT_MAX_10_EXP__ 38\000"
 14604      545F4D41 
 14604      585F3130 
 14604      5F455850 
 14604      5F5F2033 
 14605              	.LASF672:
 14606 8316 5F524545 		.ascii	"_REENT_INIT_PTR_ZEROED(var) { (var)->_stdin = (__FI"
 14606      4E545F49 
 14606      4E49545F 
 14606      5054525F 
 14606      5A45524F 
 14607 8349 4C45202A 		.ascii	"LE *)&__sf_fake_stdin; (var)->_stdout = (__FILE *)&"
 14607      29265F5F 
 14607      73665F66 
 14607      616B655F 
 14607      73746469 
 14608 837c 5F5F7366 		.ascii	"__sf_fake_stdout; (var)->_stderr = (__FILE *)&__sf_"
 14608      5F66616B 
 14608      655F7374 
 14608      646F7574 
 14608      3B202876 
 14609 83af 66616B65 		.ascii	"fake_stderr; }\000"
 14609      5F737464 
 14609      6572723B 
 14609      207D00
 14610              	.LASF85:
 14611 83be 5F5F494E 		.ascii	"__INT16_MAX__ 0x7fff\000"
 14611      5431365F 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 379


 14611      4D41585F 
 14611      5F203078 
 14611      37666666 
 14612              	.LASF381:
 14613 83d3 5F5F5359 		.ascii	"__SYS_CONFIG_H__ \000"
 14613      535F434F 
 14613      4E464947 
 14613      5F485F5F 
 14613      2000
 14614              	.LASF938:
 14615 83e5 706F7274 		.ascii	"portSTACK_TYPE unsigned portLONG\000"
 14615      53544143 
 14615      4B5F5459 
 14615      50452075 
 14615      6E736967 
 14616              	.LASF575:
 14617 8406 5F5F4445 		.ascii	"__DEVOLATILE(type,var) ((type)(__uintptr_t)(volatil"
 14617      564F4C41 
 14617      54494C45 
 14617      28747970 
 14617      652C7661 
 14618 8439 6520766F 		.ascii	"e void *)(var))\000"
 14618      6964202A 
 14618      29287661 
 14618      72292900 
 14619              	.LASF608:
 14620 8449 5F5F5743 		.ascii	"__WCHAR_T__ \000"
 14620      4841525F 
 14620      545F5F20 
 14620      00
 14621              	.LASF871:
 14622 8456 5F4D4143 		.ascii	"_MACHSTDLIB_H_ \000"
 14622      48535444 
 14622      4C49425F 
 14622      485F2000 
 14623              	.LASF545:
 14624 8466 5F5F7265 		.ascii	"__result_use_check __attribute__((__warn_unused_res"
 14624      73756C74 
 14624      5F757365 
 14624      5F636865 
 14624      636B205F 
 14625 8499 756C745F 		.ascii	"ult__))\000"
 14625      5F292900 
 14626              	.LASF402:
 14627 84a1 5F5F5853 		.ascii	"__XSI_VISIBLE 0\000"
 14627      495F5649 
 14627      5349424C 
 14627      45203000 
 14628              	.LASF1220:
 14629 84b1 78546173 		.ascii	"xTasksWaitingTermination\000"
 14629      6B735761 
 14629      6974696E 
 14629      67546572 
 14629      6D696E61 
 14630              	.LASF869:
 14631 84ca 5F535444 		.ascii	"_STDLIB_H_ \000"
 14631      4C49425F 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 380


 14631      485F2000 
 14632              	.LASF834:
 14633 84d6 5F494F4C 		.ascii	"_IOLBF 1\000"
 14633      42462031 
 14633      00
 14634              	.LASF1234:
 14635 84df 756C5461 		.ascii	"ulTaskSwitchedInTime\000"
 14635      736B5377 
 14635      69746368 
 14635      6564496E 
 14635      54696D65 
 14636              	.LASF837:
 14637 84f4 42554653 		.ascii	"BUFSIZ 1024\000"
 14637      495A2031 
 14637      30323400 
 14638              	.LASF963:
 14639 8500 636F6E66 		.ascii	"configUSE_APPLICATION_TASK_TAG 0\000"
 14639      69675553 
 14639      455F4150 
 14639      504C4943 
 14639      4154494F 
 14640              	.LASF781:
 14641 8521 5F494E5F 		.ascii	"_IN_PORT_T_DECLARED \000"
 14641      504F5254 
 14641      5F545F44 
 14641      45434C41 
 14641      52454420 
 14642              	.LASF718:
 14643 8536 5F494E54 		.ascii	"_INT8_T_DECLARED \000"
 14643      385F545F 
 14643      4445434C 
 14643      41524544 
 14643      2000
 14644              	.LASF659:
 14645 8548 5F524545 		.ascii	"_REENT_INIT_ATEXIT \000"
 14645      4E545F49 
 14645      4E49545F 
 14645      41544558 
 14645      49542000 
 14646              	.LASF385:
 14647 855c 5F5F474E 		.ascii	"__GNUC_PREREQ__(ma,mi) __GNUC_PREREQ(ma, mi)\000"
 14647      55435F50 
 14647      52455245 
 14647      515F5F28 
 14647      6D612C6D 
 14648              	.LASF1029:
 14649 8589 7461736B 		.ascii	"taskEXIT_CRITICAL() portEXIT_CRITICAL()\000"
 14649      45584954 
 14649      5F435249 
 14649      54494341 
 14649      4C282920 
 14650              	.LASF301:
 14651 85b1 5F5F5554 		.ascii	"__UTA_IBIT__ 64\000"
 14651      415F4942 
 14651      49545F5F 
 14651      20363400 
 14652              	.LASF262:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 381


 14653 85c1 5F5F554C 		.ascii	"__ULLACCUM_IBIT__ 32\000"
 14653      4C414343 
 14653      554D5F49 
 14653      4249545F 
 14653      5F203332 
 14654              	.LASF564:
 14655 85d6 5F5F7374 		.ascii	"__strong_reference(sym,aliassym) extern __typeof (s"
 14655      726F6E67 
 14655      5F726566 
 14655      6572656E 
 14655      63652873 
 14656 8609 796D2920 		.ascii	"ym) aliassym __attribute__ ((__alias__ (#sym)))\000"
 14656      616C6961 
 14656      7373796D 
 14656      205F5F61 
 14656      74747269 
 14657              	.LASF225:
 14658 8639 5F5F554C 		.ascii	"__ULLFRACT_EPSILON__ 0x1P-64ULLR\000"
 14658      4C465241 
 14658      43545F45 
 14658      5053494C 
 14658      4F4E5F5F 
 14659              	.LASF1104:
 14660 865a 5F6C6266 		.ascii	"_lbfsize\000"
 14660      73697A65 
 14660      00
 14661              	.LASF634:
 14662 8663 5F5F4C4F 		.ascii	"__LOCK_INIT_RECURSIVE(class,lock) static int lock ="
 14662      434B5F49 
 14662      4E49545F 
 14662      52454355 
 14662      52534956 
 14663 8696 20303B00 		.ascii	" 0;\000"
 14664              	.LASF324:
 14665 869a 5F5F5349 		.ascii	"__SIZEOF_WINT_T__ 4\000"
 14665      5A454F46 
 14665      5F57494E 
 14665      545F545F 
 14665      5F203400 
 14666              	.LASF1095:
 14667 86ae 5F696E64 		.ascii	"_ind\000"
 14667      00
 14668              	.LASF330:
 14669 86b3 5F5F4152 		.ascii	"__ARM_FEATURE_UNALIGNED 1\000"
 14669      4D5F4645 
 14669      41545552 
 14669      455F554E 
 14669      414C4947 
 14670              	.LASF218:
 14671 86cd 5F5F4C4C 		.ascii	"__LLFRACT_MIN__ (-0.5LLR-0.5LLR)\000"
 14671      46524143 
 14671      545F4D49 
 14671      4E5F5F20 
 14671      282D302E 
 14672              	.LASF582:
 14673 86ee 5F5F6C6F 		.ascii	"__locks_shared(...) __lock_annotate(shared_lock_fun"
 14673      636B735F 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 382


 14673      73686172 
 14673      6564282E 
 14673      2E2E2920 
 14674 8721 6374696F 		.ascii	"ction(__VA_ARGS__))\000"
 14674      6E285F5F 
 14674      56415F41 
 14674      5247535F 
 14674      5F292900 
 14675              	.LASF1209:
 14676 8735 75785443 		.ascii	"uxTCBNumber\000"
 14676      424E756D 
 14676      62657200 
 14677              	.LASF422:
 14678 8741 5F564F49 		.ascii	"_VOID void\000"
 14678      4420766F 
 14678      696400
 14679              	.LASF492:
 14680 874c 5F5F474E 		.ascii	"__GNUCLIKE_ASM 3\000"
 14680      55434C49 
 14680      4B455F41 
 14680      534D2033 
 14680      00
 14681              	.LASF248:
 14682 875d 5F5F4C41 		.ascii	"__LACCUM_MIN__ (-0X1P31LK-0X1P31LK)\000"
 14682      4343554D 
 14682      5F4D494E 
 14682      5F5F2028 
 14682      2D305831 
 14683              	.LASF108:
 14684 8781 5F5F494E 		.ascii	"__INT_FAST8_MAX__ 0x7fffffff\000"
 14684      545F4641 
 14684      5354385F 
 14684      4D41585F 
 14684      5F203078 
 14685              	.LASF558:
 14686 879e 5F5F7363 		.ascii	"__scanflike(fmtarg,firstvararg) __attribute__((__fo"
 14686      616E666C 
 14686      696B6528 
 14686      666D7461 
 14686      72672C66 
 14687 87d1 726D6174 		.ascii	"rmat__ (__scanf__, fmtarg, firstvararg)))\000"
 14687      5F5F2028 
 14687      5F5F7363 
 14687      616E665F 
 14687      5F2C2066 
 14688              	.LASF147:
 14689 87fb 5F5F4442 		.ascii	"__DBL_DENORM_MIN__ ((double)4.9406564584124654e-324"
 14689      4C5F4445 
 14689      4E4F524D 
 14689      5F4D494E 
 14689      5F5F2028 
 14690 882e 4C2900   		.ascii	"L)\000"
 14691              	.LASF263:
 14692 8831 5F5F554C 		.ascii	"__ULLACCUM_MIN__ 0.0ULLK\000"
 14692      4C414343 
 14692      554D5F4D 
 14692      494E5F5F 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 383


 14692      20302E30 
 14693              	.LASF1324:
 14694 884a 78546963 		.ascii	"xTicksToDelay\000"
 14694      6B73546F 
 14694      44656C61 
 14694      7900
 14695              	.LASF1118:
 14696 8858 5F637674 		.ascii	"_cvtlen\000"
 14696      6C656E00 
 14697              	.LASF439:
 14698 8860 5F535953 		.ascii	"_SYS_CDEFS_H_ \000"
 14698      5F434445 
 14698      46535F48 
 14698      5F2000
 14699              	.LASF1196:
 14700 886f 7854696D 		.ascii	"xTimeOutType\000"
 14700      654F7574 
 14700      54797065 
 14700      00
 14701              	.LASF1093:
 14702 887c 5F69735F 		.ascii	"_is_cxa\000"
 14702      63786100 
 14703              	.LASF20:
 14704 8884 5F5F5349 		.ascii	"__SIZEOF_SIZE_T__ 4\000"
 14704      5A454F46 
 14704      5F53495A 
 14704      455F545F 
 14704      5F203400 
 14705              	.LASF501:
 14706 8898 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_VAALIST 1\000"
 14706      55434C49 
 14706      4B455F42 
 14706      55494C54 
 14706      494E5F56 
 14707              	.LASF899:
 14708 88b5 78506F72 		.ascii	"xPortSysTickHandler SysTick_Handler\000"
 14708      74537973 
 14708      5469636B 
 14708      48616E64 
 14708      6C657220 
 14709              	.LASF887:
 14710 88d9 70644641 		.ascii	"pdFALSE ( 0 )\000"
 14710      4C534520 
 14710      28203020 
 14710      2900
 14711              	.LASF1021:
 14712 88e7 6C697374 		.ascii	"listCURRENT_LIST_LENGTH(pxList) ( ( pxList )->uxNum"
 14712      43555252 
 14712      454E545F 
 14712      4C495354 
 14712      5F4C454E 
 14713 891a 6265724F 		.ascii	"berOfItems )\000"
 14713      66497465 
 14713      6D732029 
 14713      00
 14714              	.LASF360:
 14715 8927 5F5F4152 		.ascii	"__ARM_ASM_SYNTAX_UNIFIED__ 1\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 384


 14715      4D5F4153 
 14715      4D5F5359 
 14715      4E544158 
 14715      5F554E49 
 14716              	.LASF880:
 14717 8944 73747274 		.ascii	"strtodf strtof\000"
 14717      6F646620 
 14717      73747274 
 14717      6F6600
 14718              	.LASF788:
 14719 8953 5F424C4B 		.ascii	"_BLKSIZE_T_DECLARED \000"
 14719      53495A45 
 14719      5F545F44 
 14719      45434C41 
 14719      52454420 
 14720              	.LASF44:
 14721 8968 5F5F5549 		.ascii	"__UINT32_TYPE__ long unsigned int\000"
 14721      4E543332 
 14721      5F545950 
 14721      455F5F20 
 14721      6C6F6E67 
 14722              	.LASF493:
 14723 898a 5F5F474E 		.ascii	"__GNUCLIKE_MATH_BUILTIN_CONSTANTS \000"
 14723      55434C49 
 14723      4B455F4D 
 14723      4154485F 
 14723      4255494C 
 14724              	.LASF1047:
 14725 89ad 74736B53 		.ascii	"tskSIZE_OF_EACH_TRACE_LINE ( ( unsigned long ) ( si"
 14725      495A455F 
 14725      4F465F45 
 14725      4143485F 
 14725      54524143 
 14726 89e0 7A656F66 		.ascii	"zeof( unsigned long ) + sizeof( unsigned long ) ) )"
 14726      2820756E 
 14726      7369676E 
 14726      6564206C 
 14726      6F6E6720 
 14727 8a13 00       		.ascii	"\000"
 14728              	.LASF343:
 14729 8a14 5F5F7468 		.ascii	"__thumb2__ 1\000"
 14729      756D6232 
 14729      5F5F2031 
 14729      00
 14730              	.LASF1277:
 14731 8a21 70765061 		.ascii	"pvParameters\000"
 14731      72616D65 
 14731      74657273 
 14731      00
 14732              	.LASF771:
 14733 8a2e 4E464442 		.ascii	"NFDBITS (sizeof (fd_mask) * 8)\000"
 14733      49545320 
 14733      2873697A 
 14733      656F6620 
 14733      2866645F 
 14734              	.LASF1151:
 14735 8a4d 5F6D7072 		.ascii	"_mprec\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 385


 14735      656300
 14736              	.LASF386:
 14737 8a54 5F444546 		.ascii	"_DEFAULT_SOURCE\000"
 14737      41554C54 
 14737      5F534F55 
 14737      52434500 
 14738              	.LASF467:
 14739 8a64 5F474343 		.ascii	"_GCC_SIZE_T \000"
 14739      5F53495A 
 14739      455F5420 
 14739      00
 14740              	.LASF956:
 14741 8a71 706F7274 		.ascii	"portNOP() \000"
 14741      4E4F5028 
 14741      292000
 14742              	.LASF1126:
 14743 8a7c 5F6D6973 		.ascii	"_misc\000"
 14743      6300
 14744              	.LASF713:
 14745 8a82 5F474C4F 		.ascii	"_GLOBAL_REENT _global_impure_ptr\000"
 14745      42414C5F 
 14745      5245454E 
 14745      54205F67 
 14745      6C6F6261 
 14746              	.LASF223:
 14747 8aa3 5F5F554C 		.ascii	"__ULLFRACT_MIN__ 0.0ULLR\000"
 14747      4C465241 
 14747      43545F4D 
 14747      494E5F5F 
 14747      20302E30 
 14748              	.LASF610:
 14749 8abc 5F545F57 		.ascii	"_T_WCHAR_ \000"
 14749      43484152 
 14749      5F2000
 14750              	.LASF1115:
 14751 8ac7 5F6C6F63 		.ascii	"_locale\000"
 14751      616C6500 
 14752              	.LASF1073:
 14753 8acf 5F5F554C 		.ascii	"__ULong\000"
 14753      6F6E6700 
 14754              	.LASF572:
 14755 8ad7 5F5F5343 		.ascii	"__SCCSID(s) struct __hack\000"
 14755      43534944 
 14755      28732920 
 14755      73747275 
 14755      6374205F 
 14756              	.LASF13:
 14757 8af1 5F5F5349 		.ascii	"__SIZEOF_INT__ 4\000"
 14757      5A454F46 
 14757      5F494E54 
 14757      5F5F2034 
 14757      00
 14758              	.LASF622:
 14759 8b02 5F425344 		.ascii	"_BSD_WCHAR_T_\000"
 14759      5F574348 
 14759      41525F54 
 14759      5F00
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 386


 14760              	.LASF1230:
 14761 8b10 784D6973 		.ascii	"xMissedYield\000"
 14761      73656459 
 14761      69656C64 
 14761      00
 14762              	.LASF217:
 14763 8b1d 5F5F4C4C 		.ascii	"__LLFRACT_IBIT__ 0\000"
 14763      46524143 
 14763      545F4942 
 14763      49545F5F 
 14763      203000
 14764              	.LASF410:
 14765 8b30 5F524545 		.ascii	"_REENT_SMALL \000"
 14765      4E545F53 
 14765      4D414C4C 
 14765      2000
 14766              	.LASF944:
 14767 8b3e 706F7274 		.ascii	"portYIELD() vPortYieldFromISR()\000"
 14767      5949454C 
 14767      44282920 
 14767      76506F72 
 14767      74596965 
 14768              	.LASF808:
 14769 8b5e 5F54494D 		.ascii	"_TIMER_T_DECLARED \000"
 14769      45525F54 
 14769      5F444543 
 14769      4C415245 
 14769      442000
 14770              	.LASF943:
 14771 8b71 706F7274 		.ascii	"portBYTE_ALIGNMENT 8\000"
 14771      42595445 
 14771      5F414C49 
 14771      474E4D45 
 14771      4E542038 
 14772              	.LASF230:
 14773 8b86 5F5F5341 		.ascii	"__SACCUM_EPSILON__ 0x1P-7HK\000"
 14773      4343554D 
 14773      5F455053 
 14773      494C4F4E 
 14773      5F5F2030 
 14774              	.LASF969:
 14775 8ba2 494E434C 		.ascii	"INCLUDE_xTaskGetCurrentTaskHandle\000"
 14775      5544455F 
 14775      78546173 
 14775      6B476574 
 14775      43757272 
 14776              	.LASF1042:
 14777 8bc4 74736B53 		.ascii	"tskSTACK_FILL_BYTE ( 0xa5 )\000"
 14777      5441434B 
 14777      5F46494C 
 14777      4C5F4259 
 14777      54452028 
 14778              	.LASF1152:
 14779 8be0 5F726573 		.ascii	"_result\000"
 14779      756C7400 
 14780              	.LASF1275:
 14781 8be8 78526567 		.ascii	"xRegions\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 387


 14781      696F6E73 
 14781      00
 14782              	.LASF389:
 14783 8bf1 5F504F53 		.ascii	"_POSIX_SOURCE 1\000"
 14783      49585F53 
 14783      4F555243 
 14783      45203100 
 14784              	.LASF1050:
 14785 8c01 70727643 		.ascii	"prvCheckDelayedTasks() { register tskTCB *pxTCB; wh"
 14785      6865636B 
 14785      44656C61 
 14785      79656454 
 14785      61736B73 
 14786 8c34 696C6528 		.ascii	"ile( ( pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_E"
 14786      20282070 
 14786      78544342 
 14786      203D2028 
 14786      2074736B 
 14787 8c67 4E545259 		.ascii	"NTRY( pxDelayedTaskList ) ) != NULL ) { if( xTickCo"
 14787      28207078 
 14787      44656C61 
 14787      79656454 
 14787      61736B4C 
 14788 8c9a 756E7420 		.ascii	"unt < listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericLi"
 14788      3C206C69 
 14788      73744745 
 14788      545F4C49 
 14788      53545F49 
 14789 8ccd 73744974 		.ascii	"stItem ) ) ) { break; } vListRemove( &( pxTCB->xGen"
 14789      656D2029 
 14789      20292029 
 14789      207B2062 
 14789      7265616B 
 14790 8d00 65726963 		.ascii	"ericListItem ) ); if( pxTCB->xEventListItem.pvConta"
 14790      4C697374 
 14790      4974656D 
 14790      20292029 
 14790      3B206966 
 14791 8d33 696E6572 		.ascii	"iner ) { vListRemove( &( pxTCB->xEventListItem ) );"
 14791      2029207B 
 14791      20764C69 
 14791      73745265 
 14791      6D6F7665 
 14792 8d66 207D2070 		.ascii	" } prvAddTaskToReadyQueue( pxTCB ); } }\000"
 14792      72764164 
 14792      64546173 
 14792      6B546F52 
 14792      65616479 
 14793              	.LASF59:
 14794 8d8e 5F5F5549 		.ascii	"__UINT_FAST16_TYPE__ unsigned int\000"
 14794      4E545F46 
 14794      41535431 
 14794      365F5459 
 14794      50455F5F 
 14795              	.LASF295:
 14796 8db0 5F5F5548 		.ascii	"__UHA_IBIT__ 8\000"
 14796      415F4942 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 388


 14796      49545F5F 
 14796      203800
 14797              	.LASF648:
 14798 8dbf 5F5F6E65 		.ascii	"__need_wint_t \000"
 14798      65645F77 
 14798      696E745F 
 14798      742000
 14799              	.LASF240:
 14800 8dce 5F5F4143 		.ascii	"__ACCUM_EPSILON__ 0x1P-15K\000"
 14800      43554D5F 
 14800      45505349 
 14800      4C4F4E5F 
 14800      5F203078 
 14801              	.LASF255:
 14802 8de9 5F5F554C 		.ascii	"__ULACCUM_EPSILON__ 0x1P-32ULK\000"
 14802      41434355 
 14802      4D5F4550 
 14802      53494C4F 
 14802      4E5F5F20 
 14803              	.LASF152:
 14804 8e08 5F5F4C44 		.ascii	"__LDBL_DIG__ 15\000"
 14804      424C5F44 
 14804      49475F5F 
 14804      20313500 
 14805              	.LASF145:
 14806 8e18 5F5F4442 		.ascii	"__DBL_MIN__ ((double)2.2250738585072014e-308L)\000"
 14806      4C5F4D49 
 14806      4E5F5F20 
 14806      2828646F 
 14806      75626C65 
 14807              	.LASF534:
 14808 8e47 5F41746F 		.ascii	"_Atomic(T) struct { T volatile __val; }\000"
 14808      6D696328 
 14808      54292073 
 14808      74727563 
 14808      74207B20 
 14809              	.LASF849:
 14810 8e6f 5F737464 		.ascii	"_stdin_r(x) ((x)->_stdin)\000"
 14810      696E5F72 
 14810      28782920 
 14810      28287829 
 14810      2D3E5F73 
 14811              	.LASF690:
 14812 8e89 5F524545 		.ascii	"_REENT_MP_RESULT(ptr) ((ptr)->_mp->_result)\000"
 14812      4E545F4D 
 14812      505F5245 
 14812      53554C54 
 14812      28707472 
 14813              	.LASF1031:
 14814 8eb5 7461736B 		.ascii	"taskENABLE_INTERRUPTS() portENABLE_INTERRUPTS()\000"
 14814      454E4142 
 14814      4C455F49 
 14814      4E544552 
 14814      52555054 
 14815              	.LASF1294:
 14816 8ee5 756C4275 		.ascii	"ulBufferLength\000"
 14816      66666572 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 389


 14816      4C656E67 
 14816      746800
 14817              	.LASF75:
 14818 8ef4 5F5F5749 		.ascii	"__WINT_MIN__ 0U\000"
 14818      4E545F4D 
 14818      494E5F5F 
 14818      20305500 
 14819              	.LASF1204:
 14820 8f04 7847656E 		.ascii	"xGenericListItem\000"
 14820      65726963 
 14820      4C697374 
 14820      4974656D 
 14820      00
 14821              	.LASF1063:
 14822 8f15 5F6F6666 		.ascii	"_off_t\000"
 14822      5F7400
 14823              	.LASF177:
 14824 8f1c 5F5F4445 		.ascii	"__DEC64_EPSILON__ 1E-15DD\000"
 14824      4336345F 
 14824      45505349 
 14824      4C4F4E5F 
 14824      5F203145 
 14825              	.LASF806:
 14826 8f36 5F434C4F 		.ascii	"_CLOCKID_T_DECLARED \000"
 14826      434B4944 
 14826      5F545F44 
 14826      45434C41 
 14826      52454420 
 14827              	.LASF74:
 14828 8f4b 5F5F5749 		.ascii	"__WINT_MAX__ 0xffffffffU\000"
 14828      4E545F4D 
 14828      41585F5F 
 14828      20307866 
 14828      66666666 
 14829              	.LASF1313:
 14830 8f64 70785461 		.ascii	"pxTaskToResume\000"
 14830      736B546F 
 14830      52657375 
 14830      6D6500
 14831              	.LASF691:
 14832 8f73 5F524545 		.ascii	"_REENT_MP_RESULT_K(ptr) ((ptr)->_mp->_result_k)\000"
 14832      4E545F4D 
 14832      505F5245 
 14832      53554C54 
 14832      5F4B2870 
 14833              	.LASF479:
 14834 8fa3 5F5F6C6F 		.ascii	"__long_double_t long double\000"
 14834      6E675F64 
 14834      6F75626C 
 14834      655F7420 
 14834      6C6F6E67 
 14835              	.LASF47:
 14836 8fbf 5F5F494E 		.ascii	"__INT_LEAST16_TYPE__ short int\000"
 14836      545F4C45 
 14836      41535431 
 14836      365F5459 
 14836      50455F5F 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 390


 14837              	.LASF1149:
 14838 8fde 5F616464 		.ascii	"_add\000"
 14838      00
 14839              	.LASF266:
 14840 8fe3 5F5F5151 		.ascii	"__QQ_FBIT__ 7\000"
 14840      5F464249 
 14840      545F5F20 
 14840      3700
 14841              	.LASF721:
 14842 8ff1 5F494E54 		.ascii	"_INT16_T_DECLARED \000"
 14842      31365F54 
 14842      5F444543 
 14842      4C415245 
 14842      442000
 14843              	.LASF144:
 14844 9004 5F5F4442 		.ascii	"__DBL_MAX__ ((double)1.7976931348623157e+308L)\000"
 14844      4C5F4D41 
 14844      585F5F20 
 14844      2828646F 
 14844      75626C65 
 14845              	.LASF644:
 14846 9033 5F5F6C6F 		.ascii	"__lock_release_recursive(lock) (_CAST_VOID 0)\000"
 14846      636B5F72 
 14846      656C6561 
 14846      73655F72 
 14846      65637572 
 14847              	.LASF415:
 14848 9061 5F505452 		.ascii	"_PTR void *\000"
 14848      20766F69 
 14848      64202A00 
 14849              	.LASF216:
 14850 906d 5F5F4C4C 		.ascii	"__LLFRACT_FBIT__ 63\000"
 14850      46524143 
 14850      545F4642 
 14850      49545F5F 
 14850      20363300 
 14851              	.LASF1082:
 14852 9081 5F5F746D 		.ascii	"__tm_hour\000"
 14852      5F686F75 
 14852      7200
 14853              	.LASF342:
 14854 908b 5F5F7468 		.ascii	"__thumb__ 1\000"
 14854      756D625F 
 14854      5F203100 
 14855              	.LASF750:
 14856 9097 5F5F6E74 		.ascii	"__ntohl(_x) __bswap32(_x)\000"
 14856      6F686C28 
 14856      5F782920 
 14856      5F5F6273 
 14856      77617033 
 14857              	.LASF736:
 14858 90b1 5F424947 		.ascii	"_BIG_ENDIAN 4321\000"
 14858      5F454E44 
 14858      49414E20 
 14858      34333231 
 14858      00
 14859              	.LASF346:
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 391


 14860 90c2 5F5F4152 		.ascii	"__ARMEL__ 1\000"
 14860      4D454C5F 
 14860      5F203100 
 14861              	.LASF636:
 14862 90ce 5F5F6C6F 		.ascii	"__lock_init_recursive(lock) (_CAST_VOID 0)\000"
 14862      636B5F69 
 14862      6E69745F 
 14862      72656375 
 14862      72736976 
 14863              	.LASF559:
 14864 90f9 5F5F666F 		.ascii	"__format_arg(fmtarg) __attribute__((__format_arg__ "
 14864      726D6174 
 14864      5F617267 
 14864      28666D74 
 14864      61726729 
 14865 912c 28666D74 		.ascii	"(fmtarg)))\000"
 14865      61726729 
 14865      292900
 14866              	.LASF503:
 14867 9137 5F5F636F 		.ascii	"__compiler_membar() __asm __volatile(\" \" : : : \""
 14867      6D70696C 
 14867      65725F6D 
 14867      656D6261 
 14867      72282920 
 14868 9167 6D656D6F 		.ascii	"memory\")\000"
 14868      72792229 
 14868      00
 14869              	.LASF268:
 14870 9170 5F5F4851 		.ascii	"__HQ_FBIT__ 15\000"
 14870      5F464249 
 14870      545F5F20 
 14870      313500
 14871              	.LASF1272:
 14872 917f 70727649 		.ascii	"prvInitialiseTaskLists\000"
 14872      6E697469 
 14872      616C6973 
 14872      65546173 
 14872      6B4C6973 
 14873              	.LASF682:
 14874 9196 5F524545 		.ascii	"_REENT_INIT_MISC(var) do { struct _reent *_r = (var"
 14874      4E545F49 
 14874      4E49545F 
 14874      4D495343 
 14874      28766172 
 14875 91c9 293B205F 		.ascii	"); _r->_misc->_strtok_last = _NULL; _r->_misc->_mbl"
 14875      722D3E5F 
 14875      6D697363 
 14875      2D3E5F73 
 14875      7472746F 
 14876 91fc 656E5F73 		.ascii	"en_state.__count = 0; _r->_misc->_mblen_state.__val"
 14876      74617465 
 14876      2E5F5F63 
 14876      6F756E74 
 14876      203D2030 
 14877 922f 75652E5F 		.ascii	"ue.__wch = 0; _r->_misc->_wctomb_state.__count = 0;"
 14877      5F776368 
 14877      203D2030 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 392


 14877      3B205F72 
 14877      2D3E5F6D 
 14878 9262 205F722D 		.ascii	" _r->_misc->_wctomb_state.__value.__wch = 0; _r->_m"
 14878      3E5F6D69 
 14878      73632D3E 
 14878      5F776374 
 14878      6F6D625F 
 14879 9295 6973632D 		.ascii	"isc->_mbtowc_state.__count = 0; _r->_misc->_mbtowc_"
 14879      3E5F6D62 
 14879      746F7763 
 14879      5F737461 
 14879      74652E5F 
 14880 92c8 73746174 		.ascii	"state.__value.__wch = 0; _r->_misc->_mbrlen_state._"
 14880      652E5F5F 
 14880      76616C75 
 14880      652E5F5F 
 14880      77636820 
 14881 92fb 5F636F75 		.ascii	"_count = 0; _r->_misc->_mbrlen_state.__value.__wch "
 14881      6E74203D 
 14881      20303B20 
 14881      5F722D3E 
 14881      5F6D6973 
 14882 932e 3D20303B 		.ascii	"= 0; _r->_misc->_mbrtowc_state.__count = 0; _r->_mi"
 14882      205F722D 
 14882      3E5F6D69 
 14882      73632D3E 
 14882      5F6D6272 
 14883 9361 73632D3E 		.ascii	"sc->_mbrtowc_state.__value.__wch = 0; _r->_misc->_m"
 14883      5F6D6272 
 14883      746F7763 
 14883      5F737461 
 14883      74652E5F 
 14884 9394 62737274 		.ascii	"bsrtowcs_state.__count = 0; _r->_misc->_mbsrtowcs_s"
 14884      6F776373 
 14884      5F737461 
 14884      74652E5F 
 14884      5F636F75 
 14885 93c7 74617465 		.ascii	"tate.__value.__wch = 0; _r->_misc->_wcrtomb_state._"
 14885      2E5F5F76 
 14885      616C7565 
 14885      2E5F5F77 
 14885      6368203D 
 14886 93fa 5F636F75 		.ascii	"_count = 0; _r->_misc->_wcrtomb_state.__value.__wch"
 14886      6E74203D 
 14886      20303B20 
 14886      5F722D3E 
 14886      5F6D6973 
 14887 942d 203D2030 		.ascii	" = 0; _r->_misc->_wcsrtombs_state.__count = 0; _r->"
 14887      3B205F72 
 14887      2D3E5F6D 
 14887      6973632D 
 14887      3E5F7763 
 14888 9460 5F6D6973 		.ascii	"_misc->_wcsrtombs_state.__value.__wch = 0; _r->_mis"
 14888      632D3E5F 
 14888      77637372 
 14888      746F6D62 
 14888      735F7374 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 393


 14889 9493 632D3E5F 		.ascii	"c->_l64a_buf[0] = '\\0'; _r->_misc->_getdate_err = "
 14889      6C363461 
 14889      5F627566 
 14889      5B305D20 
 14889      3D20275C 
 14890 94c5 303B207D 		.ascii	"0; } while (0)\000"
 14890      20776869 
 14890      6C652028 
 14890      302900
 14891              	.LASF578:
 14892 94d4 5F5F6461 		.ascii	"__datatype_type_tag(kind,type) \000"
 14892      74617479 
 14892      70655F74 
 14892      7970655F 
 14892      74616728 
 14893              	.LASF626:
 14894 94f4 5F5F6E65 		.ascii	"__need___va_list\000"
 14894      65645F5F 
 14894      5F76615F 
 14894      6C697374 
 14894      00
 14895              	.LASF1046:
 14896 9505 74736B53 		.ascii	"tskSUSPENDED_CHAR ( ( signed char ) 'S' )\000"
 14896      55535045 
 14896      4E444544 
 14896      5F434841 
 14896      52202820 
 14897              	.LASF77:
 14898 952f 5F5F5349 		.ascii	"__SIZE_MAX__ 0xffffffffU\000"
 14898      5A455F4D 
 14898      41585F5F 
 14898      20307866 
 14898      66666666 
 14899              	.LASF1215:
 14900 9548 7844656C 		.ascii	"xDelayedTaskList1\000"
 14900      61796564 
 14900      5461736B 
 14900      4C697374 
 14900      3100
 14901              	.LASF1216:
 14902 955a 7844656C 		.ascii	"xDelayedTaskList2\000"
 14902      61796564 
 14902      5461736B 
 14902      4C697374 
 14902      3200
 14903              	.LASF1165:
 14904 956c 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 14904      72746F77 
 14904      63735F73 
 14904      74617465 
 14904      00
 14905              	.LASF780:
 14906 957d 5F494E5F 		.ascii	"_IN_ADDR_T_DECLARED \000"
 14906      41444452 
 14906      5F545F44 
 14906      45434C41 
 14906      52454420 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 394


 14907              	.LASF542:
 14908 9592 5F5F6E6F 		.ascii	"__nonnull(x) __attribute__((__nonnull__(x)))\000"
 14908      6E6E756C 
 14908      6C287829 
 14908      205F5F61 
 14908      74747269 
 14909              	.LASF70:
 14910 95bf 5F5F4C4F 		.ascii	"__LONG_MAX__ 0x7fffffffL\000"
 14910      4E475F4D 
 14910      41585F5F 
 14910      20307837 
 14910      66666666 
 14911              	.LASF521:
 14912 95d8 5F5F766F 		.ascii	"__volatile volatile\000"
 14912      6C617469 
 14912      6C652076 
 14912      6F6C6174 
 14912      696C6500 
 14913              	.LASF723:
 14914 95ec 5F5F696E 		.ascii	"__int16_t_defined 1\000"
 14914      7431365F 
 14914      745F6465 
 14914      66696E65 
 14914      64203100 
 14915              	.LASF761:
 14916 9600 74696D65 		.ascii	"timercmp(tvp,uvp,cmp) (((tvp)->tv_sec == (uvp)->tv_"
 14916      72636D70 
 14916      28747670 
 14916      2C757670 
 14916      2C636D70 
 14917 9633 73656329 		.ascii	"sec) ? ((tvp)->tv_usec cmp (uvp)->tv_usec) : ((tvp)"
 14917      203F2028 
 14917      28747670 
 14917      292D3E74 
 14917      765F7573 
 14918 9666 2D3E7476 		.ascii	"->tv_sec cmp (uvp)->tv_sec))\000"
 14918      5F736563 
 14918      20636D70 
 14918      20287576 
 14918      70292D3E 
 14919              	.LASF1043:
 14920 9683 74736B42 		.ascii	"tskBLOCKED_CHAR ( ( signed char ) 'B' )\000"
 14920      4C4F434B 
 14920      45445F43 
 14920      48415220 
 14920      28202820 
 14921              	.LASF667:
 14922 96ab 5F52414E 		.ascii	"_RAND48_ADD (0x000b)\000"
 14922      4434385F 
 14922      41444420 
 14922      28307830 
 14922      30306229 
 14923              	.LASF876:
 14924 96c0 45584954 		.ascii	"EXIT_FAILURE 1\000"
 14924      5F464149 
 14924      4C555245 
 14924      203100
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 395


 14925              	.LASF333:
 14926 96cf 5F5F4152 		.ascii	"__ARM_FEATURE_LDREX 7\000"
 14926      4D5F4645 
 14926      41545552 
 14926      455F4C44 
 14926      52455820 
 14927              	.LASF786:
 14928 96e5 5F425344 		.ascii	"_BSDTYPES_DEFINED \000"
 14928      54595045 
 14928      535F4445 
 14928      46494E45 
 14928      442000
 14929              	.LASF630:
 14930 96f8 5F535953 		.ascii	"_SYS__TYPES_H \000"
 14930      5F5F5459 
 14930      5045535F 
 14930      482000
 14931              	.LASF1033:
 14932 9707 7461736B 		.ascii	"taskSCHEDULER_RUNNING 1\000"
 14932      53434845 
 14932      44554C45 
 14932      525F5255 
 14932      4E4E494E 
 14933              	.LASF1200:
 14934 971f 756C5061 		.ascii	"ulParameters\000"
 14934      72616D65 
 14934      74657273 
 14934      00
 14935              	.LASF743:
 14936 972c 5044505F 		.ascii	"PDP_ENDIAN _PDP_ENDIAN\000"
 14936      454E4449 
 14936      414E205F 
 14936      5044505F 
 14936      454E4449 
 14937              	.LASF220:
 14938 9743 5F5F4C4C 		.ascii	"__LLFRACT_EPSILON__ 0x1P-63LLR\000"
 14938      46524143 
 14938      545F4550 
 14938      53494C4F 
 14938      4E5F5F20 
 14939              	.LASF1045:
 14940 9762 74736B44 		.ascii	"tskDELETED_CHAR ( ( signed char ) 'D' )\000"
 14940      454C4554 
 14940      45445F43 
 14940      48415220 
 14940      28202820 
 14941              	.LASF335:
 14942 978a 5F5F4152 		.ascii	"__ARM_FEATURE_SIMD32\000"
 14942      4D5F4645 
 14942      41545552 
 14942      455F5349 
 14942      4D443332 
 14943              	.LASF368:
 14944 979f 5F4E4557 		.ascii	"_NEWLIB_VERSION \"2.5.0\"\000"
 14944      4C49425F 
 14944      56455253 
 14944      494F4E20 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 396


 14944      22322E35 
 14945              	.LASF814:
 14946 97b7 5F666C6F 		.ascii	"_flockfile(fp) (((fp)->_flags & __SSTR) ? 0 : __loc"
 14946      636B6669 
 14946      6C652866 
 14946      70292028 
 14946      28286670 
 14947 97ea 6B5F6163 		.ascii	"k_acquire_recursive((fp)->_lock))\000"
 14947      71756972 
 14947      655F7265 
 14947      63757273 
 14947      69766528 
 14948              	.LASF637:
 14949 980c 5F5F6C6F 		.ascii	"__lock_close(lock) (_CAST_VOID 0)\000"
 14949      636B5F63 
 14949      6C6F7365 
 14949      286C6F63 
 14949      6B292028 
 14950              	.LASF1124:
 14951 982e 5F5F7367 		.ascii	"__sglue\000"
 14951      6C756500 
 14952              	.LASF810:
 14953 9836 5F535953 		.ascii	"_SYS__PTHREADTYPES_H_ \000"
 14953      5F5F5054 
 14953      48524541 
 14953      44545950 
 14953      45535F48 
 14954              	.LASF95:
 14955 984d 5F5F494E 		.ascii	"__INT16_C(c) c\000"
 14955      5431365F 
 14955      43286329 
 14955      206300
 14956              	.LASF1008:
 14957 985c 74726163 		.ascii	"traceTASK_RESUME_FROM_ISR(pxTaskToResume) \000"
 14957      65544153 
 14957      4B5F5245 
 14957      53554D45 
 14957      5F46524F 
 14958              	.LASF416:
 14959 9887 5F414E44 		.ascii	"_AND ,\000"
 14959      202C00
 14960              	.LASF913:
 14961 988e 636F6E66 		.ascii	"configCHECK_FOR_STACK_OVERFLOW 2\000"
 14961      69674348 
 14961      45434B5F 
 14961      464F525F 
 14961      53544143 
 14962              	.LASF828:
 14963 98af 5F5F534F 		.ascii	"__SOFF 0x1000\000"
 14963      46462030 
 14963      78313030 
 14963      3000
 14964              	.LASF561:
 14965 98bd 5F5F7374 		.ascii	"__strftimelike(fmtarg,firstvararg) __attribute__((_"
 14965      72667469 
 14965      6D656C69 
 14965      6B652866 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 397


 14965      6D746172 
 14966 98f0 5F666F72 		.ascii	"_format__ (__strftime__, fmtarg, firstvararg)))\000"
 14966      6D61745F 
 14966      5F20285F 
 14966      5F737472 
 14966      6674696D 
 14967              	.LASF1088:
 14968 9920 5F5F746D 		.ascii	"__tm_isdst\000"
 14968      5F697364 
 14968      737400
 14969              	.LASF576:
 14970 992b 5F5F4445 		.ascii	"__DEQUALIFY(type,var) ((type)(__uintptr_t)(const vo"
 14970      5155414C 
 14970      49465928 
 14970      74797065 
 14970      2C766172 
 14971 995e 6C617469 		.ascii	"latile void *)(var))\000"
 14971      6C652076 
 14971      6F696420 
 14971      2A292876 
 14971      61722929 
 14972              	.LASF782:
 14973 9973 5F5F755F 		.ascii	"__u_char_defined \000"
 14973      63686172 
 14973      5F646566 
 14973      696E6564 
 14973      2000
 14974              	.LASF10:
 14975 9985 5F5F4154 		.ascii	"__ATOMIC_ACQ_REL 4\000"
 14975      4F4D4943 
 14975      5F414351 
 14975      5F52454C 
 14975      203400
 14976              	.LASF40:
 14977 9998 5F5F494E 		.ascii	"__INT32_TYPE__ long int\000"
 14977      5433325F 
 14977      54595045 
 14977      5F5F206C 
 14977      6F6E6720 
 14978              	.LASF527:
 14979 99b0 5F5F7061 		.ascii	"__packed __attribute__((__packed__))\000"
 14979      636B6564 
 14979      205F5F61 
 14979      74747269 
 14979      62757465 
 14980              	.LASF140:
 14981 99d5 5F5F4442 		.ascii	"__DBL_MIN_10_EXP__ (-307)\000"
 14981      4C5F4D49 
 14981      4E5F3130 
 14981      5F455850 
 14981      5F5F2028 
 14982              	.LASF920:
 14983 99ef 494E434C 		.ascii	"INCLUDE_vTaskDelete 1\000"
 14983      5544455F 
 14983      76546173 
 14983      6B44656C 
 14983      65746520 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 398


 14984              	.LASF1271:
 14985 9a05 784C6973 		.ascii	"xListIsEmpty\000"
 14985      74497345 
 14985      6D707479 
 14985      00
 14986              	.LASF373:
 14987 9a12 5F57414E 		.ascii	"_WANT_IO_LONG_LONG 1\000"
 14987      545F494F 
 14987      5F4C4F4E 
 14987      475F4C4F 
 14987      4E472031 
 14988              	.LASF587:
 14989 9a27 5F5F6173 		.ascii	"__asserts_shared(...) __lock_annotate(assert_shared"
 14989      73657274 
 14989      735F7368 
 14989      61726564 
 14989      282E2E2E 
 14990 9a5a 5F6C6F63 		.ascii	"_lock(__VA_ARGS__))\000"
 14990      6B285F5F 
 14990      56415F41 
 14990      5247535F 
 14990      5F292900 
 14991              	.LASF632:
 14992 9a6e 5F5F5359 		.ascii	"__SYS_LOCK_H__ \000"
 14992      535F4C4F 
 14992      434B5F48 
 14992      5F5F2000 
 14993              	.LASF1225:
 14994 9a7e 7578546F 		.ascii	"uxTopUsedPriority\000"
 14994      70557365 
 14994      64507269 
 14994      6F726974 
 14994      7900
 14995              	.LASF894:
 14996 9a90 65727251 		.ascii	"errQUEUE_BLOCKED ( -4 )\000"
 14996      55455545 
 14996      5F424C4F 
 14996      434B4544 
 14996      2028202D 
 14997              	.LASF1081:
 14998 9aa8 5F5F746D 		.ascii	"__tm_min\000"
 14998      5F6D696E 
 14998      00
 14999              	.LASF996:
 15000 9ab1 74726163 		.ascii	"traceQUEUE_SEND_FROM_ISR_FAILED(pxQueue) \000"
 15000      65515545 
 15000      55455F53 
 15000      454E445F 
 15000      46524F4D 
 15001              	.LASF669:
 15002 9adb 5F524545 		.ascii	"_REENT_ASCTIME_SIZE 26\000"
 15002      4E545F41 
 15002      53435449 
 15002      4D455F53 
 15002      495A4520 
 15003              	.LASF1246:
 15004 9af2 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 399


 15004      6B476574 
 15004      43757272 
 15004      656E7454 
 15004      61736B48 
 15005              	.LASF805:
 15006 9b0c 5F5F636C 		.ascii	"__clockid_t_defined \000"
 15006      6F636B69 
 15006      645F745F 
 15006      64656669 
 15006      6E656420 
 15007              	.LASF390:
 15008 9b21 5F504F53 		.ascii	"_POSIX_C_SOURCE\000"
 15008      49585F43 
 15008      5F534F55 
 15008      52434500 
 15009              	.LASF80:
 15010 9b31 5F5F5549 		.ascii	"__UINTMAX_MAX__ 0xffffffffffffffffULL\000"
 15010      4E544D41 
 15010      585F4D41 
 15010      585F5F20 
 15010      30786666 
 15011              	.LASF1179:
 15012 9b57 78497465 		.ascii	"xItemValue\000"
 15012      6D56616C 
 15012      756500
 15013              	.LASF137:
 15014 9b62 5F5F4442 		.ascii	"__DBL_MANT_DIG__ 53\000"
 15014      4C5F4D41 
 15014      4E545F44 
 15014      49475F5F 
 15014      20353300 
 15015              	.LASF1241:
 15016 9b76 70785443 		.ascii	"pxTCB\000"
 15016      4200
 15017              	.LASF212:
 15018 9b7c 5F5F554C 		.ascii	"__ULFRACT_IBIT__ 0\000"
 15018      46524143 
 15018      545F4942 
 15018      49545F5F 
 15018      203000
 15019              	.LASF1238:
 15020 9b8f 78547261 		.ascii	"xTracing\000"
 15020      63696E67 
 15020      00
 15021              	.LASF785:
 15022 9b98 5F5F755F 		.ascii	"__u_long_defined \000"
 15022      6C6F6E67 
 15022      5F646566 
 15022      696E6564 
 15022      2000
 15023              	.LASF1206:
 15024 9baa 75785072 		.ascii	"uxPriority\000"
 15024      696F7269 
 15024      747900
 15025              	.LASF69:
 15026 9bb5 5F5F494E 		.ascii	"__INT_MAX__ 0x7fffffff\000"
 15026      545F4D41 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 400


 15026      585F5F20 
 15026      30783766 
 15026      66666666 
 15027              	.LASF49:
 15028 9bcc 5F5F494E 		.ascii	"__INT_LEAST64_TYPE__ long long int\000"
 15028      545F4C45 
 15028      41535436 
 15028      345F5459 
 15028      50455F5F 
 15029              	.LASF226:
 15030 9bef 5F5F5341 		.ascii	"__SACCUM_FBIT__ 7\000"
 15030      4343554D 
 15030      5F464249 
 15030      545F5F20 
 15030      3700
 15031              	.LASF928:
 15032 9c01 636F6E66 		.ascii	"configLIBRARY_KERNEL_INTERRUPT_PRIORITY 15\000"
 15032      69674C49 
 15032      42524152 
 15032      595F4B45 
 15032      524E454C 
 15033              	.LASF779:
 15034 9c2c 71756164 		.ascii	"quad quad_t\000"
 15034      20717561 
 15034      645F7400 
 15035              		.ident	"GCC: (bleeding-edge-toolchain) 6.3.0"
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 401


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:59     .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:56     .bss.pxCurrentTCB:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:62     .bss.pxReadyTasksLists:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:65     .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:68     .bss.xDelayedTaskList1:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:71     .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:74     .bss.xDelayedTaskList2:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:77     .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:80     .bss.pxDelayedTaskList:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:83     .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:86     .bss.pxOverflowDelayedTaskList:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:89     .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:92     .bss.xPendingReadyList:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:95     .bss.xPendingReadyList:0000000000000000 xPendingReadyList
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:98     .bss.xTasksWaitingTermination:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:101    .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:104    .bss.uxTasksDeleted:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:107    .bss.uxTasksDeleted:0000000000000000 uxTasksDeleted
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:110    .bss.xSuspendedTaskList:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:113    .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:116    .bss.uxCurrentNumberOfTasks:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:119    .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:122    .bss.xTickCount:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:125    .bss.xTickCount:0000000000000000 xTickCount
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:128    .bss.uxTopUsedPriority:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:131    .bss.uxTopUsedPriority:0000000000000000 uxTopUsedPriority
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:134    .bss.uxTopReadyPriority:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:137    .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:140    .bss.xSchedulerRunning:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:143    .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:146    .bss.uxSchedulerSuspended:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:149    .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:152    .bss.uxMissedTicks:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:155    .bss.uxMissedTicks:0000000000000000 uxMissedTicks
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:158    .bss.xMissedYield:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:161    .bss.xMissedYield:0000000000000000 xMissedYield
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:164    .bss.xNumOfOverflows:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:167    .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:170    .bss.uxTaskNumber:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:173    .bss.uxTaskNumber:0000000000000000 uxTaskNumber
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:176    .bss.pcStatsString:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:179    .bss.pcStatsString:0000000000000000 pcStatsString
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:182    .bss.ulTaskSwitchedInTime:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:185    .bss.ulTaskSwitchedInTime:0000000000000000 ulTaskSwitchedInTime
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:188    .bss.pcTraceBuffer:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:191    .bss.pcTraceBuffer:0000000000000000 pcTraceBuffer
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:194    .bss.pcTraceBufferStart:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:197    .bss.pcTraceBufferStart:0000000000000000 pcTraceBufferStart
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:200    .bss.pcTraceBufferEnd:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:203    .bss.pcTraceBufferEnd:0000000000000000 pcTraceBufferEnd
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:206    .bss.xTracing:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:209    .bss.xTracing:0000000000000000 xTracing
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:212    .data.uxPreviousTask:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:215    .data.uxPreviousTask:0000000000000000 uxPreviousTask
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:218    .bss.pcStatusString:0000000000000000 $d
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 402


C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:221    .bss.pcStatusString:0000000000000000 pcStatusString
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:224    .text.xTaskGenericCreate:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:231    .text.xTaskGenericCreate:0000000000000000 xTaskGenericCreate
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3575   .text.prvAllocateTCBAndStack:0000000000000000 prvAllocateTCBAndStack
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3289   .text.prvInitialiseTCBVariables:0000000000000000 prvInitialiseTCBVariables
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3379   .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:438    .text.xTaskGenericCreate:000000000000013c $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:449    .text.vTaskDelete:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:456    .text.vTaskDelete:0000000000000000 vTaskDelete
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:556    .text.vTaskDelete:0000000000000084 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:565    .text.vTaskDelayUntil:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:572    .text.vTaskDelayUntil:0000000000000000 vTaskDelayUntil
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1618   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1660   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:707    .text.vTaskDelayUntil:00000000000000c4 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:715    .text.vTaskDelay:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:722    .text.vTaskDelay:0000000000000000 vTaskDelay
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:812    .text.vTaskDelay:000000000000007c $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:820    .text.uxTaskPriorityGet:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:827    .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:877    .text.uxTaskPriorityGet:0000000000000030 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:882    .text.vTaskPrioritySet:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:889    .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1059   .text.vTaskPrioritySet:00000000000000f0 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1066   .text.vTaskSuspend:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1073   .text.vTaskSuspend:0000000000000000 vTaskSuspend
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2577   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1178   .text.vTaskSuspend:0000000000000088 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1186   .text.xTaskIsTaskSuspended:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1193   .text.xTaskIsTaskSuspended:0000000000000000 xTaskIsTaskSuspended
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1251   .text.xTaskIsTaskSuspended:000000000000003c $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1257   .text.vTaskResume:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1264   .text.vTaskResume:0000000000000000 vTaskResume
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1357   .text.vTaskResume:0000000000000084 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1364   .text.xTaskResumeFromISR:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1371   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1469   .text.xTaskResumeFromISR:000000000000008c $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1478   .rodata:0000000000000000 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1482   .text.vTaskStartScheduler:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1489   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1557   .text.vTaskStartScheduler:0000000000000050 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3248   .text.prvIdleTask:0000000000000000 prvIdleTask
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1566   .text.vTaskEndScheduler:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1573   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1606   .text.vTaskEndScheduler:000000000000001c $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1611   .text.vTaskSuspendAll:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1648   .text.vTaskSuspendAll:0000000000000018 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1653   .text.xTaskResumeAll:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2411   .text.vTaskIncrementTick:0000000000000000 vTaskIncrementTick
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1825   .text.xTaskResumeAll:00000000000000e0 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1837   .text.xTaskGetTickCount:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1844   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1879   .text.xTaskGetTickCount:0000000000000020 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1884   .text.xTaskGetTickCountFromISR:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1891   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1918   .text.xTaskGetTickCountFromISR:0000000000000010 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1923   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 403


C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1930   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1957   .text.uxTaskGetNumberOfTasks:0000000000000010 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1966   .text.vTaskList:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:1973   .text.vTaskList:0000000000000000 vTaskList
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3664   .text.prvListTaskWithinSingleList:0000000000000000 prvListTaskWithinSingleList
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2107   .text.vTaskList:00000000000000cc $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2118   .text.vTaskGetRunTimeStats:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2125   .text.vTaskGetRunTimeStats:0000000000000000 vTaskGetRunTimeStats
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3806   .text.prvGenerateRunTimeStatsForTasksInList:0000000000000000 prvGenerateRunTimeStatsForTasksInList
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2269   .text.vTaskGetRunTimeStats:00000000000000dc $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2282   .text.vTaskStartTrace:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2289   .text.vTaskStartTrace:0000000000000000 vTaskStartTrace
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2339   .text.vTaskStartTrace:0000000000000038 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2347   .text.ulTaskEndTrace:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2354   .text.ulTaskEndTrace:0000000000000000 ulTaskEndTrace
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2397   .text.ulTaskEndTrace:000000000000002c $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2404   .text.vTaskIncrementTick:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2558   .text.vTaskIncrementTick:00000000000000c0 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2570   .text.vTaskSwitchContext:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2788   .text.vTaskSwitchContext:0000000000000144 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:4390   .rodata.ucExpectedStackBytes.6029:0000000000000000 ucExpectedStackBytes.6029
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2805   .text.vTaskPlaceOnEventList:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2812   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2905   .text.vTaskPlaceOnEventList:0000000000000088 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2914   .text.xTaskRemoveFromEventList:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:2921   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3033   .text.xTaskRemoveFromEventList:0000000000000098 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3042   .text.vTaskSetTimeOutState:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3049   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3088   .text.vTaskSetTimeOutState:0000000000000024 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3094   .text.xTaskCheckForTimeOut:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3101   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3196   .text.xTaskCheckForTimeOut:0000000000000080 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3202   .text.vTaskMissedYield:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3209   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3237   .text.vTaskMissedYield:0000000000000014 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3242   .text.prvIdleTask:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3469   .text.prvCheckTasksWaitingTermination:0000000000000000 prvCheckTasksWaitingTermination
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3278   .text.prvIdleTask:000000000000001c $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3283   .text.prvInitialiseTCBVariables:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3373   .text.prvInitialiseTaskLists:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3451   .text.prvInitialiseTaskLists:0000000000000060 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3463   .text.prvCheckTasksWaitingTermination:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:4090   .text.prvDeleteTCB:0000000000000000 prvDeleteTCB
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3561   .text.prvCheckTasksWaitingTermination:0000000000000074 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3569   .text.prvAllocateTCBAndStack:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3658   .text.prvListTaskWithinSingleList:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3965   .text.usTaskCheckFreeStackSpace:0000000000000000 usTaskCheckFreeStackSpace
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3784   .text.prvListTaskWithinSingleList:00000000000000b4 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3800   .text.prvGenerateRunTimeStatsForTasksInList:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3951   .text.prvGenerateRunTimeStatsForTasksInList:00000000000000d8 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:3959   .text.usTaskCheckFreeStackSpace:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:4021   .text.uxTaskGetStackHighWaterMark:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:4028   .text.uxTaskGetStackHighWaterMark:0000000000000000 uxTaskGetStackHighWaterMark
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:4079   .text.uxTaskGetStackHighWaterMark:0000000000000034 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:4084   .text.prvDeleteTCB:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:4125   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 404


C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:4132   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:4166   .text.xTaskGetCurrentTaskHandle:0000000000000018 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:4171   .text.vTaskPriorityInherit:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:4178   .text.vTaskPriorityInherit:0000000000000000 vTaskPriorityInherit
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:4283   .text.vTaskPriorityInherit:0000000000000098 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:4290   .text.vTaskPriorityDisinherit:0000000000000000 $t
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:4297   .text.vTaskPriorityDisinherit:0000000000000000 vTaskPriorityDisinherit
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:4381   .text.vTaskPriorityDisinherit:0000000000000074 $d
C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s:4387   .rodata.ucExpectedStackBytes.6029:0000000000000000 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.2d7fdbb0490084bf6f54c29442c0dcbf
                           .group:0000000000000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:0000000000000000 wm4.newlib.h.18.10680ba4e7596ffe0380d5395a330371
                           .group:0000000000000000 wm4.features.h.22.692cd1f2e947ca7b8fea300222f5f1f2
                           .group:0000000000000000 wm4.config.h.219.341816d1cc54601a0d2a3e284e3d034c
                           .group:0000000000000000 wm4._ansi.h.23.84af8eb8cd468d25cc5f45f5eb13ec51
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.f745493e6f8d3a68c4c4a8153fc4d157
                           .group:0000000000000000 wm4.stddef.h.39.a231a87e043a95babfd62cebe88e50f8
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:0000000000000000 wm4.reent.h.17.a65699cb51f4bd6809a652bc416a088d
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.30.bbece7fa40993a78092dcc5805132560
                           .group:0000000000000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.e75815e468af71def73c328e3aabfd80
                           .group:0000000000000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.56.f7bb76d8eb43fb7e79a949819dbf4bda
                           .group:0000000000000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:0000000000000000 wm4.projdefs.h.55.cdae9ead80b5a2ac004f41bb277aad45
                           .group:0000000000000000 wm4.FreeRTOSConfig.h.51.1615eb25212d1832577eeb164f44c1ff
                           .group:0000000000000000 wm4.portmacro.h.56.a47bdd86bc36d334ca6056492e2d709f
                           .group:0000000000000000 wm4.portable.h.311.02653c2286cc0addcb8e7b32211fdde5
                           .group:0000000000000000 wm4.mpu_wrappers.h.55.46a4a008a193040c38098e9a5f07ff9d
                           .group:0000000000000000 wm4.FreeRTOS.h.136.8d26691f6e0e832140922099f6373851
                           .group:0000000000000000 wm4.list.h.90.ffdb657f66139f74e2982d5a33457923
                           .group:0000000000000000 wm4.task.h.75.c8b0094d5cf47472764418dc8b9bb7f5
                           .group:0000000000000000 wm4.StackMacros.h.55.da408fad06dd47eba8bbdebfb89bc412

UNDEFINED SYMBOLS
pxPortInitialiseStack
vPortEnterCritical
vListInsertEnd
vPortExitCritical
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccszHnxa.s 			page 405


vPortYieldFromISR
vListRemove
vListInsert
xPortStartScheduler
ulHighFrequencyTimerTicks
vPortEndScheduler
strlen
vApplicationStackOverflowHook
memcmp
strncpy
vListInitialiseItem
vListInitialise
pvPortMalloc
vPortFree
memset
sprintf
strcat
